{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","get","pageContext","previous","next","slug","editUrl","replace","shareUrl","encodeURIComponent","frontmatter","title","location","fields","style","scale","display","fontFamily","marginBottom","rhythm","marginTop","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","html","href","target","rel","boxShadow","textDecoration","color","to","flexWrap","justifyContent","listStyle","padding","React","Component","pageQuery"],"mappings":"sRAUA,IAGMA,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYC,IAAIL,KAAKC,MAAO,gCAF3B,EAG0BD,KAAKC,MAAMK,YAApCC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAAMC,EAHjB,EAGiBA,KAClBC,EAAO,kFAAoFD,EAAKE,QACpG,MACA,IAFW,MAIPC,EAAQ,yCAA4CC,mBACrDd,EAAKe,YAAYC,MADsD,oCACbN,GAE/D,OACE,kBAAC,IAAD,CAAQO,SAAUhB,KAAKC,MAAMe,SAAUD,MAAOX,GAC5C,kBAAC,IAAD,CAAKW,MAAOhB,EAAKe,YAAYC,MAAON,KAAMV,EAAKkB,OAAOR,OACtD,4BAAKV,EAAKe,YAAYC,OACtB,uBACEG,MAAK,iBACAC,aAAM,IADN,CAEHC,QAAS,QACTC,WAAY,aACZC,aAAcC,YAAO,GACrBC,UAAWD,aAAQ,MAGpBxB,EAAKe,YAAYW,KATpB,MAUSC,YAAkB3B,EAAK4B,aAEhC,yBAAKC,wBAAyB,CAAEC,OAAQ9B,EAAK+B,QAC7C,2BACE,uBAAGC,KAAMnB,EAAUoB,OAAO,SAASC,IAAI,uBAAvC,oBADF,MAKE,uBAAGF,KAAMrB,EAASsB,OAAO,SAASC,IAAI,uBAAtC,mBAIF,wBACEf,MAAO,CACLG,WAAY,aACZG,UAAWD,YAAO,OAGpB,kBAAC,OAAD,CACEL,MAAO,CACLgB,UAAW,OACXC,eAAgB,OAChBC,MAAO,WAETC,GAAI,KANN,oBAWF,kBAAC,IAAD,MACA,wBACEnB,MAAO,CACLE,QAAS,OACTkB,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACGlC,GACC,kBAAC,OAAD,CAAM8B,GAAI9B,EAASU,OAAOR,KAAMwB,IAAI,QAApC,KACK1B,EAASO,YAAYC,QAI9B,4BACGP,GACC,kBAAC,OAAD,CAAM6B,GAAI7B,EAAKS,OAAOR,KAAMwB,IAAI,QAC7BzB,EAAKM,YAAYC,MADpB,U,GA1EiB2B,IAAMC,WAqFtB9C,YAER,IAAM+C,EAAS","file":"component---src-templates-blog-post-js-595b5c48a04ae1e1a96b.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\nimport { formatReadingTime } from '../utils/helpers'\nimport { rhythm, scale } from '../utils/typography'\n\nconst GITHUB_USERNAME = 'ergenekonyigit'\nconst GITHUB_REPO_NAME = 'ergenekonyigit.github.io'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\n    const { previous, next, slug } = this.props.pageContext\n    const editUrl = `https://github.com/${GITHUB_USERNAME}/${GITHUB_REPO_NAME}/edit/blog/src/pages/${slug.replace(\n      /\\//g,\n      ''\n    )}.md`\n    const shareUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(\n      `${post.frontmatter.title} https://ergenekonyigit.github.io${slug}`\n    )}`\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} slug={post.fields.slug} />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: 'block',\n            fontFamily: 'sans-serif',\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n          {` • ${formatReadingTime(post.timeToRead)}`}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <p>\n          <a href={shareUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            Share on Twitter\n          </a>\n          {` • `}\n          <a href={editUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            Edit on GitHub\n          </a>\n        </p>\n        <h3\n          style={{\n            fontFamily: 'sans-serif',\n            marginTop: rhythm(0.25),\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: '#ffffff',\n            }}\n            to={'/'}\n          >\n            Ergenekon Yiğit\n          </Link>\n        </h3>\n        <Bio />\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n"],"sourceRoot":""}