{"componentChunkName":"component---src-templates-blog-post-js","path":"/eslint-stylelint-prettier-kullanimi/","result":{"data":{"site":{"siteMetadata":{"title":"Blog","author":"Ergenekon Yigit"}},"markdownRemark":{"id":"3a8b8f4b-8fb7-5cb6-88c4-3badca3cbfa5","html":"<p>Kod yazan her insanın kendine özgü bir yazım stili var. Bazı diller farklılıkların önüne geçebilmek için kendi style guidelarına göre formatterlara sahipler. Go(gofmt) ve ReasonML(refmt) bunlara örnek gösterilebilir. Javascript dilinde bu tarz bir çözüm dil ile birlikte gelmiyor, bunun için çeşitli yardımcı paketler kullanmamız gerekmekte. Prettier bu konuda en popüler çözüm olarak göze çarpıyor. Ancak daha önce bu konuda uğraşanlar da anlayacaktır ki projede hem linter hem de formatterı aynı anda kullanmak istersek bazı sorunlar ortaya çıkabiliyor. Örneğin linterın kuralları ile formatterın kuralları birbirini ezip kodu okunamaz hale getirebiliyor. VSCode içerisinde bu paketlerin uyumlu çalışmasını sağlamak için yapmamız gereken birkaç şey var.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> --dev prettier-eslint prettier-eslint-cli prettier-stylelint</code></pre></div>\n<p>VSCode içerisinde entegrasyon için bu 3 aracın eklentisini yüklememiz gerek. Eklentiler;</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\">Prettier</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\">ESLint</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=shinnn.stylelint\">StyleLint</a></li>\n</ul>\n<p>Ardından projemiz içerisinde <code>.vscode/settings.json</code> içerisine şu ayarları eklemeliyiz.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// .vscode/settings.json</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"prettier.eslintIntegration\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"prettier.stylelintIntegration\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"eslint.autoFixOnSave\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"editor.formatOnSave\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code>.eslintrc.json</code> dosyasına prettierın ruleslarını kullanacağımızı belirtiyoruz.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// .eslintrc.json</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"parser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"babel-eslint\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"extends\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"react-app\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"plugin:prettier/recommended\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"prettier/prettier\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"jsx-a11y/href-no-hash\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"react/jsx-filename-extension\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">\"extensions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\".js\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".jsx\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code>package.json</code> içersine bu scriptleri ekledikten sonra işlem tamamdır.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// package.json</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"fix-code\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier-eslint --write 'source/**/*.{js,jsx}' \"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"fix-styles\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier-stylelint --write 'source/**/*.{css,scss}' \"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Artık projede kaç kişi çalışıyorsa çalışın, codebase tek elden çıkmış şekilde olacak. Kod okunabilirliği açısından önemli detaylardan birini halletmiş olduk.</p>\n<p>Dilerseniz <code>husky</code> tarzı pre-commit araçları kullanarak her commit atıldığında otomatik tüm codebasei formatlayabilirsiniz.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// .lintstagedrc</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"*.js\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"yarn fix-code\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"git add\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"*.scss\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"yarn fix-styles\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"git add\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":1,"frontmatter":{"title":"VSCode: ESLint, Stylelint ve Prettier'ı sorunsuz kullanmak","date":"December 10, 2018"},"fields":{"slug":"/eslint-stylelint-prettier-kullanimi/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/eslint-stylelint-prettier-kullanimi/","previous":{"fields":{"slug":"/guclendirmac/"},"frontmatter":{"title":"GüçlendirMac"}},"next":null}}}