{"version":3,"sources":["webpack:///(webpack)/buildin/harmony-module.js","webpack:///./node_modules/lodash-es/_root.js","webpack:///./node_modules/lodash-es/stubFalse.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/lodash-es/_baseRandom.js","webpack:///./node_modules/lodash-es/_arraySample.js","webpack:///./node_modules/lodash-es/_arrayMap.js","webpack:///./node_modules/lodash-es/_baseValues.js","webpack:///./node_modules/lodash-es/_baseTimes.js","webpack:///./node_modules/lodash-es/_Symbol.js","webpack:///./node_modules/lodash-es/_getRawTag.js","webpack:///./node_modules/lodash-es/_objectToString.js","webpack:///./node_modules/lodash-es/_baseGetTag.js","webpack:///./node_modules/lodash-es/isObjectLike.js","webpack:///./node_modules/lodash-es/_baseIsArguments.js","webpack:///./node_modules/lodash-es/isArguments.js","webpack:///./node_modules/lodash-es/isArray.js","webpack:///./node_modules/lodash-es/_isIndex.js","webpack:///./node_modules/lodash-es/isLength.js","webpack:///./node_modules/lodash-es/_baseIsTypedArray.js","webpack:///./node_modules/lodash-es/_baseUnary.js","webpack:///./node_modules/lodash-es/isTypedArray.js","webpack:///./node_modules/lodash-es/_arrayLikeKeys.js","webpack:///./node_modules/lodash-es/_isPrototype.js","webpack:///./node_modules/lodash-es/_overArg.js","webpack:///./node_modules/lodash-es/_nativeKeys.js","webpack:///./node_modules/lodash-es/_baseKeys.js","webpack:///./node_modules/lodash-es/isObject.js","webpack:///./node_modules/lodash-es/isFunction.js","webpack:///./node_modules/lodash-es/isArrayLike.js","webpack:///./node_modules/lodash-es/keys.js","webpack:///./node_modules/lodash-es/values.js","webpack:///./node_modules/lodash-es/_baseSample.js","webpack:///./node_modules/lodash-es/sample.js","webpack:///./node_modules/react-galton-board/dist/react-galton-board.esm.js","webpack:///./node_modules/@feedback-fish/react/dist/feedback-fish.module.js","webpack:///./src/components/Footer.js","webpack:///./src/pages/index.js","webpack:///./node_modules/lodash-es/isBuffer.js","webpack:///./node_modules/lodash-es/_freeGlobal.js","webpack:///./node_modules/core-js/modules/es6.string.sub.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/es6.string.anchor.js","webpack:///./node_modules/matter-js/build/matter.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./node_modules/lodash-es/_nodeUtil.js"],"names":["module","exports","originalModule","webpackPolyfill","Object","create","children","defineProperty","enumerable","get","l","i","freeSelf","self","root","Function","toObject","toAbsoluteIndex","toLength","value","O","this","length","aLen","arguments","index","undefined","end","endPos","$export","fails","defined","quot","createHTML","string","tag","attribute","S","String","p1","replace","NAME","exec","P","F","test","toLowerCase","split","nativeFloor","Math","floor","nativeRandom","random","lower","upper","array","iteratee","result","Array","object","props","key","n","Symbol","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","isOwn","call","unmasked","e","nullTag","undefinedTag","argsTag","propertyIsEnumerable","isArray","MAX_SAFE_INTEGER","reIsUint","type","typedArrayTags","func","nodeIsTypedArray","isTypedArray","inherited","isArr","isArg","isBuff","isBuffer","isType","skipIndexes","push","Ctor","constructor","transform","arg","keys","asyncTag","genTag","proxyTag","collection","color","_ref","_ref$particleBouncyne","particleBouncyness","_ref$ballCount","ballCount","_ref$ballSize","ballSize","_ref$pegSize","pegSize","boxRef","canvasRef","Engine","Render","Runner","World","Bodies","Body","Events","engine","enableSleeping","render","element","current","canvas","options","width","height","background","wireframes","showSleeping","run","runner","peg","x","y","circle","isStatic","fillStyle","wall","rectangle","line","angle","add","world","HEIGHT","PI","j","pegs","divider","rand","min","max","dropBall","droppedBall","restitution","friction","frictionAir","sleepThreshold","ball","setVelocity","setAngularVelocity","on","setStatic","count","intervalId","setInterval","clearInterval","createElement","ref","style","r","assign","t","apply","projectId","window","__feedback_fish_injected__","document","src","defer","addEventListener","remove","body","appendChild","userId","metadata","reduce","d","isValidElement","cloneElement","Footer","fontFamily","marginTop","rhythm","paddingTop","display","justifyContent","flexWrap","href","target","rel","React","Component","BlogIndex","siteTitle","posts","Layout","location","title","SEO","flex","marginBottom","Bio","map","node","fields","slug","fontSize","boxShadow","to","formatReadingTime","timeToRead","frontmatter","date","pageQuery","freeExports","nodeType","freeModule","Buffer","freeGlobal","global","fill","name","factory","__WEBPACK_EXTERNAL_MODULE__27__","modules","installedModules","__webpack_require__","moduleId","m","c","getter","o","mode","__esModule","ns","bind","property","p","s","Common","_nextId","_seed","_nowStartTime","Date","extend","obj","deep","argsStart","deepClone","source","prop","clone","values","path","begin","slice","set","val","parts","shuffle","temp","choose","choices","isElement","HTMLElement","nodeName","isFunction","isPlainObject","isString","clamp","sign","now","performance","webkitNow","_seededRandom","colorToNumber","colorString","charAt","parseInt","logLevel","log","console","concat","info","warn","nextId","indexOf","haystack","needle","list","mapped","topologicalSort","graph","visited","_topologicalSort","neighbors","neighbor","chain","funcs","_chained","lastResult","args","chainPathBefore","base","chainPathAfter","Bounds","vertices","bounds","update","velocity","Infinity","vertex","contains","point","overlaps","boundsA","boundsB","translate","vector","shift","position","deltaX","deltaY","Vector","magnitude","sqrt","magnitudeSquared","rotate","output","cos","sin","rotateAbout","normalise","dot","vectorA","vectorB","cross","cross3","vectorC","sub","mult","scalar","div","perp","negate","neg","atan2","_temp","Vertices","points","isInternal","fromPath","match","parseFloat","centre","area","mean","average","signed","abs","inertia","mass","numerator","denominator","v","vertice","dx","dy","nextVertice","scale","scaleX","scaleY","delta","chamfer","radius","quality","qualityMin","qualityMax","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","pow","radiusVector","midNormal","scaledVertex","precision","theta","acos","clockwiseSort","sort","vertexA","vertexB","isConvex","k","z","flag","hull","pop","eventNames","callback","names","events","off","join","callbacks","newCallbacks","trigger","event","eventClone","Composite","id","parent","isModified","bodies","constraints","composites","label","plugin","setModified","composite","updateParents","updateChildren","childComposite","objects","addBody","addConstraint","addComposite","constraint","removeBody","removeConstraint","removeComposite","compositeA","compositeB","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","filter","allBodies","allConstraints","allComposites","move","rebase","translation","recursive","rotation","setPosition","Sleeping","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","defaults","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","angularVelocity","isSensor","isSleeping","motion","density","frictionStatic","collisionFilter","category","mask","group","slop","timeScale","visible","opacity","strokeStyle","lineWidth","sprite","xScale","yScale","xOffset","yOffset","circleRadius","positionPrev","anglePrev","axes","_original","_initProperties","nextGroup","isNonColliding","nextCategory","defaultFillStyle","defaultStrokeStyle","defaultLineWidth","settings","setMass","setDensity","setInertia","setVertices","setAngle","setParts","setCentre","part","inverseMass","inverseInertia","moment","fromVertices","autoHull","hullCentre","total","_totalProperties","relative","totalArea","totalInertia","deltaTime","correction","deltaTimeSquared","velocityPrevX","velocityPrevY","applyForce","offset","properties","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","afterCollisions","pairs","pair","isActive","collision","bodyA","bodyB","sleepingBody","movingBody","wasSleeping","Constraint","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","impulse","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","share","normal","normalVelocity","relativeVelocity","difference","massTotal","resistanceTotal","zero","postSolveAll","Pair","Contact","timestamp","parentA","parentB","contacts","activeContacts","separation","confirmedActive","timeCreated","timeUpdated","supports","collided","support","contactId","contact","depth","setActive","Grid","Mouse","_requestAnimationFrame","_cancelAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","controller","mouse","frameRequestId","pixelRatio","wireframeBackground","hasBounds","enabled","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","setPixelRatio","parentNode","loop","time","stop","_getPixelRatio","setAttribute","lookAt","padding","center","viewHeight","outerRatio","innerRatio","setScale","setOffset","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","setTransform","endViewTransform","timing","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","collisions","vertexNumbers","mousePosition","broadphase","grid","debug","metrics","debugTimestamp","text","round","fps","extended","toFixed","buckets","broadEff","midEff","narrowEff","debugString","font","fillText","start","beginPath","arc","closePath","moveTo","coils","ceil","lineTo","stroke","bodyShadows","distanceX","distanceY","distance","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","globalAlpha","texture","_getTexture","drawImage","rect","axis","normalPosX","normalPosY","penetration","bucketKeys","bucketId","region","bucketWidth","bucketHeight","inspector","selected","item","data","setLineDash","selectStart","selectBounds","oncontextmenu","onselectstart","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","imagePath","image","Image","cssBackground","backgroundSize","Detector","detector","pairsList","forceUpdate","col","row","bucket","gridChanged","broadphaseTests","newRegion","_getRegion","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","column","pairId","pairKeys","SAT","broadphasePairs","pairsTable","table","canCollide","midphaseTests","partA","partB","previousCollision","collides","narrowphaseTests","reused","narrowReuseCount","narrowDetections","filterA","filterB","overlapAB","overlapBA","minOverlap","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","overlap","tangent","verticesB","_findSupports","verticesA","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","projection","nearestDistance","vertexToBody","bodyAPosition","absolute","mousedownPosition","mouseupPosition","wheelDelta","button","getAttribute","sourceEvents","mousemove","mousedown","mouseup","mousewheel","_getRelativeMousePosition","changedTouches","preventDefault","detail","setElement","clearSourceEvents","elementBounds","getBoundingClientRect","rootNode","documentElement","scrollX","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","touches","pageX","left","pageY","top","clientWidth","clientHeight","gradient","xx","_decompWarned","trapezoid","slope","verticesPath","x1","x2","x3","maxSides","sides","polygon","yy","vertexSets","flagInternal","removeCollinear","minimumArea","removeDuplicatePoints","decomp","canDecomp","Boolean","quickDecomp","concave","makeCCW","removeCollinearPoints","decomposed","chunkVertices","pav","pbv","da","db","Plugin","_registry","register","isPlugin","registered","pluginVersion","versionParse","version","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","used","isFor","parsed","versionSatisfies","use","plugins","uses","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","pattern","major","minor","patch","isRange","operator","prerelease","normalImpulse","tangentImpulse","gravity","Pairs","_pairMaxIdleLife","collisionStart","collisionActive","collisionEnd","removeOld","pairIndex","indexesToRemove","Resolver","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","bodyBtoA","contactShare","tempA","tempB","tempC","tempD","postSolvePosition","preSolveVelocity","contactVertex","solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","velocityPointB","tangentVelocity","tangentSpeed","tangentVelocityDirection","normalForce","maxFriction","oAcN","oBcN","contactNormalImpulse","contactTangentImpulse","Metrics","positionIterations","velocityIterations","constraintIterations","renderDefaults","reset","_bodiesApplyGravity","_bodiesUpdate","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","narrowReuse","Matter","Query","MouseConstraint","Composites","Svg","RenderPixi","before","after","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","outside","Error","code","mouseConstraint","_triggerEvents","mouseEvents","_frameTimeout","clearTimeout","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","isFixed","deltaMin","deltaMax","tick","stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","size","car","wheelSize","wheelAOffset","wheelBOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","renderer","container","spriteContainer","pixiOptions","transparent","view","antialias","backgroundColor","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","removeChild","bgSprite","addChildAt","setBackground","isColor","Sprite","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","initialAngle","texturePath","anchor","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage","has","cof","inheritIfRequired","toPrimitive","gOPN","f","gOPD","dP","$trim","trim","$Number","Base","proto","BROKEN_COF","TRIM","toNumber","argument","it","third","radix","maxCode","first","charCodeAt","NaN","digits","that","valueOf","freeProcess","process","nodeUtil","types","require","binding"],"mappings":"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","file":"component---src-pages-index-js-7433c0c1162150ab6893.js","sourcesContent":["require(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nmodule.exports = function (originalModule) {\n  if (!originalModule.webpackPolyfill) {\n    var module = Object.create(originalModule); // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    Object.defineProperty(module, \"exports\", {\n      enumerable: true\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","import freeGlobal from './_freeGlobal.js';\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nexport default root;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\n\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nexport default baseRandom;","import baseRandom from './_baseRandom.js';\n/**\n * A specialized version of `_.sample` for arrays.\n *\n * @private\n * @param {Array} array The array to sample.\n * @returns {*} Returns the random element.\n */\n\nfunction arraySample(array) {\n  var length = array.length;\n  return length ? array[baseRandom(0, length - 1)] : undefined;\n}\n\nexport default arraySample;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nexport default arrayMap;","import arrayMap from './_arrayMap.js';\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\n\nfunction baseValues(object, props) {\n  return arrayMap(props, function (key) {\n    return object[key];\n  });\n}\n\nexport default baseValues;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nexport default baseTimes;","import root from './_root.js';\n/** Built-in value references. */\n\nvar Symbol = root.Symbol;\nexport default Symbol;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport Symbol from './_Symbol.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nexport default getRawTag;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n/** `Object#toString` result references. */\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nexport default baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nexport default isArguments;","import \"core-js/modules/es6.array.is-array\";\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nexport default isArray;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nexport default isIndex;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n/* Node.js helper references. */\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nexport default isTypedArray;","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nexport default arrayLikeKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nexport default isPrototype;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport overArg from './_overArg.js';\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeKeys = overArg(Object.keys, Object);\nexport default nativeKeys;","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nexport default baseKeys;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n/** `Object#toString` result references. */\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;","import baseValues from './_baseValues.js';\nimport keys from './keys.js';\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\n\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nexport default values;","import arraySample from './_arraySample.js';\nimport values from './values.js';\n/**\n * The base implementation of `_.sample`.\n *\n * @private\n * @param {Array|Object} collection The collection to sample.\n * @returns {*} Returns the random element.\n */\n\nfunction baseSample(collection) {\n  return arraySample(values(collection));\n}\n\nexport default baseSample;","import arraySample from './_arraySample.js';\nimport baseSample from './_baseSample.js';\nimport isArray from './isArray.js';\n/**\n * Gets a random element from `collection`.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @returns {*} Returns the random element.\n * @example\n *\n * _.sample([1, 2, 3, 4]);\n * // => 2\n */\n\nfunction sample(collection) {\n  var func = isArray(collection) ? arraySample : baseSample;\n  return func(collection);\n}\n\nexport default sample;","import React, { useRef, useEffect } from 'react';\nimport Matter from 'matter-js';\nimport { sample } from 'lodash-es';\nvar WIDTH = 300;\nvar HEIGHT = 500;\nvar BACKGROUND_COLOR = '#000000';\nvar WALL_COLOR = '#222222';\nvar PEG_COLOR = '#333333';\nvar colors = ['#ff2d55', '#5856d6', '#ff9500', '#ffcc00', '#ff3b30', '#5ac8fa', '#007aff', '#4cd964'];\nvar color =\n/*#__PURE__*/\nsample(colors);\n\nvar GaltonBoard = function GaltonBoard(_ref) {\n  var _ref$particleBouncyne = _ref.particleBouncyness,\n      particleBouncyness = _ref$particleBouncyne === void 0 ? 0.3 : _ref$particleBouncyne,\n      _ref$ballCount = _ref.ballCount,\n      ballCount = _ref$ballCount === void 0 ? 1500 : _ref$ballCount,\n      _ref$ballSize = _ref.ballSize,\n      ballSize = _ref$ballSize === void 0 ? 2 : _ref$ballSize,\n      _ref$pegSize = _ref.pegSize,\n      pegSize = _ref$pegSize === void 0 ? 2 : _ref$pegSize;\n  var boxRef = useRef(null);\n  var canvasRef = useRef(null);\n  useEffect(function () {\n    var Engine = Matter.Engine;\n    var Render = Matter.Render;\n    var Runner = Matter.Runner;\n    var World = Matter.World;\n    var Bodies = Matter.Bodies;\n    var Body = Matter.Body;\n    var Events = Matter.Events;\n    var engine = Engine.create({\n      enableSleeping: true\n    });\n    var render = Render.create({\n      element: boxRef.current,\n      engine: engine,\n      canvas: canvasRef.current,\n      options: {\n        width: WIDTH,\n        height: HEIGHT,\n        background: BACKGROUND_COLOR,\n        wireframes: false,\n        showSleeping: false\n      }\n    });\n    Render.run(render);\n    var runner = Runner.create();\n    Runner.run(runner, engine);\n\n    var ball = function ball(x, y) {\n      return Bodies.circle(x, y, ballSize, {\n        restitution: particleBouncyness,\n        friction: 0.00001,\n        frictionAir: 0.042,\n        sleepThreshold: 25,\n        render: {\n          fillStyle: color\n        }\n      });\n    };\n\n    var peg = function peg(x, y) {\n      return Bodies.circle(x, y, pegSize, {\n        isStatic: true,\n        render: {\n          fillStyle: PEG_COLOR\n        }\n      });\n    };\n\n    var wall = function wall(x, y, width, height) {\n      return Bodies.rectangle(x, y, width, height, {\n        isStatic: true,\n        render: {\n          fillStyle: WALL_COLOR\n        }\n      });\n    };\n\n    var line = function line(x, y, width, height, angle) {\n      return Bodies.rectangle(x, y, width, height, {\n        isStatic: true,\n        angle: angle,\n        render: {\n          fillStyle: WALL_COLOR\n        }\n      });\n    }; // outer walls\n\n\n    World.add(engine.world, [wall(150, 0, WIDTH, 20), wall(150, HEIGHT, WIDTH, 20), wall(0, HEIGHT, 20, HEIGHT * 2), wall(WIDTH, HEIGHT, 20, HEIGHT * 2)]); // inner walls\n\n    World.add(engine.world, [line(190, 45, 95, 2, Math.PI * -0.3), line(110, 45, 95, 2, Math.PI * 0.3), line(196, 100, 75, 2, Math.PI * 0.153), line(104, 100, 75, 2, Math.PI * -0.153), line(260, 180, 140, 2, Math.PI * 0.353), line(40, 180, 140, 2, Math.PI * -0.353)]); // pegs\n\n    var pegs = [];\n    var spacingY = 14;\n    var spacingX = 14;\n    var i, j;\n\n    for (i = 0; i < 21; i++) {\n      for (j = 1; j < i; j++) {\n        if (i > 9) {\n          pegs.push(World.add(engine.world, peg(150 + (j * spacingX - i * (spacingX / 2)), i * spacingY - 10)));\n        }\n      }\n    } // divider walls\n\n\n    for (var x = 20; x <= 280; x += 10) {\n      if (x !== 0) {\n        var divider = wall(x, 394, 2, 220);\n        World.add(engine.world, divider);\n      }\n    }\n\n    var rand = function rand(min, max) {\n      return Math.random() * (max - min) + min;\n    };\n\n    var dropBall = function dropBall() {\n      var droppedBall = ball(150 + rand(-5, 5), 15);\n      Body.setVelocity(droppedBall, {\n        x: rand(-0.05, 0.05),\n        y: 0\n      });\n      Body.setAngularVelocity(droppedBall, rand(-0.05, 0.05));\n      Events.on(droppedBall, 'sleepStart', function () {\n        Body.setStatic(droppedBall, true);\n      });\n      World.add(engine.world, droppedBall);\n    };\n\n    var count = 0;\n    var intervalId = setInterval(function () {\n      if (count === ballCount) {\n        clearInterval(intervalId);\n      }\n\n      dropBall();\n      count++;\n    }, 10);\n    return function () {\n      return clearInterval(intervalId);\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    ref: boxRef,\n    style: {\n      width: WIDTH,\n      height: HEIGHT\n    }\n  }, React.createElement(\"canvas\", {\n    ref: canvasRef\n  }));\n};\n\nexport default GaltonBoard;","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.object.assign\";\nimport e, { useEffect as n } from \"react\";\n\nfunction r() {\n  return (r = Object.assign || function (e) {\n    for (var n = 1; n < arguments.length; n++) {\n      var r = arguments[n];\n\n      for (var t in r) {\n        Object.prototype.hasOwnProperty.call(r, t) && (e[t] = r[t]);\n      }\n    }\n\n    return e;\n  }).apply(this, arguments);\n}\n\nvar t = function t(e) {\n  return n(function () {\n    if (!window.__feedback_fish_injected__) {\n      window.__feedback_fish_injected__ = !0;\n      var n = document.createElement(\"script\");\n      n.src = \"https://feedback.fish/ff.js?pid=\" + e, n.defer = !0, n.addEventListener(\"error\", function () {\n        return n.remove();\n      }), document.body.appendChild(n);\n    }\n  }, []);\n},\n    i = function i(n) {\n  if (t(n.projectId), !n.children) return null;\n  var i = r({\n    \"data-feedback-fish\": !0,\n    \"data-feedback-fish-userid\": n.userId\n  }, Object.keys(n.metadata || {}).reduce(function (e, t) {\n    var i, d;\n    return r({}, e, ((d = {})[\"data-feedback-fish-\" + t] = null == n || null == (i = n.metadata) ? void 0 : i[t], d));\n  }, {}));\n  return e.isValidElement(n.children) ? e.cloneElement(n.children, i) : \"function\" == typeof n.children ? n.children(i) : null;\n};\n\nexport { i as FeedbackFish, t as useFeedbackFish };","import React from 'react'\nimport { FeedbackFish } from '@feedback-fish/react'\n\nimport { rhythm } from '../utils/typography'\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          fontFamily: 'sans-serif',\n          marginTop: rhythm(2.5),\n          paddingTop: rhythm(1),\n          display: 'flex',\n          justifyContent: 'space-between',\n          flexWrap: 'wrap'\n        }}\n      >\n        <div>\n          <a\n            href=\"https://twitter.com/ergenekonyigit\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            twitter\n          </a>{' '}\n          &bull;{' '}\n          <a\n            href=\"https://github.com/ergenekonyigit\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            github\n          </a>{' '}\n          &bull;{' '}\n          <a\n            href=\"https://www.linkedin.com/in/ergenekonyigit/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            linkedin\n          </a>{' '}\n          &bull;{' '}\n          <a\n            href=\"mailto:yigitergenekon@gmail.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            e-mail\n          </a>\n        </div>\n        <div>\n          <FeedbackFish projectId=\"e12f9ac7f0ce05\">\n            <a>send feedback</a>\n          </FeedbackFish>{' '}\n          &bull;{' '}\n          <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\n            rss\n          </a>\n        </div>\n      </footer>\n    )\n  }\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Bio from '../components/Bio'\nimport GaltonBoard from 'react-galton-board'\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\nimport Footer from '../components/Footer'\nimport { formatReadingTime } from '../utils/helpers'\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <div\n          style={{\n            display: 'flex',\n            flex: 1,\n            justifyContent: 'space-between',\n            flexWrap: 'wrap',\n            marginBottom: rhythm(2.5),\n          }}\n        >\n          <Bio />\n          <GaltonBoard />\n        </div>\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <div\n                style={{\n                  fontFamily: 'sans-serif',\n                  fontSize: 18,\n                  color: 'rgba(255, 255, 255, 0.5)',\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n                <small>\n                  {` • ${formatReadingTime(node.timeToRead)} • `}\n                  {node.frontmatter.date}\n                </small>\n              </div>\n            </div>\n          )\n        })}\n        <Footer />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n/** Detect free variable `exports`. */\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nexport default isBuffer;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nexport default freeGlobal;","'use strict';\n// B.2.3.13 String.prototype.sub()\nrequire('./_string-html')('sub', function (createHTML) {\n  return function sub() {\n    return createHTML(this, 'sub', '', '');\n  };\n});\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","'use strict';\n// B.2.3.2 String.prototype.anchor(name)\nrequire('./_string-html')('anchor', function (createHTML) {\n  return function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  };\n});\n","require(\"core-js/modules/es6.string.anchor\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.array.fill\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.string.sub\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\n/*!\n * matter-js 0.16.1 by @liabru 2021-01-31\n * http://brm.io/matter-js/\n * License MIT\n * \n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(function webpackLoadOptionalExternalModule() {\n    try {\n      return require(\"poly-decomp\");\n    } catch (e) {}\n  }());else if (typeof define === 'function' && define.amd) define(\"Matter\", [\"poly-decomp\"], factory);else if (typeof exports === 'object') exports[\"Matter\"] = factory(function webpackLoadOptionalExternalModule() {\n    try {\n      return require(\"poly-decomp\");\n    } catch (e) {}\n  }());else root[\"Matter\"] = factory(root[\"decomp\"]);\n})(this, function (__WEBPACK_EXTERNAL_MODULE__27__) {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __webpack_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __webpack_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __webpack_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __webpack_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) {\n          __webpack_require__.d(ns, key, function (key) {\n            return value[key];\n          }.bind(null, key));\n        }\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 24);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports) {\n      /**\n      * The `Matter.Common` module contains utility functions that are common to all modules.\n      *\n      * @class Common\n      */\n      var Common = {};\n      module.exports = Common;\n\n      (function () {\n        Common._nextId = 0;\n        Common._seed = 0;\n        Common._nowStartTime = +new Date();\n        /**\n         * Extends the object in the first argument using the object in the second argument.\n         * @method extend\n         * @param {} obj\n         * @param {boolean} deep\n         * @return {} obj extended\n         */\n\n        Common.extend = function (obj, deep) {\n          var argsStart, args, deepClone;\n\n          if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n          } else {\n            argsStart = 1;\n            deepClone = true;\n          }\n\n          for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n              for (var prop in source) {\n                if (deepClone && source[prop] && source[prop].constructor === Object) {\n                  if (!obj[prop] || obj[prop].constructor === Object) {\n                    obj[prop] = obj[prop] || {};\n                    Common.extend(obj[prop], deepClone, source[prop]);\n                  } else {\n                    obj[prop] = source[prop];\n                  }\n                } else {\n                  obj[prop] = source[prop];\n                }\n              }\n            }\n          }\n\n          return obj;\n        };\n        /**\n         * Creates a new clone of the object, if deep is true references will also be cloned.\n         * @method clone\n         * @param {} obj\n         * @param {bool} deep\n         * @return {} obj cloned\n         */\n\n\n        Common.clone = function (obj, deep) {\n          return Common.extend({}, deep, obj);\n        };\n        /**\n         * Returns the list of keys for the given object.\n         * @method keys\n         * @param {} obj\n         * @return {string[]} keys\n         */\n\n\n        Common.keys = function (obj) {\n          if (Object.keys) return Object.keys(obj); // avoid hasOwnProperty for performance\n\n          var keys = [];\n\n          for (var key in obj) {\n            keys.push(key);\n          }\n\n          return keys;\n        };\n        /**\n         * Returns the list of values for the given object.\n         * @method values\n         * @param {} obj\n         * @return {array} Array of the objects property values\n         */\n\n\n        Common.values = function (obj) {\n          var values = [];\n\n          if (Object.keys) {\n            var keys = Object.keys(obj);\n\n            for (var i = 0; i < keys.length; i++) {\n              values.push(obj[keys[i]]);\n            }\n\n            return values;\n          } // avoid hasOwnProperty for performance\n\n\n          for (var key in obj) {\n            values.push(obj[key]);\n          }\n\n          return values;\n        };\n        /**\n         * Gets a value from `base` relative to the `path` string.\n         * @method get\n         * @param {} obj The base object\n         * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n         * @param {number} [begin] Path slice begin\n         * @param {number} [end] Path slice end\n         * @return {} The object at the given path\n         */\n\n\n        Common.get = function (obj, path, begin, end) {\n          path = path.split('.').slice(begin, end);\n\n          for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n          }\n\n          return obj;\n        };\n        /**\n         * Sets a value on `base` relative to the given `path` string.\n         * @method set\n         * @param {} obj The base object\n         * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n         * @param {} val The value to set\n         * @param {number} [begin] Path slice begin\n         * @param {number} [end] Path slice end\n         * @return {} Pass through `val` for chaining\n         */\n\n\n        Common.set = function (obj, path, val, begin, end) {\n          var parts = path.split('.').slice(begin, end);\n          Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n          return val;\n        };\n        /**\n         * Shuffles the given array in-place.\n         * The function uses a seeded random generator.\n         * @method shuffle\n         * @param {array} array\n         * @return {array} array shuffled randomly\n         */\n\n\n        Common.shuffle = function (array) {\n          for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n          }\n\n          return array;\n        };\n        /**\n         * Randomly chooses a value from a list with equal probability.\n         * The function uses a seeded random generator.\n         * @method choose\n         * @param {array} choices\n         * @return {object} A random choice object from the array\n         */\n\n\n        Common.choose = function (choices) {\n          return choices[Math.floor(Common.random() * choices.length)];\n        };\n        /**\n         * Returns true if the object is a HTMLElement, otherwise false.\n         * @method isElement\n         * @param {object} obj\n         * @return {boolean} True if the object is a HTMLElement, otherwise false\n         */\n\n\n        Common.isElement = function (obj) {\n          if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n          }\n\n          return !!(obj && obj.nodeType && obj.nodeName);\n        };\n        /**\n         * Returns true if the object is an array.\n         * @method isArray\n         * @param {object} obj\n         * @return {boolean} True if the object is an array, otherwise false\n         */\n\n\n        Common.isArray = function (obj) {\n          return Object.prototype.toString.call(obj) === '[object Array]';\n        };\n        /**\n         * Returns true if the object is a function.\n         * @method isFunction\n         * @param {object} obj\n         * @return {boolean} True if the object is a function, otherwise false\n         */\n\n\n        Common.isFunction = function (obj) {\n          return typeof obj === \"function\";\n        };\n        /**\n         * Returns true if the object is a plain object.\n         * @method isPlainObject\n         * @param {object} obj\n         * @return {boolean} True if the object is a plain object, otherwise false\n         */\n\n\n        Common.isPlainObject = function (obj) {\n          return typeof obj === 'object' && obj.constructor === Object;\n        };\n        /**\n         * Returns true if the object is a string.\n         * @method isString\n         * @param {object} obj\n         * @return {boolean} True if the object is a string, otherwise false\n         */\n\n\n        Common.isString = function (obj) {\n          return toString.call(obj) === '[object String]';\n        };\n        /**\n         * Returns the given value clamped between a minimum and maximum value.\n         * @method clamp\n         * @param {number} value\n         * @param {number} min\n         * @param {number} max\n         * @return {number} The value clamped between min and max inclusive\n         */\n\n\n        Common.clamp = function (value, min, max) {\n          if (value < min) return min;\n          if (value > max) return max;\n          return value;\n        };\n        /**\n         * Returns the sign of the given value.\n         * @method sign\n         * @param {number} value\n         * @return {number} -1 if negative, +1 if 0 or positive\n         */\n\n\n        Common.sign = function (value) {\n          return value < 0 ? -1 : 1;\n        };\n        /**\n         * Returns the current timestamp since the time origin (e.g. from page load).\n         * The result will be high-resolution including decimal places if available.\n         * @method now\n         * @return {number} the current timestamp\n         */\n\n\n        Common.now = function () {\n          if (typeof window !== 'undefined' && window.performance) {\n            if (window.performance.now) {\n              return window.performance.now();\n            } else if (window.performance.webkitNow) {\n              return window.performance.webkitNow();\n            }\n          }\n\n          return new Date() - Common._nowStartTime;\n        };\n        /**\n         * Returns a random value between a minimum and a maximum value inclusive.\n         * The function uses a seeded random generator.\n         * @method random\n         * @param {number} min\n         * @param {number} max\n         * @return {number} A random number between min and max inclusive\n         */\n\n\n        Common.random = function (min, max) {\n          min = typeof min !== \"undefined\" ? min : 0;\n          max = typeof max !== \"undefined\" ? max : 1;\n          return min + _seededRandom() * (max - min);\n        };\n\n        var _seededRandom = function _seededRandom() {\n          // https://en.wikipedia.org/wiki/Linear_congruential_generator\n          Common._seed = (Common._seed * 9301 + 49297) % 233280;\n          return Common._seed / 233280;\n        };\n        /**\n         * Converts a CSS hex colour string into an integer.\n         * @method colorToNumber\n         * @param {string} colorString\n         * @return {number} An integer representing the CSS hex string\n         */\n\n\n        Common.colorToNumber = function (colorString) {\n          colorString = colorString.replace('#', '');\n\n          if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0) + colorString.charAt(1) + colorString.charAt(1) + colorString.charAt(2) + colorString.charAt(2);\n          }\n\n          return parseInt(colorString, 16);\n        };\n        /**\n         * The console logging level to use, where each level includes all levels above and excludes the levels below.\n         * The default level is 'debug' which shows all console messages.  \n         *\n         * Possible level values are:\n         * - 0 = None\n         * - 1 = Debug\n         * - 2 = Info\n         * - 3 = Warn\n         * - 4 = Error\n         * @property Common.logLevel\n         * @type {Number}\n         * @default 1\n         */\n\n\n        Common.logLevel = 1;\n        /**\n         * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n         * The message will be prefixed with 'matter-js' to make it easily identifiable.\n         * @method log\n         * @param ...objs {} The objects to log.\n         */\n\n        Common.log = function () {\n          if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n          }\n        };\n        /**\n         * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n         * The message will be prefixed with 'matter-js' to make it easily identifiable.\n         * @method info\n         * @param ...objs {} The objects to log.\n         */\n\n\n        Common.info = function () {\n          if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n          }\n        };\n        /**\n         * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n         * The message will be prefixed with 'matter-js' to make it easily identifiable.\n         * @method warn\n         * @param ...objs {} The objects to log.\n         */\n\n\n        Common.warn = function () {\n          if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n          }\n        };\n        /**\n         * Returns the next unique sequential ID.\n         * @method nextId\n         * @return {Number} Unique sequential ID\n         */\n\n\n        Common.nextId = function () {\n          return Common._nextId++;\n        };\n        /**\n         * A cross browser compatible indexOf implementation.\n         * @method indexOf\n         * @param {array} haystack\n         * @param {object} needle\n         * @return {number} The position of needle in haystack, otherwise -1.\n         */\n\n\n        Common.indexOf = function (haystack, needle) {\n          if (haystack.indexOf) return haystack.indexOf(needle);\n\n          for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle) return i;\n          }\n\n          return -1;\n        };\n        /**\n         * A cross browser compatible array map implementation.\n         * @method map\n         * @param {array} list\n         * @param {function} func\n         * @return {array} Values from list transformed by func.\n         */\n\n\n        Common.map = function (list, func) {\n          if (list.map) {\n            return list.map(func);\n          }\n\n          var mapped = [];\n\n          for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n          }\n\n          return mapped;\n        };\n        /**\n         * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n         * Circular dependencies are allowed.\n         * @method topologicalSort\n         * @param {object} graph\n         * @return {array} Partially ordered set of vertices in topological order.\n         */\n\n\n        Common.topologicalSort = function (graph) {\n          // https://github.com/mgechev/javascript-algorithms\n          // Copyright (c) Minko Gechev (MIT license)\n          // Modifications: tidy formatting and naming\n          var result = [],\n              visited = [],\n              temp = [];\n\n          for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n              Common._topologicalSort(node, visited, temp, graph, result);\n            }\n          }\n\n          return result;\n        };\n\n        Common._topologicalSort = function (node, visited, temp, graph, result) {\n          var neighbors = graph[node] || [];\n          temp[node] = true;\n\n          for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n              // skip circular dependencies\n              continue;\n            }\n\n            if (!visited[neighbor]) {\n              Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n          }\n\n          temp[node] = false;\n          visited[node] = true;\n          result.push(node);\n        };\n        /**\n         * Takes _n_ functions as arguments and returns a new function that calls them in order.\n         * The arguments applied when calling the new function will also be applied to every function passed.\n         * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n         * Therefore if a passed function does not return a value, the previously returned value is maintained.\n         * After all passed functions have been called the new function returns the last returned value (if any).\n         * If any of the passed functions are a chain, then the chain will be flattened.\n         * @method chain\n         * @param ...funcs {function} The functions to chain.\n         * @return {function} A new function that calls the passed functions in order.\n         */\n\n\n        Common.chain = function () {\n          var funcs = [];\n\n          for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n              // flatten already chained functions\n              funcs.push.apply(funcs, func._chained);\n            } else {\n              funcs.push(func);\n            }\n          }\n\n          var chain = function chain() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n              args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n              var result = funcs[i].apply(lastResult, args);\n\n              if (typeof result !== 'undefined') {\n                lastResult = result;\n              }\n            }\n\n            return lastResult;\n          };\n\n          chain._chained = funcs;\n          return chain;\n        };\n        /**\n         * Chains a function to excute before the original function on the given `path` relative to `base`.\n         * See also docs for `Common.chain`.\n         * @method chainPathBefore\n         * @param {} base The base object\n         * @param {string} path The path relative to `base`\n         * @param {function} func The function to chain before the original\n         * @return {function} The chained function that replaced the original\n         */\n\n\n        Common.chainPathBefore = function (base, path, func) {\n          return Common.set(base, path, Common.chain(func, Common.get(base, path)));\n        };\n        /**\n         * Chains a function to excute after the original function on the given `path` relative to `base`.\n         * See also docs for `Common.chain`.\n         * @method chainPathAfter\n         * @param {} base The base object\n         * @param {string} path The path relative to `base`\n         * @param {function} func The function to chain after the original\n         * @return {function} The chained function that replaced the original\n         */\n\n\n        Common.chainPathAfter = function (base, path, func) {\n          return Common.set(base, path, Common.chain(Common.get(base, path), func));\n        };\n      })();\n      /***/\n\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports) {\n      /**\n      * The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n      *\n      * @class Bounds\n      */\n      var Bounds = {};\n      module.exports = Bounds;\n\n      (function () {\n        /**\n         * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n         * @method create\n         * @param {vertices} vertices\n         * @return {bounds} A new bounds object\n         */\n        Bounds.create = function (vertices) {\n          var bounds = {\n            min: {\n              x: 0,\n              y: 0\n            },\n            max: {\n              x: 0,\n              y: 0\n            }\n          };\n          if (vertices) Bounds.update(bounds, vertices);\n          return bounds;\n        };\n        /**\n         * Updates bounds using the given vertices and extends the bounds given a velocity.\n         * @method update\n         * @param {bounds} bounds\n         * @param {vertices} vertices\n         * @param {vector} velocity\n         */\n\n\n        Bounds.update = function (bounds, vertices, velocity) {\n          bounds.min.x = Infinity;\n          bounds.max.x = -Infinity;\n          bounds.min.y = Infinity;\n          bounds.max.y = -Infinity;\n\n          for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n          }\n\n          if (velocity) {\n            if (velocity.x > 0) {\n              bounds.max.x += velocity.x;\n            } else {\n              bounds.min.x += velocity.x;\n            }\n\n            if (velocity.y > 0) {\n              bounds.max.y += velocity.y;\n            } else {\n              bounds.min.y += velocity.y;\n            }\n          }\n        };\n        /**\n         * Returns true if the bounds contains the given point.\n         * @method contains\n         * @param {bounds} bounds\n         * @param {vector} point\n         * @return {boolean} True if the bounds contain the point, otherwise false\n         */\n\n\n        Bounds.contains = function (bounds, point) {\n          return point.x >= bounds.min.x && point.x <= bounds.max.x && point.y >= bounds.min.y && point.y <= bounds.max.y;\n        };\n        /**\n         * Returns true if the two bounds intersect.\n         * @method overlaps\n         * @param {bounds} boundsA\n         * @param {bounds} boundsB\n         * @return {boolean} True if the bounds overlap, otherwise false\n         */\n\n\n        Bounds.overlaps = function (boundsA, boundsB) {\n          return boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y;\n        };\n        /**\n         * Translates the bounds by the given vector.\n         * @method translate\n         * @param {bounds} bounds\n         * @param {vector} vector\n         */\n\n\n        Bounds.translate = function (bounds, vector) {\n          bounds.min.x += vector.x;\n          bounds.max.x += vector.x;\n          bounds.min.y += vector.y;\n          bounds.max.y += vector.y;\n        };\n        /**\n         * Shifts the bounds to the given position.\n         * @method shift\n         * @param {bounds} bounds\n         * @param {vector} position\n         */\n\n\n        Bounds.shift = function (bounds, position) {\n          var deltaX = bounds.max.x - bounds.min.x,\n              deltaY = bounds.max.y - bounds.min.y;\n          bounds.min.x = position.x;\n          bounds.max.x = position.x + deltaX;\n          bounds.min.y = position.y;\n          bounds.max.y = position.y + deltaY;\n        };\n      })();\n      /***/\n\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports) {\n      /**\n      * The `Matter.Vector` module contains methods for creating and manipulating vectors.\n      * Vectors are the basis of all the geometry related operations in the engine.\n      * A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n      *\n      * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n      *\n      * @class Vector\n      */\n      // TODO: consider params for reusing vector objects\n      var Vector = {};\n      module.exports = Vector;\n\n      (function () {\n        /**\n         * Creates a new vector.\n         * @method create\n         * @param {number} x\n         * @param {number} y\n         * @return {vector} A new vector\n         */\n        Vector.create = function (x, y) {\n          return {\n            x: x || 0,\n            y: y || 0\n          };\n        };\n        /**\n         * Returns a new vector with `x` and `y` copied from the given `vector`.\n         * @method clone\n         * @param {vector} vector\n         * @return {vector} A new cloned vector\n         */\n\n\n        Vector.clone = function (vector) {\n          return {\n            x: vector.x,\n            y: vector.y\n          };\n        };\n        /**\n         * Returns the magnitude (length) of a vector.\n         * @method magnitude\n         * @param {vector} vector\n         * @return {number} The magnitude of the vector\n         */\n\n\n        Vector.magnitude = function (vector) {\n          return Math.sqrt(vector.x * vector.x + vector.y * vector.y);\n        };\n        /**\n         * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n         * @method magnitudeSquared\n         * @param {vector} vector\n         * @return {number} The squared magnitude of the vector\n         */\n\n\n        Vector.magnitudeSquared = function (vector) {\n          return vector.x * vector.x + vector.y * vector.y;\n        };\n        /**\n         * Rotates the vector about (0, 0) by specified angle.\n         * @method rotate\n         * @param {vector} vector\n         * @param {number} angle\n         * @param {vector} [output]\n         * @return {vector} The vector rotated about (0, 0)\n         */\n\n\n        Vector.rotate = function (vector, angle, output) {\n          var cos = Math.cos(angle),\n              sin = Math.sin(angle);\n          if (!output) output = {};\n          var x = vector.x * cos - vector.y * sin;\n          output.y = vector.x * sin + vector.y * cos;\n          output.x = x;\n          return output;\n        };\n        /**\n         * Rotates the vector about a specified point by specified angle.\n         * @method rotateAbout\n         * @param {vector} vector\n         * @param {number} angle\n         * @param {vector} point\n         * @param {vector} [output]\n         * @return {vector} A new vector rotated about the point\n         */\n\n\n        Vector.rotateAbout = function (vector, angle, point, output) {\n          var cos = Math.cos(angle),\n              sin = Math.sin(angle);\n          if (!output) output = {};\n          var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n          output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n          output.x = x;\n          return output;\n        };\n        /**\n         * Normalises a vector (such that its magnitude is `1`).\n         * @method normalise\n         * @param {vector} vector\n         * @return {vector} A new vector normalised\n         */\n\n\n        Vector.normalise = function (vector) {\n          var magnitude = Vector.magnitude(vector);\n          if (magnitude === 0) return {\n            x: 0,\n            y: 0\n          };\n          return {\n            x: vector.x / magnitude,\n            y: vector.y / magnitude\n          };\n        };\n        /**\n         * Returns the dot-product of two vectors.\n         * @method dot\n         * @param {vector} vectorA\n         * @param {vector} vectorB\n         * @return {number} The dot product of the two vectors\n         */\n\n\n        Vector.dot = function (vectorA, vectorB) {\n          return vectorA.x * vectorB.x + vectorA.y * vectorB.y;\n        };\n        /**\n         * Returns the cross-product of two vectors.\n         * @method cross\n         * @param {vector} vectorA\n         * @param {vector} vectorB\n         * @return {number} The cross product of the two vectors\n         */\n\n\n        Vector.cross = function (vectorA, vectorB) {\n          return vectorA.x * vectorB.y - vectorA.y * vectorB.x;\n        };\n        /**\n         * Returns the cross-product of three vectors.\n         * @method cross3\n         * @param {vector} vectorA\n         * @param {vector} vectorB\n         * @param {vector} vectorC\n         * @return {number} The cross product of the three vectors\n         */\n\n\n        Vector.cross3 = function (vectorA, vectorB, vectorC) {\n          return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n        };\n        /**\n         * Adds the two vectors.\n         * @method add\n         * @param {vector} vectorA\n         * @param {vector} vectorB\n         * @param {vector} [output]\n         * @return {vector} A new vector of vectorA and vectorB added\n         */\n\n\n        Vector.add = function (vectorA, vectorB, output) {\n          if (!output) output = {};\n          output.x = vectorA.x + vectorB.x;\n          output.y = vectorA.y + vectorB.y;\n          return output;\n        };\n        /**\n         * Subtracts the two vectors.\n         * @method sub\n         * @param {vector} vectorA\n         * @param {vector} vectorB\n         * @param {vector} [output]\n         * @return {vector} A new vector of vectorA and vectorB subtracted\n         */\n\n\n        Vector.sub = function (vectorA, vectorB, output) {\n          if (!output) output = {};\n          output.x = vectorA.x - vectorB.x;\n          output.y = vectorA.y - vectorB.y;\n          return output;\n        };\n        /**\n         * Multiplies a vector and a scalar.\n         * @method mult\n         * @param {vector} vector\n         * @param {number} scalar\n         * @return {vector} A new vector multiplied by scalar\n         */\n\n\n        Vector.mult = function (vector, scalar) {\n          return {\n            x: vector.x * scalar,\n            y: vector.y * scalar\n          };\n        };\n        /**\n         * Divides a vector and a scalar.\n         * @method div\n         * @param {vector} vector\n         * @param {number} scalar\n         * @return {vector} A new vector divided by scalar\n         */\n\n\n        Vector.div = function (vector, scalar) {\n          return {\n            x: vector.x / scalar,\n            y: vector.y / scalar\n          };\n        };\n        /**\n         * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n         * @method perp\n         * @param {vector} vector\n         * @param {bool} [negate=false]\n         * @return {vector} The perpendicular vector\n         */\n\n\n        Vector.perp = function (vector, negate) {\n          negate = negate === true ? -1 : 1;\n          return {\n            x: negate * -vector.y,\n            y: negate * vector.x\n          };\n        };\n        /**\n         * Negates both components of a vector such that it points in the opposite direction.\n         * @method neg\n         * @param {vector} vector\n         * @return {vector} The negated vector\n         */\n\n\n        Vector.neg = function (vector) {\n          return {\n            x: -vector.x,\n            y: -vector.y\n          };\n        };\n        /**\n         * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n         * @method angle\n         * @param {vector} vectorA\n         * @param {vector} vectorB\n         * @return {number} The angle in radians\n         */\n\n\n        Vector.angle = function (vectorA, vectorB) {\n          return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n        };\n        /**\n         * Temporary vector pool (not thread-safe).\n         * @property _temp\n         * @type {vector[]}\n         * @private\n         */\n\n\n        Vector._temp = [Vector.create(), Vector.create(), Vector.create(), Vector.create(), Vector.create(), Vector.create()];\n      })();\n      /***/\n\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n      * A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n      * A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n      *\n      * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n      *\n      * @class Vertices\n      */\n      var Vertices = {};\n      module.exports = Vertices;\n\n      var Vector = __webpack_require__(2);\n\n      var Common = __webpack_require__(0);\n\n      (function () {\n        /**\n         * Creates a new set of `Matter.Body` compatible vertices.\n         * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n         *\n         *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n         *\n         * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n         * but with some additional references required for efficient collision detection routines.\n         *\n         * Vertices must be specified in clockwise order.\n         *\n         * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n         *\n         * @method create\n         * @param {vector[]} points\n         * @param {body} body\n         */\n        Vertices.create = function (points, body) {\n          var vertices = [];\n\n          for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n              x: point.x,\n              y: point.y,\n              index: i,\n              body: body,\n              isInternal: false\n            };\n            vertices.push(vertex);\n          }\n\n          return vertices;\n        };\n        /**\n         * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n         * into a `Matter.Vertices` object for the given `Matter.Body`.\n         * For parsing SVG paths, see `Svg.pathToVertices`.\n         * @method fromPath\n         * @param {string} path\n         * @param {body} body\n         * @return {vertices} vertices\n         */\n\n\n        Vertices.fromPath = function (path, body) {\n          var pathPattern = /L?\\s*([-\\d.e]+)[\\s,]*([-\\d.e]+)*/ig,\n              points = [];\n          path.replace(pathPattern, function (match, x, y) {\n            points.push({\n              x: parseFloat(x),\n              y: parseFloat(y)\n            });\n          });\n          return Vertices.create(points, body);\n        };\n        /**\n         * Returns the centre (centroid) of the set of vertices.\n         * @method centre\n         * @param {vertices} vertices\n         * @return {vector} The centre point\n         */\n\n\n        Vertices.centre = function (vertices) {\n          var area = Vertices.area(vertices, true),\n              centre = {\n            x: 0,\n            y: 0\n          },\n              cross,\n              temp,\n              j;\n\n          for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n          }\n\n          return Vector.div(centre, 6 * area);\n        };\n        /**\n         * Returns the average (mean) of the set of vertices.\n         * @method mean\n         * @param {vertices} vertices\n         * @return {vector} The average point\n         */\n\n\n        Vertices.mean = function (vertices) {\n          var average = {\n            x: 0,\n            y: 0\n          };\n\n          for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n          }\n\n          return Vector.div(average, vertices.length);\n        };\n        /**\n         * Returns the area of the set of vertices.\n         * @method area\n         * @param {vertices} vertices\n         * @param {bool} signed\n         * @return {number} The area\n         */\n\n\n        Vertices.area = function (vertices, signed) {\n          var area = 0,\n              j = vertices.length - 1;\n\n          for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n          }\n\n          if (signed) return area / 2;\n          return Math.abs(area) / 2;\n        };\n        /**\n         * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n         * @method inertia\n         * @param {vertices} vertices\n         * @param {number} mass\n         * @return {number} The polygon's moment of inertia\n         */\n\n\n        Vertices.inertia = function (vertices, mass) {\n          var numerator = 0,\n              denominator = 0,\n              v = vertices,\n              cross,\n              j; // find the polygon's moment of inertia, using second moment of area\n          // from equations at http://www.physicsforums.com/showthread.php?t=25293\n\n          for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n          }\n\n          return mass / 6 * (numerator / denominator);\n        };\n        /**\n         * Translates the set of vertices in-place.\n         * @method translate\n         * @param {vertices} vertices\n         * @param {vector} vector\n         * @param {number} scalar\n         */\n\n\n        Vertices.translate = function (vertices, vector, scalar) {\n          var i;\n\n          if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n              vertices[i].x += vector.x * scalar;\n              vertices[i].y += vector.y * scalar;\n            }\n          } else {\n            for (i = 0; i < vertices.length; i++) {\n              vertices[i].x += vector.x;\n              vertices[i].y += vector.y;\n            }\n          }\n\n          return vertices;\n        };\n        /**\n         * Rotates the set of vertices in-place.\n         * @method rotate\n         * @param {vertices} vertices\n         * @param {number} angle\n         * @param {vector} point\n         */\n\n\n        Vertices.rotate = function (vertices, angle, point) {\n          if (angle === 0) return;\n          var cos = Math.cos(angle),\n              sin = Math.sin(angle);\n\n          for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n          }\n\n          return vertices;\n        };\n        /**\n         * Returns `true` if the `point` is inside the set of `vertices`.\n         * @method contains\n         * @param {vertices} vertices\n         * @param {vector} point\n         * @return {boolean} True if the vertices contains point, otherwise false\n         */\n\n\n        Vertices.contains = function (vertices, point) {\n          for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n              return false;\n            }\n          }\n\n          return true;\n        };\n        /**\n         * Scales the vertices from a point (default is centre) in-place.\n         * @method scale\n         * @param {vertices} vertices\n         * @param {number} scaleX\n         * @param {number} scaleY\n         * @param {vector} point\n         */\n\n\n        Vertices.scale = function (vertices, scaleX, scaleY, point) {\n          if (scaleX === 1 && scaleY === 1) return vertices;\n          point = point || Vertices.centre(vertices);\n          var vertex, delta;\n\n          for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n          }\n\n          return vertices;\n        };\n        /**\n         * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n         * The radius parameter is a single number or an array to specify the radius for each vertex.\n         * @method chamfer\n         * @param {vertices} vertices\n         * @param {number[]} radius\n         * @param {number} quality\n         * @param {number} qualityMin\n         * @param {number} qualityMax\n         */\n\n\n        Vertices.chamfer = function (vertices, radius, quality, qualityMin, qualityMax) {\n          if (typeof radius === 'number') {\n            radius = [radius];\n          } else {\n            radius = radius || [8];\n          } // quality defaults to -1, which is auto\n\n\n          quality = typeof quality !== 'undefined' ? quality : -1;\n          qualityMin = qualityMin || 2;\n          qualityMax = qualityMax || 14;\n          var newVertices = [];\n\n          for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n              newVertices.push(vertex);\n              continue;\n            }\n\n            var prevNormal = Vector.normalise({\n              x: vertex.y - prevVertex.y,\n              y: prevVertex.x - vertex.x\n            });\n            var nextNormal = Vector.normalise({\n              x: nextVertex.y - vertex.y,\n              y: vertex.x - nextVertex.x\n            });\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n            var precision = quality;\n\n            if (quality === -1) {\n              // automatically decide precision\n              precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax); // use an even value for precision, more likely to reduce axes by using symmetry\n\n            if (precision % 2 === 1) precision += 1;\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n              newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n          }\n\n          return newVertices;\n        };\n        /**\n         * Sorts the input vertices into clockwise order in place.\n         * @method clockwiseSort\n         * @param {vertices} vertices\n         * @return {vertices} vertices\n         */\n\n\n        Vertices.clockwiseSort = function (vertices) {\n          var centre = Vertices.mean(vertices);\n          vertices.sort(function (vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n          });\n          return vertices;\n        };\n        /**\n         * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n         * @method isConvex\n         * @param {vertices} vertices\n         * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n         */\n\n\n        Vertices.isConvex = function (vertices) {\n          // http://paulbourke.net/geometry/polygonmesh/\n          // Copyright (c) Paul Bourke (use permitted)\n          var flag = 0,\n              n = vertices.length,\n              i,\n              j,\n              k,\n              z;\n          if (n < 3) return null;\n\n          for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n              flag |= 1;\n            } else if (z > 0) {\n              flag |= 2;\n            }\n\n            if (flag === 3) {\n              return false;\n            }\n          }\n\n          if (flag !== 0) {\n            return true;\n          } else {\n            return null;\n          }\n        };\n        /**\n         * Returns the convex hull of the input vertices as a new array of points.\n         * @method hull\n         * @param {vertices} vertices\n         * @return [vertex] vertices\n         */\n\n\n        Vertices.hull = function (vertices) {\n          // http://geomalgorithms.com/a10-_hull-1.html\n          var upper = [],\n              lower = [],\n              vertex,\n              i; // sort vertices on x-axis (y-axis for ties)\n\n          vertices = vertices.slice(0);\n          vertices.sort(function (vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n          }); // build lower hull\n\n          for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n              lower.pop();\n            }\n\n            lower.push(vertex);\n          } // build upper hull\n\n\n          for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n              upper.pop();\n            }\n\n            upper.push(vertex);\n          } // concatenation of the lower and upper hulls gives the convex hull\n          // omit last points because they are repeated at the beginning of the other list\n\n\n          upper.pop();\n          lower.pop();\n          return upper.concat(lower);\n        };\n      })();\n      /***/\n\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Events` module contains methods to fire and listen to events on other objects.\n      *\n      * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n      *\n      * @class Events\n      */\n      var Events = {};\n      module.exports = Events;\n\n      var Common = __webpack_require__(0);\n\n      (function () {\n        /**\n         * Subscribes a callback function to the given object's `eventName`.\n         * @method on\n         * @param {} object\n         * @param {string} eventNames\n         * @param {function} callback\n         */\n        Events.on = function (object, eventNames, callback) {\n          var names = eventNames.split(' '),\n              name;\n\n          for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n          }\n\n          return callback;\n        };\n        /**\n         * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n         * @method off\n         * @param {} object\n         * @param {string} eventNames\n         * @param {function} callback\n         */\n\n\n        Events.off = function (object, eventNames, callback) {\n          if (!eventNames) {\n            object.events = {};\n            return;\n          } // handle Events.off(object, callback)\n\n\n          if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n          }\n\n          var names = eventNames.split(' ');\n\n          for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n              for (var j = 0; j < callbacks.length; j++) {\n                if (callbacks[j] !== callback) newCallbacks.push(callbacks[j]);\n              }\n            }\n\n            object.events[names[i]] = newCallbacks;\n          }\n        };\n        /**\n         * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n         * @method trigger\n         * @param {} object\n         * @param {string} eventNames\n         * @param {} event\n         */\n\n\n        Events.trigger = function (object, eventNames, event) {\n          var names, name, callbacks, eventClone;\n          var events = object.events;\n\n          if (events && Common.keys(events).length > 0) {\n            if (!event) event = {};\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n              name = names[i];\n              callbacks = events[name];\n\n              if (callbacks) {\n                eventClone = Common.clone(event, false);\n                eventClone.name = name;\n                eventClone.source = object;\n\n                for (var j = 0; j < callbacks.length; j++) {\n                  callbacks[j].apply(object, [eventClone]);\n                }\n              }\n            }\n          }\n        };\n      })();\n      /***/\n\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n      * A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n      * It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n      * Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n      *\n      * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n      *\n      * @class Composite\n      */\n      var Composite = {};\n      module.exports = Composite;\n\n      var Events = __webpack_require__(4);\n\n      var Common = __webpack_require__(0);\n\n      var Bounds = __webpack_require__(1);\n\n      var Body = __webpack_require__(6);\n\n      (function () {\n        /**\n         * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n         * See the properites section below for detailed information on what you can pass via the `options` object.\n         * @method create\n         * @param {} [options]\n         * @return {composite} A new composite\n         */\n        Composite.create = function (options) {\n          return Common.extend({\n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [],\n            constraints: [],\n            composites: [],\n            label: 'Composite',\n            plugin: {}\n          }, options);\n        };\n        /**\n         * Sets the composite's `isModified` flag. \n         * If `updateParents` is true, all parents will be set (default: false).\n         * If `updateChildren` is true, all children will be set (default: false).\n         * @method setModified\n         * @param {composite} composite\n         * @param {boolean} isModified\n         * @param {boolean} [updateParents=false]\n         * @param {boolean} [updateChildren=false]\n         */\n\n\n        Composite.setModified = function (composite, isModified, updateParents, updateChildren) {\n          composite.isModified = isModified;\n\n          if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n          }\n\n          if (updateChildren) {\n            for (var i = 0; i < composite.composites.length; i++) {\n              var childComposite = composite.composites[i];\n              Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n          }\n        };\n        /**\n         * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n         * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n         * @method add\n         * @param {composite} composite\n         * @param {} object\n         * @return {composite} The original composite with the objects added\n         */\n\n\n        Composite.add = function (composite, object) {\n          var objects = [].concat(object);\n          Events.trigger(composite, 'beforeAdd', {\n            object: object\n          });\n\n          for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n              case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                  Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                  break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n\n              case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n\n              case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n\n              case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n            }\n          }\n\n          Events.trigger(composite, 'afterAdd', {\n            object: object\n          });\n          return composite;\n        };\n        /**\n         * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n         * Optionally searching its children recursively.\n         * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n         * @method remove\n         * @param {composite} composite\n         * @param {} object\n         * @param {boolean} [deep=false]\n         * @return {composite} The original composite with the objects removed\n         */\n\n\n        Composite.remove = function (composite, object, deep) {\n          var objects = [].concat(object);\n          Events.trigger(composite, 'beforeRemove', {\n            object: object\n          });\n\n          for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n              case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n\n              case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n\n              case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n\n              case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n            }\n          }\n\n          Events.trigger(composite, 'afterRemove', {\n            object: object\n          });\n          return composite;\n        };\n        /**\n         * Adds a composite to the given composite.\n         * @private\n         * @method addComposite\n         * @param {composite} compositeA\n         * @param {composite} compositeB\n         * @return {composite} The original compositeA with the objects from compositeB added\n         */\n\n\n        Composite.addComposite = function (compositeA, compositeB) {\n          compositeA.composites.push(compositeB);\n          compositeB.parent = compositeA;\n          Composite.setModified(compositeA, true, true, false);\n          return compositeA;\n        };\n        /**\n         * Removes a composite from the given composite, and optionally searching its children recursively.\n         * @private\n         * @method removeComposite\n         * @param {composite} compositeA\n         * @param {composite} compositeB\n         * @param {boolean} [deep=false]\n         * @return {composite} The original compositeA with the composite removed\n         */\n\n\n        Composite.removeComposite = function (compositeA, compositeB, deep) {\n          var position = Common.indexOf(compositeA.composites, compositeB);\n\n          if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n          }\n\n          if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++) {\n              Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n          }\n\n          return compositeA;\n        };\n        /**\n         * Removes a composite from the given composite.\n         * @private\n         * @method removeCompositeAt\n         * @param {composite} composite\n         * @param {number} position\n         * @return {composite} The original composite with the composite removed\n         */\n\n\n        Composite.removeCompositeAt = function (composite, position) {\n          composite.composites.splice(position, 1);\n          Composite.setModified(composite, true, true, false);\n          return composite;\n        };\n        /**\n         * Adds a body to the given composite.\n         * @private\n         * @method addBody\n         * @param {composite} composite\n         * @param {body} body\n         * @return {composite} The original composite with the body added\n         */\n\n\n        Composite.addBody = function (composite, body) {\n          composite.bodies.push(body);\n          Composite.setModified(composite, true, true, false);\n          return composite;\n        };\n        /**\n         * Removes a body from the given composite, and optionally searching its children recursively.\n         * @private\n         * @method removeBody\n         * @param {composite} composite\n         * @param {body} body\n         * @param {boolean} [deep=false]\n         * @return {composite} The original composite with the body removed\n         */\n\n\n        Composite.removeBody = function (composite, body, deep) {\n          var position = Common.indexOf(composite.bodies, body);\n\n          if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n          }\n\n          if (deep) {\n            for (var i = 0; i < composite.composites.length; i++) {\n              Composite.removeBody(composite.composites[i], body, true);\n            }\n          }\n\n          return composite;\n        };\n        /**\n         * Removes a body from the given composite.\n         * @private\n         * @method removeBodyAt\n         * @param {composite} composite\n         * @param {number} position\n         * @return {composite} The original composite with the body removed\n         */\n\n\n        Composite.removeBodyAt = function (composite, position) {\n          composite.bodies.splice(position, 1);\n          Composite.setModified(composite, true, true, false);\n          return composite;\n        };\n        /**\n         * Adds a constraint to the given composite.\n         * @private\n         * @method addConstraint\n         * @param {composite} composite\n         * @param {constraint} constraint\n         * @return {composite} The original composite with the constraint added\n         */\n\n\n        Composite.addConstraint = function (composite, constraint) {\n          composite.constraints.push(constraint);\n          Composite.setModified(composite, true, true, false);\n          return composite;\n        };\n        /**\n         * Removes a constraint from the given composite, and optionally searching its children recursively.\n         * @private\n         * @method removeConstraint\n         * @param {composite} composite\n         * @param {constraint} constraint\n         * @param {boolean} [deep=false]\n         * @return {composite} The original composite with the constraint removed\n         */\n\n\n        Composite.removeConstraint = function (composite, constraint, deep) {\n          var position = Common.indexOf(composite.constraints, constraint);\n\n          if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n          }\n\n          if (deep) {\n            for (var i = 0; i < composite.composites.length; i++) {\n              Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n          }\n\n          return composite;\n        };\n        /**\n         * Removes a body from the given composite.\n         * @private\n         * @method removeConstraintAt\n         * @param {composite} composite\n         * @param {number} position\n         * @return {composite} The original composite with the constraint removed\n         */\n\n\n        Composite.removeConstraintAt = function (composite, position) {\n          composite.constraints.splice(position, 1);\n          Composite.setModified(composite, true, true, false);\n          return composite;\n        };\n        /**\n         * Removes all bodies, constraints and composites from the given composite.\n         * Optionally clearing its children recursively.\n         * @method clear\n         * @param {composite} composite\n         * @param {boolean} keepStatic\n         * @param {boolean} [deep=false]\n         */\n\n\n        Composite.clear = function (composite, keepStatic, deep) {\n          if (deep) {\n            for (var i = 0; i < composite.composites.length; i++) {\n              Composite.clear(composite.composites[i], keepStatic, true);\n            }\n          }\n\n          if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function (body) {\n              return body.isStatic;\n            });\n          } else {\n            composite.bodies.length = 0;\n          }\n\n          composite.constraints.length = 0;\n          composite.composites.length = 0;\n          Composite.setModified(composite, true, true, false);\n          return composite;\n        };\n        /**\n         * Returns all bodies in the given composite, including all bodies in its children, recursively.\n         * @method allBodies\n         * @param {composite} composite\n         * @return {body[]} All the bodies\n         */\n\n\n        Composite.allBodies = function (composite) {\n          var bodies = [].concat(composite.bodies);\n\n          for (var i = 0; i < composite.composites.length; i++) {\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n          }\n\n          return bodies;\n        };\n        /**\n         * Returns all constraints in the given composite, including all constraints in its children, recursively.\n         * @method allConstraints\n         * @param {composite} composite\n         * @return {constraint[]} All the constraints\n         */\n\n\n        Composite.allConstraints = function (composite) {\n          var constraints = [].concat(composite.constraints);\n\n          for (var i = 0; i < composite.composites.length; i++) {\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n          }\n\n          return constraints;\n        };\n        /**\n         * Returns all composites in the given composite, including all composites in its children, recursively.\n         * @method allComposites\n         * @param {composite} composite\n         * @return {composite[]} All the composites\n         */\n\n\n        Composite.allComposites = function (composite) {\n          var composites = [].concat(composite.composites);\n\n          for (var i = 0; i < composite.composites.length; i++) {\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n          }\n\n          return composites;\n        };\n        /**\n         * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n         * @method get\n         * @param {composite} composite\n         * @param {number} id\n         * @param {string} type\n         * @return {object} The requested object, if found\n         */\n\n\n        Composite.get = function (composite, id, type) {\n          var objects, object;\n\n          switch (type) {\n            case 'body':\n              objects = Composite.allBodies(composite);\n              break;\n\n            case 'constraint':\n              objects = Composite.allConstraints(composite);\n              break;\n\n            case 'composite':\n              objects = Composite.allComposites(composite).concat(composite);\n              break;\n          }\n\n          if (!objects) return null;\n          object = objects.filter(function (object) {\n            return object.id.toString() === id.toString();\n          });\n          return object.length === 0 ? null : object[0];\n        };\n        /**\n         * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n         * @method move\n         * @param {compositeA} compositeA\n         * @param {object[]} objects\n         * @param {compositeB} compositeB\n         * @return {composite} Returns compositeA\n         */\n\n\n        Composite.move = function (compositeA, objects, compositeB) {\n          Composite.remove(compositeA, objects);\n          Composite.add(compositeB, objects);\n          return compositeA;\n        };\n        /**\n         * Assigns new ids for all objects in the composite, recursively.\n         * @method rebase\n         * @param {composite} composite\n         * @return {composite} Returns composite\n         */\n\n\n        Composite.rebase = function (composite) {\n          var objects = Composite.allBodies(composite).concat(Composite.allConstraints(composite)).concat(Composite.allComposites(composite));\n\n          for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n          }\n\n          Composite.setModified(composite, true, true, false);\n          return composite;\n        };\n        /**\n         * Translates all children in the composite by a given vector relative to their current positions, \n         * without imparting any velocity.\n         * @method translate\n         * @param {composite} composite\n         * @param {vector} translation\n         * @param {bool} [recursive=true]\n         */\n\n\n        Composite.translate = function (composite, translation, recursive) {\n          var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n          for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n          }\n\n          Composite.setModified(composite, true, true, false);\n          return composite;\n        };\n        /**\n         * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n         * @method rotate\n         * @param {composite} composite\n         * @param {number} rotation\n         * @param {vector} point\n         * @param {bool} [recursive=true]\n         */\n\n\n        Composite.rotate = function (composite, rotation, point, recursive) {\n          var cos = Math.cos(rotation),\n              sin = Math.sin(rotation),\n              bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n          for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n            Body.setPosition(body, {\n              x: point.x + (dx * cos - dy * sin),\n              y: point.y + (dx * sin + dy * cos)\n            });\n            Body.rotate(body, rotation);\n          }\n\n          Composite.setModified(composite, true, true, false);\n          return composite;\n        };\n        /**\n         * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n         * @method scale\n         * @param {composite} composite\n         * @param {number} scaleX\n         * @param {number} scaleY\n         * @param {vector} point\n         * @param {bool} [recursive=true]\n         */\n\n\n        Composite.scale = function (composite, scaleX, scaleY, point, recursive) {\n          var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n          for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n            Body.setPosition(body, {\n              x: point.x + dx * scaleX,\n              y: point.y + dy * scaleY\n            });\n            Body.scale(body, scaleX, scaleY);\n          }\n\n          Composite.setModified(composite, true, true, false);\n          return composite;\n        };\n        /**\n         * Returns the union of the bounds of all of the composite's bodies.\n         * @method bounds\n         * @param {composite} composite The composite.\n         * @returns {bounds} The composite bounds.\n         */\n\n\n        Composite.bounds = function (composite) {\n          var bodies = Composite.allBodies(composite),\n              vertices = [];\n\n          for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n          }\n\n          return Bounds.create(vertices);\n        };\n        /*\n        *\n        *  Events Documentation\n        *\n        */\n\n        /**\n        * Fired when a call to `Composite.add` is made, before objects have been added.\n        *\n        * @event beforeAdd\n        * @param {} event An event object\n        * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired when a call to `Composite.add` is made, after objects have been added.\n        *\n        * @event afterAdd\n        * @param {} event An event object\n        * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired when a call to `Composite.remove` is made, before objects have been removed.\n        *\n        * @event beforeRemove\n        * @param {} event An event object\n        * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired when a call to `Composite.remove` is made, after objects have been removed.\n        *\n        * @event afterRemove\n        * @param {} event An event object\n        * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /*\n        *\n        *  Properties Documentation\n        *\n        */\n\n        /**\n         * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n         *\n         * @property id\n         * @type number\n         */\n\n        /**\n         * A `String` denoting the type of object.\n         *\n         * @property type\n         * @type string\n         * @default \"composite\"\n         * @readOnly\n         */\n\n        /**\n         * An arbitrary `String` name to help the user identify and manage composites.\n         *\n         * @property label\n         * @type string\n         * @default \"Composite\"\n         */\n\n        /**\n         * A flag that specifies whether the composite has been modified during the current step.\n         * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n         * If you need to change it manually, you should use the `Composite.setModified` method.\n         *\n         * @property isModified\n         * @type boolean\n         * @default false\n         */\n\n        /**\n         * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n         *\n         * @property parent\n         * @type composite\n         * @default null\n         */\n\n        /**\n         * An array of `Body` that are _direct_ children of this composite.\n         * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n         * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n         *\n         * @property bodies\n         * @type body[]\n         * @default []\n         */\n\n        /**\n         * An array of `Constraint` that are _direct_ children of this composite.\n         * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n         * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n         *\n         * @property constraints\n         * @type constraint[]\n         * @default []\n         */\n\n        /**\n         * An array of `Composite` that are _direct_ children of this composite.\n         * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n         * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n         *\n         * @property composites\n         * @type composite[]\n         * @default []\n         */\n\n        /**\n         * An object reserved for storing plugin-specific properties.\n         *\n         * @property plugin\n         * @type {}\n         */\n\n      })();\n      /***/\n\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Body` module contains methods for creating and manipulating body models.\n      * A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n      * Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n      *\n      * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n      \n      * @class Body\n      */\n      var Body = {};\n      module.exports = Body;\n\n      var Vertices = __webpack_require__(3);\n\n      var Vector = __webpack_require__(2);\n\n      var Sleeping = __webpack_require__(7);\n\n      var Render = __webpack_require__(10);\n\n      var Common = __webpack_require__(0);\n\n      var Bounds = __webpack_require__(1);\n\n      var Axes = __webpack_require__(15);\n\n      (function () {\n        Body._inertiaScale = 4;\n        Body._nextCollidingGroupId = 1;\n        Body._nextNonCollidingGroupId = -1;\n        Body._nextCategory = 0x0001;\n        /**\n         * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n         * All properties have default values, and many are pre-calculated automatically based on other properties.\n         * Vertices must be specified in clockwise order.\n         * See the properties section below for detailed information on what you can pass via the `options` object.\n         * @method create\n         * @param {} options\n         * @return {body} body\n         */\n\n        Body.create = function (options) {\n          var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: {\n              x: 0,\n              y: 0\n            },\n            force: {\n              x: 0,\n              y: 0\n            },\n            torque: 0,\n            positionImpulse: {\n              x: 0,\n              y: 0\n            },\n            constraintImpulse: {\n              x: 0,\n              y: 0,\n              angle: 0\n            },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: {\n              x: 0,\n              y: 0\n            },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n              category: 0x0001,\n              mask: 0xFFFFFFFF,\n              group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n              visible: true,\n              opacity: 1,\n              strokeStyle: null,\n              fillStyle: null,\n              lineWidth: null,\n              sprite: {\n                xScale: 1,\n                yScale: 1,\n                xOffset: 0,\n                yOffset: 0\n              }\n            },\n            events: null,\n            bounds: null,\n            chamfer: null,\n            circleRadius: 0,\n            positionPrev: null,\n            anglePrev: 0,\n            parent: null,\n            axes: null,\n            area: 0,\n            mass: 0,\n            inertia: 0,\n            _original: null\n          };\n          var body = Common.extend(defaults, options);\n\n          _initProperties(body, options);\n\n          return body;\n        };\n        /**\n         * Returns the next unique group index for which bodies will collide.\n         * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n         * See `body.collisionFilter` for more information.\n         * @method nextGroup\n         * @param {bool} [isNonColliding=false]\n         * @return {Number} Unique group index\n         */\n\n\n        Body.nextGroup = function (isNonColliding) {\n          if (isNonColliding) return Body._nextNonCollidingGroupId--;\n          return Body._nextCollidingGroupId++;\n        };\n        /**\n         * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n         * There are 32 available. See `body.collisionFilter` for more information.\n         * @method nextCategory\n         * @return {Number} Unique category bitfield\n         */\n\n\n        Body.nextCategory = function () {\n          Body._nextCategory = Body._nextCategory << 1;\n          return Body._nextCategory;\n        };\n        /**\n         * Initialises body properties.\n         * @method _initProperties\n         * @private\n         * @param {body} body\n         * @param {} [options]\n         */\n\n\n        var _initProperties = function _initProperties(body, options) {\n          options = options || {}; // init required properties (order is important)\n\n          Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n          });\n          Vertices.rotate(body.vertices, body.angle, body.position);\n          Axes.rotate(body.axes, body.angle);\n          Bounds.update(body.bounds, body.vertices, body.velocity); // allow options to override the automatically calculated properties\n\n          Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n          }); // render properties\n\n          var defaultFillStyle = body.isStatic ? '#14151f' : Common.choose(['#f19648', '#f5d259', '#f55a3c', '#063e7b', '#ececd1']),\n              defaultStrokeStyle = body.isStatic ? '#555' : '#ccc',\n              defaultLineWidth = body.isStatic && body.render.fillStyle === null ? 1 : 0;\n          body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n          body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n          body.render.lineWidth = body.render.lineWidth || defaultLineWidth;\n          body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n          body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n        };\n        /**\n         * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n         * Prefer to use the actual setter functions in performance critical situations.\n         * @method set\n         * @param {body} body\n         * @param {} settings A property name (or map of properties and values) to set on the body.\n         * @param {} value The value to set if `settings` is a single property name.\n         */\n\n\n        Body.set = function (body, settings, value) {\n          var property;\n\n          if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n          }\n\n          for (property in settings) {\n            if (!Object.prototype.hasOwnProperty.call(settings, property)) continue;\n            value = settings[property];\n\n            switch (property) {\n              case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n\n              case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n\n              case 'mass':\n                Body.setMass(body, value);\n                break;\n\n              case 'density':\n                Body.setDensity(body, value);\n                break;\n\n              case 'inertia':\n                Body.setInertia(body, value);\n                break;\n\n              case 'vertices':\n                Body.setVertices(body, value);\n                break;\n\n              case 'position':\n                Body.setPosition(body, value);\n                break;\n\n              case 'angle':\n                Body.setAngle(body, value);\n                break;\n\n              case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n\n              case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n\n              case 'parts':\n                Body.setParts(body, value);\n                break;\n\n              case 'centre':\n                Body.setCentre(body, value);\n                break;\n\n              default:\n                body[property] = value;\n            }\n          }\n        };\n        /**\n         * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n         * @method setStatic\n         * @param {body} body\n         * @param {bool} isStatic\n         */\n\n\n        Body.setStatic = function (body, isStatic) {\n          for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n              part._original = {\n                restitution: part.restitution,\n                friction: part.friction,\n                mass: part.mass,\n                inertia: part.inertia,\n                density: part.density,\n                inverseMass: part.inverseMass,\n                inverseInertia: part.inverseInertia\n              };\n              part.restitution = 0;\n              part.friction = 1;\n              part.mass = part.inertia = part.density = Infinity;\n              part.inverseMass = part.inverseInertia = 0;\n              part.positionPrev.x = part.position.x;\n              part.positionPrev.y = part.position.y;\n              part.anglePrev = part.angle;\n              part.angularVelocity = 0;\n              part.speed = 0;\n              part.angularSpeed = 0;\n              part.motion = 0;\n            } else if (part._original) {\n              part.restitution = part._original.restitution;\n              part.friction = part._original.friction;\n              part.mass = part._original.mass;\n              part.inertia = part._original.inertia;\n              part.density = part._original.density;\n              part.inverseMass = part._original.inverseMass;\n              part.inverseInertia = part._original.inverseInertia;\n              part._original = null;\n            }\n          }\n        };\n        /**\n         * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n         * @method setMass\n         * @param {body} body\n         * @param {number} mass\n         */\n\n\n        Body.setMass = function (body, mass) {\n          var moment = body.inertia / (body.mass / 6);\n          body.inertia = moment * (mass / 6);\n          body.inverseInertia = 1 / body.inertia;\n          body.mass = mass;\n          body.inverseMass = 1 / body.mass;\n          body.density = body.mass / body.area;\n        };\n        /**\n         * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n         * @method setDensity\n         * @param {body} body\n         * @param {number} density\n         */\n\n\n        Body.setDensity = function (body, density) {\n          Body.setMass(body, density * body.area);\n          body.density = density;\n        };\n        /**\n         * Sets the moment of inertia (i.e. second moment of area) of the body. \n         * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n         * @method setInertia\n         * @param {body} body\n         * @param {number} inertia\n         */\n\n\n        Body.setInertia = function (body, inertia) {\n          body.inertia = inertia;\n          body.inverseInertia = 1 / body.inertia;\n        };\n        /**\n         * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n         * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n         * They are then automatically translated to world space based on `body.position`.\n         *\n         * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n         * Vertices must form a convex hull, concave hulls are not supported.\n         *\n         * @method setVertices\n         * @param {body} body\n         * @param {vector[]} vertices\n         */\n\n\n        Body.setVertices = function (body, vertices) {\n          // change vertices\n          if (vertices[0].body === body) {\n            body.vertices = vertices;\n          } else {\n            body.vertices = Vertices.create(vertices, body);\n          } // update properties\n\n\n          body.axes = Axes.fromVertices(body.vertices);\n          body.area = Vertices.area(body.vertices);\n          Body.setMass(body, body.density * body.area); // orient vertices around the centre of mass at origin (0, 0)\n\n          var centre = Vertices.centre(body.vertices);\n          Vertices.translate(body.vertices, centre, -1); // update inertia while vertices are at origin (0, 0)\n\n          Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass)); // update geometry\n\n          Vertices.translate(body.vertices, body.position);\n          Bounds.update(body.bounds, body.vertices, body.velocity);\n        };\n        /**\n         * Sets the parts of the `body` and updates mass, inertia and centroid.\n         * Each part will have its parent set to `body`.\n         * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n         * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n         * @method setParts\n         * @param {body} body\n         * @param [body] parts\n         * @param {bool} [autoHull=true]\n         */\n\n\n        Body.setParts = function (body, parts, autoHull) {\n          var i; // add all the parts, ensuring that the first part is always the parent body\n\n          parts = parts.slice(0);\n          body.parts.length = 0;\n          body.parts.push(body);\n          body.parent = body;\n\n          for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n\n            if (part !== body) {\n              part.parent = body;\n              body.parts.push(part);\n            }\n          }\n\n          if (body.parts.length === 1) return;\n          autoHull = typeof autoHull !== 'undefined' ? autoHull : true; // find the convex hull of all parts to set on the parent body\n\n          if (autoHull) {\n            var vertices = [];\n\n            for (i = 0; i < parts.length; i++) {\n              vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n          } // sum the properties of all compound parts of the parent body\n\n\n          var total = Body._totalProperties(body);\n\n          body.area = total.area;\n          body.parent = body;\n          body.position.x = total.centre.x;\n          body.position.y = total.centre.y;\n          body.positionPrev.x = total.centre.x;\n          body.positionPrev.y = total.centre.y;\n          Body.setMass(body, total.mass);\n          Body.setInertia(body, total.inertia);\n          Body.setPosition(body, total.centre);\n        };\n        /**\n         * Set the centre of mass of the body. \n         * The `centre` is a vector in world-space unless `relative` is set, in which case it is a translation.\n         * The centre of mass is the point the body rotates about and can be used to simulate non-uniform density.\n         * This is equal to moving `body.position` but not the `body.vertices`.\n         * Invalid if the `centre` falls outside the body's convex hull.\n         * @method setCentre\n         * @param {body} body\n         * @param {vector} centre\n         * @param {bool} relative\n         */\n\n\n        Body.setCentre = function (body, centre, relative) {\n          if (!relative) {\n            body.positionPrev.x = centre.x - (body.position.x - body.positionPrev.x);\n            body.positionPrev.y = centre.y - (body.position.y - body.positionPrev.y);\n            body.position.x = centre.x;\n            body.position.y = centre.y;\n          } else {\n            body.positionPrev.x += centre.x;\n            body.positionPrev.y += centre.y;\n            body.position.x += centre.x;\n            body.position.y += centre.y;\n          }\n        };\n        /**\n         * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n         * @method setPosition\n         * @param {body} body\n         * @param {vector} position\n         */\n\n\n        Body.setPosition = function (body, position) {\n          var delta = Vector.sub(position, body.position);\n          body.positionPrev.x += delta.x;\n          body.positionPrev.y += delta.y;\n\n          for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n          }\n        };\n        /**\n         * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n         * @method setAngle\n         * @param {body} body\n         * @param {number} angle\n         */\n\n\n        Body.setAngle = function (body, angle) {\n          var delta = angle - body.angle;\n          body.anglePrev += delta;\n\n          for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n\n            if (i > 0) {\n              Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n          }\n        };\n        /**\n         * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n         * @method setVelocity\n         * @param {body} body\n         * @param {vector} velocity\n         */\n\n\n        Body.setVelocity = function (body, velocity) {\n          body.positionPrev.x = body.position.x - velocity.x;\n          body.positionPrev.y = body.position.y - velocity.y;\n          body.velocity.x = velocity.x;\n          body.velocity.y = velocity.y;\n          body.speed = Vector.magnitude(body.velocity);\n        };\n        /**\n         * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n         * @method setAngularVelocity\n         * @param {body} body\n         * @param {number} velocity\n         */\n\n\n        Body.setAngularVelocity = function (body, velocity) {\n          body.anglePrev = body.angle - velocity;\n          body.angularVelocity = velocity;\n          body.angularSpeed = Math.abs(body.angularVelocity);\n        };\n        /**\n         * Moves a body by a given vector relative to its current position, without imparting any velocity.\n         * @method translate\n         * @param {body} body\n         * @param {vector} translation\n         */\n\n\n        Body.translate = function (body, translation) {\n          Body.setPosition(body, Vector.add(body.position, translation));\n        };\n        /**\n         * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n         * @method rotate\n         * @param {body} body\n         * @param {number} rotation\n         * @param {vector} [point]\n         */\n\n\n        Body.rotate = function (body, rotation, point) {\n          if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n          } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n            Body.setPosition(body, {\n              x: point.x + (dx * cos - dy * sin),\n              y: point.y + (dx * sin + dy * cos)\n            });\n            Body.setAngle(body, body.angle + rotation);\n          }\n        };\n        /**\n         * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n         * @method scale\n         * @param {body} body\n         * @param {number} scaleX\n         * @param {number} scaleY\n         * @param {vector} [point]\n         */\n\n\n        Body.scale = function (body, scaleX, scaleY, point) {\n          var totalArea = 0,\n              totalInertia = 0;\n          point = point || body.position;\n\n          for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i]; // scale vertices\n\n            Vertices.scale(part.vertices, scaleX, scaleY, point); // update properties\n\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area); // update inertia (requires vertices to be at origin)\n\n            Vertices.translate(part.vertices, {\n              x: -part.position.x,\n              y: -part.position.y\n            });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, {\n              x: part.position.x,\n              y: part.position.y\n            });\n\n            if (i > 0) {\n              totalArea += part.area;\n              totalInertia += part.inertia;\n            } // scale position\n\n\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY; // update bounds\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n          } // handle parent body\n\n\n          if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n              Body.setMass(body, body.density * totalArea);\n              Body.setInertia(body, totalInertia);\n            }\n          } // handle circles\n\n\n          if (body.circleRadius) {\n            if (scaleX === scaleY) {\n              body.circleRadius *= scaleX;\n            } else {\n              // body is no longer a circle\n              body.circleRadius = null;\n            }\n          }\n        };\n        /**\n         * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n         * @method update\n         * @param {body} body\n         * @param {number} deltaTime\n         * @param {number} timeScale\n         * @param {number} correction\n         */\n\n\n        Body.update = function (body, deltaTime, timeScale, correction) {\n          var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2); // from the previous step\n\n          var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n              velocityPrevX = body.position.x - body.positionPrev.x,\n              velocityPrevY = body.position.y - body.positionPrev.y; // update velocity with Verlet integration\n\n          body.velocity.x = velocityPrevX * frictionAir * correction + body.force.x / body.mass * deltaTimeSquared;\n          body.velocity.y = velocityPrevY * frictionAir * correction + body.force.y / body.mass * deltaTimeSquared;\n          body.positionPrev.x = body.position.x;\n          body.positionPrev.y = body.position.y;\n          body.position.x += body.velocity.x;\n          body.position.y += body.velocity.y; // update angular velocity with Verlet integration\n\n          body.angularVelocity = (body.angle - body.anglePrev) * frictionAir * correction + body.torque / body.inertia * deltaTimeSquared;\n          body.anglePrev = body.angle;\n          body.angle += body.angularVelocity; // track speed and acceleration\n\n          body.speed = Vector.magnitude(body.velocity);\n          body.angularSpeed = Math.abs(body.angularVelocity); // transform the body geometry\n\n          for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            Vertices.translate(part.vertices, body.velocity);\n\n            if (i > 0) {\n              part.position.x += body.velocity.x;\n              part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n              Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n              Axes.rotate(part.axes, body.angularVelocity);\n\n              if (i > 0) {\n                Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n              }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n          }\n        };\n        /**\n         * Applies a force to a body from a given world-space position, including resulting torque.\n         * @method applyForce\n         * @param {body} body\n         * @param {vector} position\n         * @param {vector} force\n         */\n\n\n        Body.applyForce = function (body, position, force) {\n          body.force.x += force.x;\n          body.force.y += force.y;\n          var offset = {\n            x: position.x - body.position.x,\n            y: position.y - body.position.y\n          };\n          body.torque += offset.x * force.y - offset.y * force.x;\n        };\n        /**\n         * Returns the sums of the properties of all compound parts of the parent body.\n         * @method _totalProperties\n         * @private\n         * @param {body} body\n         * @return {}\n         */\n\n\n        Body._totalProperties = function (body) {\n          // from equations at:\n          // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n          // http://output.to/sideway/default.asp?qno=121100087\n          var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: {\n              x: 0,\n              y: 0\n            }\n          }; // sum the properties of all compound parts of the parent body\n\n          for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n          }\n\n          properties.centre = Vector.div(properties.centre, properties.mass);\n          return properties;\n        };\n        /*\n        *\n        *  Events Documentation\n        *\n        */\n\n        /**\n        * Fired when a body starts sleeping (where `this` is the body).\n        *\n        * @event sleepStart\n        * @this {body} The body that has started sleeping\n        * @param {} event An event object\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired when a body ends sleeping (where `this` is the body).\n        *\n        * @event sleepEnd\n        * @this {body} The body that has ended sleeping\n        * @param {} event An event object\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /*\n        *\n        *  Properties Documentation\n        *\n        */\n\n        /**\n         * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n         *\n         * @property id\n         * @type number\n         */\n\n        /**\n         * A `String` denoting the type of object.\n         *\n         * @property type\n         * @type string\n         * @default \"body\"\n         * @readOnly\n         */\n\n        /**\n         * An arbitrary `String` name to help the user identify and manage bodies.\n         *\n         * @property label\n         * @type string\n         * @default \"Body\"\n         */\n\n        /**\n         * An array of bodies that make up this body. \n         * The first body in the array must always be a self reference to the current body instance.\n         * All bodies in the `parts` array together form a single rigid compound body.\n         * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n         * Parts themselves should never be added to a `World`, only the parent body should be.\n         * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n         *\n         * @property parts\n         * @type body[]\n         */\n\n        /**\n         * An object reserved for storing plugin-specific properties.\n         *\n         * @property plugin\n         * @type {}\n         */\n\n        /**\n         * A self reference if the body is _not_ a part of another body.\n         * Otherwise this is a reference to the body that this is a part of.\n         * See `body.parts`.\n         *\n         * @property parent\n         * @type body\n         */\n\n        /**\n         * A `Number` specifying the angle of the body, in radians.\n         *\n         * @property angle\n         * @type number\n         * @default 0\n         */\n\n        /**\n         * An array of `Vector` objects that specify the convex hull of the rigid body.\n         * These should be provided about the origin `(0, 0)`. E.g.\n         *\n         *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n         *\n         * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n         * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n         *\n         * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n         * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n         *\n         * @property vertices\n         * @type vector[]\n         */\n\n        /**\n         * A `Vector` that specifies the current world-space position of the body.\n         *\n         * @property position\n         * @type vector\n         * @default { x: 0, y: 0 }\n         */\n\n        /**\n         * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n         *\n         * @property force\n         * @type vector\n         * @default { x: 0, y: 0 }\n         */\n\n        /**\n         * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n         *\n         * @property torque\n         * @type number\n         * @default 0\n         */\n\n        /**\n         * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n         *\n         * @readOnly\n         * @property speed\n         * @type number\n         * @default 0\n         */\n\n        /**\n         * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n         *\n         * @readOnly\n         * @property angularSpeed\n         * @type number\n         * @default 0\n         */\n\n        /**\n         * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n         * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n         *\n         * @readOnly\n         * @property velocity\n         * @type vector\n         * @default { x: 0, y: 0 }\n         */\n\n        /**\n         * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n         * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n         *\n         * @readOnly\n         * @property angularVelocity\n         * @type number\n         * @default 0\n         */\n\n        /**\n         * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n         * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n         *\n         * @property isStatic\n         * @type boolean\n         * @default false\n         */\n\n        /**\n         * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n         *\n         * @property isSensor\n         * @type boolean\n         * @default false\n         */\n\n        /**\n         * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n         * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n         *\n         * @property isSleeping\n         * @type boolean\n         * @default false\n         */\n\n        /**\n         * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n         * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n         *\n         * @readOnly\n         * @property motion\n         * @type number\n         * @default 0\n         */\n\n        /**\n         * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n         *\n         * @property sleepThreshold\n         * @type number\n         * @default 60\n         */\n\n        /**\n         * A `Number` that defines the density of the body, that is its mass per unit area.\n         * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n         * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n         *\n         * @property density\n         * @type number\n         * @default 0.001\n         */\n\n        /**\n         * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n         * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n         *\n         * @property mass\n         * @type number\n         */\n\n        /**\n         * A `Number` that defines the inverse mass of the body (`1 / mass`).\n         * If you modify this value, you must also modify the `body.mass` property.\n         *\n         * @property inverseMass\n         * @type number\n         */\n\n        /**\n         * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n         * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n         * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n         *\n         * @property inertia\n         * @type number\n         */\n\n        /**\n         * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n         * If you modify this value, you must also modify the `body.inertia` property.\n         *\n         * @property inverseInertia\n         * @type number\n         */\n\n        /**\n         * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n         * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n         * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n         * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n         *\n         *     Math.max(bodyA.restitution, bodyB.restitution)\n         *\n         * @property restitution\n         * @type number\n         * @default 0\n         */\n\n        /**\n         * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n         * A value of `0` means that the body may slide indefinitely.\n         * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n         *\n         * The effects of the value may be non-linear. \n         * High values may be unstable depending on the body.\n         * The engine uses a Coulomb friction model including static and kinetic friction.\n         * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n         *\n         *     Math.min(bodyA.friction, bodyB.friction)\n         *\n         * @property friction\n         * @type number\n         * @default 0.1\n         */\n\n        /**\n         * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n         * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n         * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n         * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n         *\n         * @property frictionStatic\n         * @type number\n         * @default 0.5\n         */\n\n        /**\n         * A `Number` that defines the air friction of the body (air resistance). \n         * A value of `0` means the body will never slow as it moves through space.\n         * The higher the value, the faster a body slows when moving through space.\n         * The effects of the value are non-linear. \n         *\n         * @property frictionAir\n         * @type number\n         * @default 0.01\n         */\n\n        /**\n         * An `Object` that specifies the collision filtering properties of this body.\n         *\n         * Collisions between two bodies will obey the following rules:\n         * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n         *   they will always collide if the value is positive, and they will never collide\n         *   if the value is negative.\n         * - If the two bodies have different values of `collisionFilter.group` or if one\n         *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n         *\n         * Each body belongs to a collision category, given by `collisionFilter.category`. This\n         * value is used as a bit field and the category should have only one bit set, meaning that\n         * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n         * different collision categories available.\n         *\n         * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n         * the categories it collides with (the value is the bitwise AND value of all these categories).\n         *\n         * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n         * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n         * are both true.\n         *\n         * @property collisionFilter\n         * @type object\n         */\n\n        /**\n         * An Integer `Number`, that specifies the collision group this body belongs to.\n         * See `body.collisionFilter` for more information.\n         *\n         * @property collisionFilter.group\n         * @type object\n         * @default 0\n         */\n\n        /**\n         * A bit field that specifies the collision category this body belongs to.\n         * The category value should have only one bit set, for example `0x0001`.\n         * This means there are up to 32 unique collision categories available.\n         * See `body.collisionFilter` for more information.\n         *\n         * @property collisionFilter.category\n         * @type object\n         * @default 1\n         */\n\n        /**\n         * A bit mask that specifies the collision categories this body may collide with.\n         * See `body.collisionFilter` for more information.\n         *\n         * @property collisionFilter.mask\n         * @type object\n         * @default -1\n         */\n\n        /**\n         * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n         * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n         * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n         *\n         * @property slop\n         * @type number\n         * @default 0.05\n         */\n\n        /**\n         * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n         *\n         * @property timeScale\n         * @type number\n         * @default 1\n         */\n\n        /**\n         * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n         *\n         * @property render\n         * @type object\n         */\n\n        /**\n         * A flag that indicates if the body should be rendered.\n         *\n         * @property render.visible\n         * @type boolean\n         * @default true\n         */\n\n        /**\n         * Sets the opacity to use when rendering.\n         *\n         * @property render.opacity\n         * @type number\n         * @default 1\n        */\n\n        /**\n         * An `Object` that defines the sprite properties to use when rendering, if any.\n         *\n         * @property render.sprite\n         * @type object\n         */\n\n        /**\n         * An `String` that defines the path to the image to use as the sprite texture, if any.\n         *\n         * @property render.sprite.texture\n         * @type string\n         */\n\n        /**\n         * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n         *\n         * @property render.sprite.xScale\n         * @type number\n         * @default 1\n         */\n\n        /**\n         * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n         *\n         * @property render.sprite.yScale\n         * @type number\n         * @default 1\n         */\n\n        /**\n          * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n          *\n          * @property render.sprite.xOffset\n          * @type number\n          * @default 0\n          */\n\n        /**\n          * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n          *\n          * @property render.sprite.yOffset\n          * @type number\n          * @default 0\n          */\n\n        /**\n         * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n         * A value of `0` means no outline will be rendered.\n         *\n         * @property render.lineWidth\n         * @type number\n         * @default 0\n         */\n\n        /**\n         * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n         * It is the same as when using a canvas, so it accepts CSS style property values.\n         *\n         * @property render.fillStyle\n         * @type string\n         * @default a random colour\n         */\n\n        /**\n         * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n         * It is the same as when using a canvas, so it accepts CSS style property values.\n         *\n         * @property render.strokeStyle\n         * @type string\n         * @default a random colour\n         */\n\n        /**\n         * An array of unique axis vectors (edge normals) used for collision detection.\n         * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n         * They are constantly updated by `Body.update` during the simulation.\n         *\n         * @property axes\n         * @type vector[]\n         */\n\n        /**\n         * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n         *\n         * @property area\n         * @type string\n         * @default \n         */\n\n        /**\n         * A `Bounds` object that defines the AABB region for the body.\n         * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n         *\n         * @property bounds\n         * @type bounds\n         */\n\n      })();\n      /***/\n\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n      *\n      * @class Sleeping\n      */\n      var Sleeping = {};\n      module.exports = Sleeping;\n\n      var Events = __webpack_require__(4);\n\n      (function () {\n        Sleeping._motionWakeThreshold = 0.18;\n        Sleeping._motionSleepThreshold = 0.08;\n        Sleeping._minBias = 0.9;\n        /**\n         * Puts bodies to sleep or wakes them up depending on their motion.\n         * @method update\n         * @param {body[]} bodies\n         * @param {number} timeScale\n         */\n\n        Sleeping.update = function (bodies, timeScale) {\n          var timeFactor = timeScale * timeScale * timeScale; // update bodies sleeping status\n\n          for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed; // wake up bodies if they have a force applied\n\n            if (body.force.x !== 0 || body.force.y !== 0) {\n              Sleeping.set(body, false);\n              continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion); // biased average motion estimation between frames\n\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n\n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n              body.sleepCounter += 1;\n              if (body.sleepCounter >= body.sleepThreshold) Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n              body.sleepCounter -= 1;\n            }\n          }\n        };\n        /**\n         * Given a set of colliding pairs, wakes the sleeping bodies involved.\n         * @method afterCollisions\n         * @param {pair[]} pairs\n         * @param {number} timeScale\n         */\n\n\n        Sleeping.afterCollisions = function (pairs, timeScale) {\n          var timeFactor = timeScale * timeScale * timeScale; // wake up bodies involved in collisions\n\n          for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i]; // don't wake inactive pairs\n\n            if (!pair.isActive) continue;\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent,\n                bodyB = collision.bodyB.parent; // don't wake if at least one body is static\n\n            if (bodyA.isSleeping && bodyB.isSleeping || bodyA.isStatic || bodyB.isStatic) continue;\n\n            if (bodyA.isSleeping || bodyB.isSleeping) {\n              var sleepingBody = bodyA.isSleeping && !bodyA.isStatic ? bodyA : bodyB,\n                  movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n              if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                Sleeping.set(sleepingBody, false);\n              }\n            }\n          }\n        };\n        /**\n         * Set a body as sleeping or awake.\n         * @method set\n         * @param {body} body\n         * @param {boolean} isSleeping\n         */\n\n\n        Sleeping.set = function (body, isSleeping) {\n          var wasSleeping = body.isSleeping;\n\n          if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n              Events.trigger(body, 'sleepStart');\n            }\n          } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n              Events.trigger(body, 'sleepEnd');\n            }\n          }\n        };\n      })();\n      /***/\n\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n      * Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n      * The stiffness of constraints can be modified to create springs or elastic.\n      *\n      * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n      *\n      * @class Constraint\n      */\n      var Constraint = {};\n      module.exports = Constraint;\n\n      var Vertices = __webpack_require__(3);\n\n      var Vector = __webpack_require__(2);\n\n      var Sleeping = __webpack_require__(7);\n\n      var Bounds = __webpack_require__(1);\n\n      var Axes = __webpack_require__(15);\n\n      var Common = __webpack_require__(0);\n\n      (function () {\n        Constraint._warming = 0.4;\n        Constraint._torqueDampen = 1;\n        Constraint._minLength = 0.000001;\n        /**\n         * Creates a new constraint.\n         * All properties have default values, and many are pre-calculated automatically based on other properties.\n         * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n         * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n         * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n         * See the properties section below for detailed information on what you can pass via the `options` object.\n         * @method create\n         * @param {} options\n         * @return {constraint} constraint\n         */\n\n        Constraint.create = function (options) {\n          var constraint = options; // if bodies defined but no points, use body centre\n\n          if (constraint.bodyA && !constraint.pointA) constraint.pointA = {\n            x: 0,\n            y: 0\n          };\n          if (constraint.bodyB && !constraint.pointB) constraint.pointB = {\n            x: 0,\n            y: 0\n          }; // calculate static length using initial world space points\n\n          var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n              initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n              length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n          constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length; // option defaults\n\n          constraint.id = constraint.id || Common.nextId();\n          constraint.label = constraint.label || 'Constraint';\n          constraint.type = 'constraint';\n          constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n          constraint.damping = constraint.damping || 0;\n          constraint.angularStiffness = constraint.angularStiffness || 0;\n          constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n          constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n          constraint.plugin = {}; // render\n\n          var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n          };\n\n          if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n          } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n          }\n\n          constraint.render = Common.extend(render, constraint.render);\n          return constraint;\n        };\n        /**\n         * Prepares for solving by constraint warming.\n         * @private\n         * @method preSolveAll\n         * @param {body[]} bodies\n         */\n\n\n        Constraint.preSolveAll = function (bodies) {\n          for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || impulse.x === 0 && impulse.y === 0 && impulse.angle === 0) {\n              continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n          }\n        };\n        /**\n         * Solves all constraints in a list of collisions.\n         * @private\n         * @method solveAll\n         * @param {constraint[]} constraints\n         * @param {number} timeScale\n         */\n\n\n        Constraint.solveAll = function (constraints, timeScale) {\n          // Solve fixed constraints first.\n          for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || constraint.bodyA && constraint.bodyA.isStatic,\n                fixedB = !constraint.bodyB || constraint.bodyB && constraint.bodyB.isStatic;\n\n            if (fixedA || fixedB) {\n              Constraint.solve(constraints[i], timeScale);\n            }\n          } // Solve free constraints last.\n\n\n          for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || constraint.bodyA && constraint.bodyA.isStatic;\n            fixedB = !constraint.bodyB || constraint.bodyB && constraint.bodyB.isStatic;\n\n            if (!fixedA && !fixedB) {\n              Constraint.solve(constraints[i], timeScale);\n            }\n          }\n        };\n        /**\n         * Solves a distance constraint with Gauss-Siedel method.\n         * @private\n         * @method solve\n         * @param {constraint} constraint\n         * @param {number} timeScale\n         */\n\n\n        Constraint.solve = function (constraint, timeScale) {\n          var bodyA = constraint.bodyA,\n              bodyB = constraint.bodyB,\n              pointA = constraint.pointA,\n              pointB = constraint.pointB;\n          if (!bodyA && !bodyB) return; // update reference angle\n\n          if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n          } // update reference angle\n\n\n          if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n          }\n\n          var pointAWorld = pointA,\n              pointBWorld = pointB;\n          if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n          if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n          if (!pointAWorld || !pointBWorld) return;\n          var delta = Vector.sub(pointAWorld, pointBWorld),\n              currentLength = Vector.magnitude(delta); // prevent singularity\n\n          if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n          } // solve distance constraint with Gauss-Siedel method\n\n\n          var difference = (currentLength - constraint.length) / currentLength,\n              stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n              force = Vector.mult(delta, difference * stiffness),\n              massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n              inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n              resistanceTotal = massTotal + inertiaTotal,\n              torque,\n              share,\n              normal,\n              normalVelocity,\n              relativeVelocity;\n\n          if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n            relativeVelocity = Vector.sub(bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero, bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero);\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n          }\n\n          if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal; // keep track of applied impulses for post solving\n\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share; // apply forces\n\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share; // apply damping\n\n            if (constraint.damping) {\n              bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n              bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            } // apply torque\n\n\n            torque = Vector.cross(pointA, force) / resistanceTotal * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n          }\n\n          if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal; // keep track of applied impulses for post solving\n\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share; // apply forces\n\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share; // apply damping\n\n            if (constraint.damping) {\n              bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n              bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            } // apply torque\n\n\n            torque = Vector.cross(pointB, force) / resistanceTotal * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n          }\n        };\n        /**\n         * Performs body updates required after solving constraints.\n         * @private\n         * @method postSolveAll\n         * @param {body[]} bodies\n         */\n\n\n        Constraint.postSolveAll = function (bodies) {\n          for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || impulse.x === 0 && impulse.y === 0 && impulse.angle === 0) {\n              continue;\n            }\n\n            Sleeping.set(body, false); // update geometry and reset\n\n            for (var j = 0; j < body.parts.length; j++) {\n              var part = body.parts[j];\n              Vertices.translate(part.vertices, impulse);\n\n              if (j > 0) {\n                part.position.x += impulse.x;\n                part.position.y += impulse.y;\n              }\n\n              if (impulse.angle !== 0) {\n                Vertices.rotate(part.vertices, impulse.angle, body.position);\n                Axes.rotate(part.axes, impulse.angle);\n\n                if (j > 0) {\n                  Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                }\n              }\n\n              Bounds.update(part.bounds, part.vertices, body.velocity);\n            } // dampen the cached impulse for warming next step\n\n\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n          }\n        };\n        /**\n         * Returns the world-space position of `constraint.pointA`, accounting for `constraint.bodyA`.\n         * @method pointAWorld\n         * @param {constraint} constraint\n         * @returns {vector} the world-space position\n         */\n\n\n        Constraint.pointAWorld = function (constraint) {\n          return {\n            x: (constraint.bodyA ? constraint.bodyA.position.x : 0) + constraint.pointA.x,\n            y: (constraint.bodyA ? constraint.bodyA.position.y : 0) + constraint.pointA.y\n          };\n        };\n        /**\n         * Returns the world-space position of `constraint.pointB`, accounting for `constraint.bodyB`.\n         * @method pointBWorld\n         * @param {constraint} constraint\n         * @returns {vector} the world-space position\n         */\n\n\n        Constraint.pointBWorld = function (constraint) {\n          return {\n            x: (constraint.bodyB ? constraint.bodyB.position.x : 0) + constraint.pointB.x,\n            y: (constraint.bodyB ? constraint.bodyB.position.y : 0) + constraint.pointB.y\n          };\n        };\n        /*\n        *\n        *  Properties Documentation\n        *\n        */\n\n        /**\n         * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n         *\n         * @property id\n         * @type number\n         */\n\n        /**\n         * A `String` denoting the type of object.\n         *\n         * @property type\n         * @type string\n         * @default \"constraint\"\n         * @readOnly\n         */\n\n        /**\n         * An arbitrary `String` name to help the user identify and manage bodies.\n         *\n         * @property label\n         * @type string\n         * @default \"Constraint\"\n         */\n\n        /**\n         * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n         *\n         * @property render\n         * @type object\n         */\n\n        /**\n         * A flag that indicates if the constraint should be rendered.\n         *\n         * @property render.visible\n         * @type boolean\n         * @default true\n         */\n\n        /**\n         * A `Number` that defines the line width to use when rendering the constraint outline.\n         * A value of `0` means no outline will be rendered.\n         *\n         * @property render.lineWidth\n         * @type number\n         * @default 2\n         */\n\n        /**\n         * A `String` that defines the stroke style to use when rendering the constraint outline.\n         * It is the same as when using a canvas, so it accepts CSS style property values.\n         *\n         * @property render.strokeStyle\n         * @type string\n         * @default a random colour\n         */\n\n        /**\n         * A `String` that defines the constraint rendering type. \n         * The possible values are 'line', 'pin', 'spring'.\n         * An appropriate render type will be automatically chosen unless one is given in options.\n         *\n         * @property render.type\n         * @type string\n         * @default 'line'\n         */\n\n        /**\n         * A `Boolean` that defines if the constraint's anchor points should be rendered.\n         *\n         * @property render.anchors\n         * @type boolean\n         * @default true\n         */\n\n        /**\n         * The first possible `Body` that this constraint is attached to.\n         *\n         * @property bodyA\n         * @type body\n         * @default null\n         */\n\n        /**\n         * The second possible `Body` that this constraint is attached to.\n         *\n         * @property bodyB\n         * @type body\n         * @default null\n         */\n\n        /**\n         * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n         *\n         * @property pointA\n         * @type vector\n         * @default { x: 0, y: 0 }\n         */\n\n        /**\n         * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n         *\n         * @property pointB\n         * @type vector\n         * @default { x: 0, y: 0 }\n         */\n\n        /**\n         * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n         * A value of `1` means the constraint should be very stiff.\n         * A value of `0.2` means the constraint acts like a soft spring.\n         *\n         * @property stiffness\n         * @type number\n         * @default 1\n         */\n\n        /**\n         * A `Number` that specifies the damping of the constraint, \n         * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n         * Damping will only be apparent when the constraint also has a very low `stiffness`.\n         * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n         * A value of `0` means the constraint will apply no damping.\n         *\n         * @property damping\n         * @type number\n         * @default 0\n         */\n\n        /**\n         * A `Number` that specifies the target resting length of the constraint. \n         * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n         *\n         * @property length\n         * @type number\n         */\n\n        /**\n         * An object reserved for storing plugin-specific properties.\n         *\n         * @property plugin\n         * @type {}\n         */\n\n      })();\n      /***/\n\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n      *\n      * @class Pair\n      */\n      var Pair = {};\n      module.exports = Pair;\n\n      var Contact = __webpack_require__(18);\n\n      (function () {\n        /**\n         * Creates a pair.\n         * @method create\n         * @param {collision} collision\n         * @param {number} timestamp\n         * @return {pair} A new pair\n         */\n        Pair.create = function (collision, timestamp) {\n          var bodyA = collision.bodyA,\n              bodyB = collision.bodyB,\n              parentA = collision.parentA,\n              parentB = collision.parentB;\n          var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            confirmedActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n          };\n          Pair.update(pair, collision, timestamp);\n          return pair;\n        };\n        /**\n         * Updates a pair given a collision.\n         * @method update\n         * @param {pair} pair\n         * @param {collision} collision\n         * @param {number} timestamp\n         */\n\n\n        Pair.update = function (pair, collision, timestamp) {\n          var contacts = pair.contacts,\n              supports = collision.supports,\n              activeContacts = pair.activeContacts,\n              parentA = collision.parentA,\n              parentB = collision.parentB;\n          pair.collision = collision;\n          pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n          pair.friction = Math.min(parentA.friction, parentB.friction);\n          pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n          pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n          pair.slop = Math.max(parentA.slop, parentB.slop);\n          activeContacts.length = 0;\n\n          if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n              var support = supports[i],\n                  contactId = Contact.id(support),\n                  contact = contacts[contactId];\n\n              if (contact) {\n                activeContacts.push(contact);\n              } else {\n                activeContacts.push(contacts[contactId] = Contact.create(support));\n              }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n          } else {\n            if (pair.isActive === true) Pair.setActive(pair, false, timestamp);\n          }\n        };\n        /**\n         * Set a pair as active or inactive.\n         * @method setActive\n         * @param {pair} pair\n         * @param {bool} isActive\n         * @param {number} timestamp\n         */\n\n\n        Pair.setActive = function (pair, isActive, timestamp) {\n          if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n          } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n          }\n        };\n        /**\n         * Get the id for the given pair.\n         * @method id\n         * @param {body} bodyA\n         * @param {body} bodyB\n         * @return {string} Unique pairId\n         */\n\n\n        Pair.id = function (bodyA, bodyB) {\n          if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n          } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n          }\n        };\n      })();\n      /***/\n\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n      * It is intended for development and debugging purposes, but may also be suitable for simple games.\n      * It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n      *\n      * @class Render\n      */\n      var Render = {};\n      module.exports = Render;\n\n      var Common = __webpack_require__(0);\n\n      var Composite = __webpack_require__(5);\n\n      var Bounds = __webpack_require__(1);\n\n      var Events = __webpack_require__(4);\n\n      var Grid = __webpack_require__(11);\n\n      var Vector = __webpack_require__(2);\n\n      var Mouse = __webpack_require__(14);\n\n      (function () {\n        var _requestAnimationFrame, _cancelAnimationFrame;\n\n        if (typeof window !== 'undefined') {\n          _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n            window.setTimeout(function () {\n              callback(Common.now());\n            }, 1000 / 60);\n          };\n\n          _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n        }\n        /**\n         * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n         * All properties have default values, and many are pre-calculated automatically based on other properties.\n         * See the properties section below for detailed information on what you can pass via the `options` object.\n         * @method create\n         * @param {object} [options]\n         * @return {render} A new renderer\n         */\n\n\n        Render.create = function (options) {\n          var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n              width: 800,\n              height: 600,\n              pixelRatio: 1,\n              background: '#14151f',\n              wireframeBackground: '#14151f',\n              hasBounds: !!options.bounds,\n              enabled: true,\n              wireframes: true,\n              showSleeping: true,\n              showDebug: false,\n              showBroadphase: false,\n              showBounds: false,\n              showVelocity: false,\n              showCollisions: false,\n              showSeparations: false,\n              showAxes: false,\n              showPositions: false,\n              showAngleIndicator: false,\n              showIds: false,\n              showShadows: false,\n              showVertexNumbers: false,\n              showConvexHulls: false,\n              showInternalEdges: false,\n              showMousePosition: false\n            }\n          };\n          var render = Common.extend(defaults, options);\n\n          if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n          }\n\n          render.mouse = options.mouse;\n          render.engine = options.engine;\n          render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n          render.context = render.canvas.getContext('2d');\n          render.textures = {};\n          render.bounds = render.bounds || {\n            min: {\n              x: 0,\n              y: 0\n            },\n            max: {\n              x: render.canvas.width,\n              y: render.canvas.height\n            }\n          };\n\n          if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n          }\n\n          if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n          } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n          }\n\n          return render;\n        };\n        /**\n         * Continuously updates the render canvas on the `requestAnimationFrame` event.\n         * @method run\n         * @param {render} render\n         */\n\n\n        Render.run = function (render) {\n          (function loop(time) {\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n          })();\n        };\n        /**\n         * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n         * @method stop\n         * @param {render} render\n         */\n\n\n        Render.stop = function (render) {\n          _cancelAnimationFrame(render.frameRequestId);\n        };\n        /**\n         * Sets the pixel ratio of the renderer and updates the canvas.\n         * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n         * @method setPixelRatio\n         * @param {render} render\n         * @param {number} pixelRatio\n         */\n\n\n        Render.setPixelRatio = function (render, pixelRatio) {\n          var options = render.options,\n              canvas = render.canvas;\n\n          if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n          }\n\n          options.pixelRatio = pixelRatio;\n          canvas.setAttribute('data-pixel-ratio', pixelRatio);\n          canvas.width = options.width * pixelRatio;\n          canvas.height = options.height * pixelRatio;\n          canvas.style.width = options.width + 'px';\n          canvas.style.height = options.height + 'px';\n        };\n        /**\n         * Positions and sizes the viewport around the given object bounds.\n         * Objects must have at least one of the following properties:\n         * - `object.bounds`\n         * - `object.position`\n         * - `object.min` and `object.max`\n         * - `object.x` and `object.y`\n         * @method lookAt\n         * @param {render} render\n         * @param {object[]} objects\n         * @param {vector} [padding]\n         * @param {bool} [center=true]\n         */\n\n\n        Render.lookAt = function (render, objects, padding, center) {\n          center = typeof center !== 'undefined' ? center : true;\n          objects = Common.isArray(objects) ? objects : [objects];\n          padding = padding || {\n            x: 0,\n            y: 0\n          }; // find bounds of all objects\n\n          var bounds = {\n            min: {\n              x: Infinity,\n              y: Infinity\n            },\n            max: {\n              x: -Infinity,\n              y: -Infinity\n            }\n          };\n\n          for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : object.min || object.position || object,\n                max = object.bounds ? object.bounds.max : object.max || object.position || object;\n\n            if (min && max) {\n              if (min.x < bounds.min.x) bounds.min.x = min.x;\n              if (max.x > bounds.max.x) bounds.max.x = max.x;\n              if (min.y < bounds.min.y) bounds.min.y = min.y;\n              if (max.y > bounds.max.y) bounds.max.y = max.y;\n            }\n          } // find ratios\n\n\n          var width = bounds.max.x - bounds.min.x + 2 * padding.x,\n              height = bounds.max.y - bounds.min.y + 2 * padding.y,\n              viewHeight = render.canvas.height,\n              viewWidth = render.canvas.width,\n              outerRatio = viewWidth / viewHeight,\n              innerRatio = width / height,\n              scaleX = 1,\n              scaleY = 1; // find scale factor\n\n          if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n          } else {\n            scaleX = outerRatio / innerRatio;\n          } // enable bounds\n\n\n          render.options.hasBounds = true; // position and size\n\n          render.bounds.min.x = bounds.min.x;\n          render.bounds.max.x = bounds.min.x + width * scaleX;\n          render.bounds.min.y = bounds.min.y;\n          render.bounds.max.y = bounds.min.y + height * scaleY; // center\n\n          if (center) {\n            render.bounds.min.x += width * 0.5 - width * scaleX * 0.5;\n            render.bounds.max.x += width * 0.5 - width * scaleX * 0.5;\n            render.bounds.min.y += height * 0.5 - height * scaleY * 0.5;\n            render.bounds.max.y += height * 0.5 - height * scaleY * 0.5;\n          } // padding\n\n\n          render.bounds.min.x -= padding.x;\n          render.bounds.max.x -= padding.x;\n          render.bounds.min.y -= padding.y;\n          render.bounds.max.y -= padding.y; // update mouse\n\n          if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n              x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n              y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n            Mouse.setOffset(render.mouse, render.bounds.min);\n          }\n        };\n        /**\n         * Applies viewport transforms based on `render.bounds` to a render context.\n         * @method startViewTransform\n         * @param {render} render\n         */\n\n\n        Render.startViewTransform = function (render) {\n          var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n              boundsHeight = render.bounds.max.y - render.bounds.min.y,\n              boundsScaleX = boundsWidth / render.options.width,\n              boundsScaleY = boundsHeight / render.options.height;\n          render.context.setTransform(render.options.pixelRatio / boundsScaleX, 0, 0, render.options.pixelRatio / boundsScaleY, 0, 0);\n          render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        };\n        /**\n         * Resets all transforms on the render context.\n         * @method endViewTransform\n         * @param {render} render\n         */\n\n\n        Render.endViewTransform = function (render) {\n          render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n        };\n        /**\n         * Renders the given `engine`'s `Matter.World` object.\n         * This is the entry point for all rendering and should be called every time the scene changes.\n         * @method world\n         * @param {render} render\n         */\n\n\n        Render.world = function (render) {\n          var engine = render.engine,\n              world = engine.world,\n              canvas = render.canvas,\n              context = render.context,\n              options = render.options,\n              allBodies = Composite.allBodies(world),\n              allConstraints = Composite.allConstraints(world),\n              background = options.wireframes ? options.wireframeBackground : options.background,\n              bodies = [],\n              constraints = [],\n              i;\n          var event = {\n            timestamp: engine.timing.timestamp\n          };\n          Events.trigger(render, 'beforeRender', event); // apply background if it has changed\n\n          if (render.currentBackground !== background) _applyBackground(render, background); // clear the canvas with a transparent fill, to allow the canvas background to show\n\n          context.globalCompositeOperation = 'source-in';\n          context.fillStyle = \"transparent\";\n          context.fillRect(0, 0, canvas.width, canvas.height);\n          context.globalCompositeOperation = 'source-over'; // handle bounds\n\n          if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n              var body = allBodies[i];\n              if (Bounds.overlaps(body.bounds, render.bounds)) bodies.push(body);\n            } // filter out constraints that are not in view\n\n\n            for (i = 0; i < allConstraints.length; i++) {\n              var constraint = allConstraints[i],\n                  bodyA = constraint.bodyA,\n                  bodyB = constraint.bodyB,\n                  pointAWorld = constraint.pointA,\n                  pointBWorld = constraint.pointB;\n              if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n              if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n              if (!pointAWorld || !pointBWorld) continue;\n              if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld)) constraints.push(constraint);\n            } // transform the view\n\n\n            Render.startViewTransform(render); // update mouse\n\n            if (render.mouse) {\n              Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.options.height\n              });\n              Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n          } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n\n            if (render.options.pixelRatio !== 1) {\n              render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n            }\n          }\n\n          if (!options.wireframes || engine.enableSleeping && options.showSleeping) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n          } else {\n            if (options.showConvexHulls) Render.bodyConvexHulls(render, bodies, context); // optimised method for wireframes only\n\n            Render.bodyWireframes(render, bodies, context);\n          }\n\n          if (options.showBounds) Render.bodyBounds(render, bodies, context);\n          if (options.showAxes || options.showAngleIndicator) Render.bodyAxes(render, bodies, context);\n          if (options.showPositions) Render.bodyPositions(render, bodies, context);\n          if (options.showVelocity) Render.bodyVelocity(render, bodies, context);\n          if (options.showIds) Render.bodyIds(render, bodies, context);\n          if (options.showSeparations) Render.separations(render, engine.pairs.list, context);\n          if (options.showCollisions) Render.collisions(render, engine.pairs.list, context);\n          if (options.showVertexNumbers) Render.vertexNumbers(render, bodies, context);\n          if (options.showMousePosition) Render.mousePosition(render, render.mouse, context);\n          Render.constraints(constraints, context);\n          if (options.showBroadphase && engine.broadphase.controller === Grid) Render.grid(render, engine.broadphase, context);\n          if (options.showDebug) Render.debug(render, context);\n\n          if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n          }\n\n          Events.trigger(render, 'afterRender', event);\n        };\n        /**\n         * Description\n         * @private\n         * @method debug\n         * @param {render} render\n         * @param {RenderingContext} context\n         */\n\n\n        Render.debug = function (render, context) {\n          var c = context,\n              engine = render.engine,\n              world = engine.world,\n              metrics = engine.metrics,\n              options = render.options,\n              bodies = Composite.allBodies(world),\n              space = \"    \";\n\n          if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n              text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            } // @if DEBUG\n\n\n            if (metrics.extended) {\n              if (metrics.timing) {\n                text += \"delta: \" + metrics.timing.delta.toFixed(3) + space;\n                text += \"correction: \" + metrics.timing.correction.toFixed(3) + space;\n              }\n\n              text += \"bodies: \" + bodies.length + space;\n              if (engine.broadphase.controller === Grid) text += \"buckets: \" + metrics.buckets + space;\n              text += \"\\n\";\n              text += \"collisions: \" + metrics.collisions + space;\n              text += \"pairs: \" + engine.pairs.list.length + space;\n              text += \"broad: \" + metrics.broadEff + space;\n              text += \"mid: \" + metrics.midEff + space;\n              text += \"narrow: \" + metrics.narrowEff + space;\n            } // @endif\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n          }\n\n          if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n              c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n              c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n              c.fillText(split[i], 50, 50 + i * 18);\n            }\n          }\n        };\n        /**\n         * Description\n         * @private\n         * @method constraints\n         * @param {constraint[]} constraints\n         * @param {RenderingContext} context\n         */\n\n\n        Render.constraints = function (constraints, context) {\n          var c = context;\n\n          for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB) continue;\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n              start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n              start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n              c.beginPath();\n              c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n              c.closePath();\n            } else {\n              if (bodyB) {\n                end = Vector.add(bodyB.position, constraint.pointB);\n              } else {\n                end = constraint.pointB;\n              }\n\n              c.beginPath();\n              c.moveTo(start.x, start.y);\n\n              if (constraint.render.type === 'spring') {\n                var delta = Vector.sub(end, start),\n                    normal = Vector.perp(Vector.normalise(delta)),\n                    coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                    offset;\n\n                for (var j = 1; j < coils; j += 1) {\n                  offset = j % 2 === 0 ? 1 : -1;\n                  c.lineTo(start.x + delta.x * (j / coils) + normal.x * offset * 4, start.y + delta.y * (j / coils) + normal.y * offset * 4);\n                }\n              }\n\n              c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n              c.lineWidth = constraint.render.lineWidth;\n              c.strokeStyle = constraint.render.strokeStyle;\n              c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n              c.fillStyle = constraint.render.strokeStyle;\n              c.beginPath();\n              c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n              c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n              c.closePath();\n              c.fill();\n            }\n          }\n        };\n        /**\n         * Description\n         * @private\n         * @method bodyShadows\n         * @param {render} render\n         * @param {body[]} bodies\n         * @param {RenderingContext} context\n         */\n\n\n        Render.bodyShadows = function (render, bodies, context) {\n          var c = context,\n              engine = render.engine;\n\n          for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            if (!body.render.visible) continue;\n\n            if (body.circleRadius) {\n              c.beginPath();\n              c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n              c.closePath();\n            } else {\n              c.beginPath();\n              c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n              for (var j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n              }\n\n              c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n            c.fill();\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n          }\n        };\n        /**\n         * Description\n         * @private\n         * @method bodies\n         * @param {render} render\n         * @param {body[]} bodies\n         * @param {RenderingContext} context\n         */\n\n\n        Render.bodies = function (render, bodies, context) {\n          var c = context,\n              engine = render.engine,\n              options = render.options,\n              showInternalEdges = options.showInternalEdges || !options.wireframes,\n              body,\n              part,\n              i,\n              k;\n\n          for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (!body.render.visible) continue; // handle compound parts\n\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n              part = body.parts[k];\n              if (!part.render.visible) continue;\n\n              if (options.showSleeping && body.isSleeping) {\n                c.globalAlpha = 0.5 * part.render.opacity;\n              } else if (part.render.opacity !== 1) {\n                c.globalAlpha = part.render.opacity;\n              }\n\n              if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                // part sprite\n                var sprite = part.render.sprite,\n                    texture = _getTexture(render, sprite.texture);\n\n                c.translate(part.position.x, part.position.y);\n                c.rotate(part.angle);\n                c.drawImage(texture, texture.width * -sprite.xOffset * sprite.xScale, texture.height * -sprite.yOffset * sprite.yScale, texture.width * sprite.xScale, texture.height * sprite.yScale); // revert translation, hopefully faster than save / restore\n\n                c.rotate(-part.angle);\n                c.translate(-part.position.x, -part.position.y);\n              } else {\n                // part polygon\n                if (part.circleRadius) {\n                  c.beginPath();\n                  c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                } else {\n                  c.beginPath();\n                  c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                  for (var j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                      c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                      c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                      c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                  }\n\n                  c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                  c.closePath();\n                }\n\n                if (!options.wireframes) {\n                  c.fillStyle = part.render.fillStyle;\n\n                  if (part.render.lineWidth) {\n                    c.lineWidth = part.render.lineWidth;\n                    c.strokeStyle = part.render.strokeStyle;\n                    c.stroke();\n                  }\n\n                  c.fill();\n                } else {\n                  c.lineWidth = 1;\n                  c.strokeStyle = '#bbb';\n                  c.stroke();\n                }\n              }\n\n              c.globalAlpha = 1;\n            }\n          }\n        };\n        /**\n         * Optimised method for drawing body wireframes in one pass\n         * @private\n         * @method bodyWireframes\n         * @param {render} render\n         * @param {body[]} bodies\n         * @param {RenderingContext} context\n         */\n\n\n        Render.bodyWireframes = function (render, bodies, context) {\n          var c = context,\n              showInternalEdges = render.options.showInternalEdges,\n              body,\n              part,\n              i,\n              j,\n              k;\n          c.beginPath(); // render all bodies\n\n          for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (!body.render.visible) continue; // handle compound parts\n\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n              part = body.parts[k];\n              c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n              for (j = 1; j < part.vertices.length; j++) {\n                if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                  c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                } else {\n                  c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                }\n\n                if (part.vertices[j].isInternal && !showInternalEdges) {\n                  c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                }\n              }\n\n              c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n          }\n\n          c.lineWidth = 1;\n          c.strokeStyle = '#bbb';\n          c.stroke();\n        };\n        /**\n         * Optimised method for drawing body convex hull wireframes in one pass\n         * @private\n         * @method bodyConvexHulls\n         * @param {render} render\n         * @param {body[]} bodies\n         * @param {RenderingContext} context\n         */\n\n\n        Render.bodyConvexHulls = function (render, bodies, context) {\n          var c = context,\n              body,\n              part,\n              i,\n              j,\n              k;\n          c.beginPath(); // render convex hulls\n\n          for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (!body.render.visible || body.parts.length === 1) continue;\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n              c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n          }\n\n          c.lineWidth = 1;\n          c.strokeStyle = 'rgba(255,255,255,0.2)';\n          c.stroke();\n        };\n        /**\n         * Renders body vertex numbers.\n         * @private\n         * @method vertexNumbers\n         * @param {render} render\n         * @param {body[]} bodies\n         * @param {RenderingContext} context\n         */\n\n\n        Render.vertexNumbers = function (render, bodies, context) {\n          var c = context,\n              i,\n              j,\n              k;\n\n          for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n              var part = parts[k];\n\n              for (j = 0; j < part.vertices.length; j++) {\n                c.fillStyle = 'rgba(255,255,255,0.2)';\n                c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n              }\n            }\n          }\n        };\n        /**\n         * Renders mouse position.\n         * @private\n         * @method mousePosition\n         * @param {render} render\n         * @param {mouse} mouse\n         * @param {RenderingContext} context\n         */\n\n\n        Render.mousePosition = function (render, mouse, context) {\n          var c = context;\n          c.fillStyle = 'rgba(255,255,255,0.8)';\n          c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n        };\n        /**\n         * Draws body bounds\n         * @private\n         * @method bodyBounds\n         * @param {render} render\n         * @param {body[]} bodies\n         * @param {RenderingContext} context\n         */\n\n\n        Render.bodyBounds = function (render, bodies, context) {\n          var c = context,\n              engine = render.engine,\n              options = render.options;\n          c.beginPath();\n\n          for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n              var parts = bodies[i].parts;\n\n              for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n              }\n            }\n          }\n\n          if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n          } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n          }\n\n          c.lineWidth = 1;\n          c.stroke();\n        };\n        /**\n         * Draws body angle indicators and axes\n         * @private\n         * @method bodyAxes\n         * @param {render} render\n         * @param {body[]} bodies\n         * @param {RenderingContext} context\n         */\n\n\n        Render.bodyAxes = function (render, bodies, context) {\n          var c = context,\n              engine = render.engine,\n              options = render.options,\n              part,\n              i,\n              j,\n              k;\n          c.beginPath();\n\n          for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n            if (!body.render.visible) continue;\n\n            if (options.showAxes) {\n              // render all axes\n              for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                part = parts[j];\n\n                for (k = 0; k < part.axes.length; k++) {\n                  var axis = part.axes[k];\n                  c.moveTo(part.position.x, part.position.y);\n                  c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                }\n              }\n            } else {\n              for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                part = parts[j];\n\n                for (k = 0; k < part.axes.length; k++) {\n                  // render a single axis indicator\n                  c.moveTo(part.position.x, part.position.y);\n                  c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length - 1].x) / 2, (part.vertices[0].y + part.vertices[part.vertices.length - 1].y) / 2);\n                }\n              }\n            }\n          }\n\n          if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n          } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n          }\n\n          c.stroke();\n          c.globalCompositeOperation = 'source-over';\n        };\n        /**\n         * Draws body positions\n         * @private\n         * @method bodyPositions\n         * @param {render} render\n         * @param {body[]} bodies\n         * @param {RenderingContext} context\n         */\n\n\n        Render.bodyPositions = function (render, bodies, context) {\n          var c = context,\n              engine = render.engine,\n              options = render.options,\n              body,\n              part,\n              i,\n              k;\n          c.beginPath(); // render current positions\n\n          for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (!body.render.visible) continue; // handle compound parts\n\n            for (k = 0; k < body.parts.length; k++) {\n              part = body.parts[k];\n              c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n              c.closePath();\n            }\n          }\n\n          if (options.wireframes) {\n            c.fillStyle = 'indianred';\n          } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n          }\n\n          c.fill();\n          c.beginPath(); // render previous positions\n\n          for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (body.render.visible) {\n              c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n              c.closePath();\n            }\n          }\n\n          c.fillStyle = 'rgba(255,165,0,0.8)';\n          c.fill();\n        };\n        /**\n         * Draws body velocity\n         * @private\n         * @method bodyVelocity\n         * @param {render} render\n         * @param {body[]} bodies\n         * @param {RenderingContext} context\n         */\n\n\n        Render.bodyVelocity = function (render, bodies, context) {\n          var c = context;\n          c.beginPath();\n\n          for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            if (!body.render.visible) continue;\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n          }\n\n          c.lineWidth = 3;\n          c.strokeStyle = 'cornflowerblue';\n          c.stroke();\n        };\n        /**\n         * Draws body ids\n         * @private\n         * @method bodyIds\n         * @param {render} render\n         * @param {body[]} bodies\n         * @param {RenderingContext} context\n         */\n\n\n        Render.bodyIds = function (render, bodies, context) {\n          var c = context,\n              i,\n              j;\n\n          for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible) continue;\n            var parts = bodies[i].parts;\n\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n              var part = parts[j];\n              c.font = \"12px Arial\";\n              c.fillStyle = 'rgba(255,255,255,0.5)';\n              c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n          }\n        };\n        /**\n         * Description\n         * @private\n         * @method collisions\n         * @param {render} render\n         * @param {pair[]} pairs\n         * @param {RenderingContext} context\n         */\n\n\n        Render.collisions = function (render, pairs, context) {\n          var c = context,\n              options = render.options,\n              pair,\n              collision,\n              corrected,\n              bodyA,\n              bodyB,\n              i,\n              j;\n          c.beginPath(); // render collision positions\n\n          for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            if (!pair.isActive) continue;\n            collision = pair.collision;\n\n            for (j = 0; j < pair.activeContacts.length; j++) {\n              var contact = pair.activeContacts[j],\n                  vertex = contact.vertex;\n              c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n          }\n\n          if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n          } else {\n            c.fillStyle = 'orange';\n          }\n\n          c.fill();\n          c.beginPath(); // render collision normals\n\n          for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            if (!pair.isActive) continue;\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n              var normalPosX = pair.activeContacts[0].vertex.x,\n                  normalPosY = pair.activeContacts[0].vertex.y;\n\n              if (pair.activeContacts.length === 2) {\n                normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n              }\n\n              if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n              } else {\n                c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n              }\n\n              c.lineTo(normalPosX, normalPosY);\n            }\n          }\n\n          if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n          } else {\n            c.strokeStyle = 'orange';\n          }\n\n          c.lineWidth = 1;\n          c.stroke();\n        };\n        /**\n         * Description\n         * @private\n         * @method separations\n         * @param {render} render\n         * @param {pair[]} pairs\n         * @param {RenderingContext} context\n         */\n\n\n        Render.separations = function (render, pairs, context) {\n          var c = context,\n              options = render.options,\n              pair,\n              collision,\n              corrected,\n              bodyA,\n              bodyB,\n              i,\n              j;\n          c.beginPath(); // render separations\n\n          for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            if (!pair.isActive) continue;\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n            var k = 1;\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n            k = 1;\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n          }\n\n          if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n          } else {\n            c.strokeStyle = 'orange';\n          }\n\n          c.stroke();\n        };\n        /**\n         * Description\n         * @private\n         * @method grid\n         * @param {render} render\n         * @param {grid} grid\n         * @param {RenderingContext} context\n         */\n\n\n        Render.grid = function (render, grid, context) {\n          var c = context,\n              options = render.options;\n\n          if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n          } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n          }\n\n          c.beginPath();\n          var bucketKeys = Common.keys(grid.buckets);\n\n          for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n            if (grid.buckets[bucketId].length < 2) continue;\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth, 0.5 + parseInt(region[2], 10) * grid.bucketHeight, grid.bucketWidth, grid.bucketHeight);\n          }\n\n          c.lineWidth = 1;\n          c.stroke();\n        };\n        /**\n         * Description\n         * @private\n         * @method inspector\n         * @param {inspector} inspector\n         * @param {RenderingContext} context\n         */\n\n\n        Render.inspector = function (inspector, context) {\n          var engine = inspector.engine,\n              selected = inspector.selected,\n              render = inspector.render,\n              options = render.options,\n              bounds;\n\n          if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n          }\n\n          for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1, 2]);\n\n            switch (item.type) {\n              case 'body':\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3), Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n                break;\n\n              case 'constraint':\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA) point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n                break;\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n          } // render selection region\n\n\n          if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y), Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n          }\n\n          if (options.hasBounds) context.setTransform(1, 0, 0, 1, 0, 0);\n        };\n        /**\n         * Description\n         * @method _createCanvas\n         * @private\n         * @param {} width\n         * @param {} height\n         * @return canvas\n         */\n\n\n        var _createCanvas = function _createCanvas(width, height) {\n          var canvas = document.createElement('canvas');\n          canvas.width = width;\n          canvas.height = height;\n\n          canvas.oncontextmenu = function () {\n            return false;\n          };\n\n          canvas.onselectstart = function () {\n            return false;\n          };\n\n          return canvas;\n        };\n        /**\n         * Gets the pixel ratio of the canvas.\n         * @method _getPixelRatio\n         * @private\n         * @param {HTMLElement} canvas\n         * @return {Number} pixel ratio\n         */\n\n\n        var _getPixelRatio = function _getPixelRatio(canvas) {\n          var context = canvas.getContext('2d'),\n              devicePixelRatio = window.devicePixelRatio || 1,\n              backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n          return devicePixelRatio / backingStorePixelRatio;\n        };\n        /**\n         * Gets the requested texture (an Image) via its path\n         * @method _getTexture\n         * @private\n         * @param {render} render\n         * @param {string} imagePath\n         * @return {Image} texture\n         */\n\n\n        var _getTexture = function _getTexture(render, imagePath) {\n          var image = render.textures[imagePath];\n          if (image) return image;\n          image = render.textures[imagePath] = new Image();\n          image.src = imagePath;\n          return image;\n        };\n        /**\n         * Applies the background to the canvas using CSS.\n         * @method applyBackground\n         * @private\n         * @param {render} render\n         * @param {string} background\n         */\n\n\n        var _applyBackground = function _applyBackground(render, background) {\n          var cssBackground = background;\n          if (/(jpg|gif|png)$/.test(background)) cssBackground = 'url(' + background + ')';\n          render.canvas.style.background = cssBackground;\n          render.canvas.style.backgroundSize = \"contain\";\n          render.currentBackground = background;\n        };\n        /*\n        *\n        *  Events Documentation\n        *\n        */\n\n        /**\n        * Fired before rendering\n        *\n        * @event beforeRender\n        * @param {} event An event object\n        * @param {number} event.timestamp The engine.timing.timestamp of the event\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired after rendering\n        *\n        * @event afterRender\n        * @param {} event An event object\n        * @param {number} event.timestamp The engine.timing.timestamp of the event\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /*\n        *\n        *  Properties Documentation\n        *\n        */\n\n        /**\n         * A back-reference to the `Matter.Render` module.\n         *\n         * @property controller\n         * @type render\n         */\n\n        /**\n         * A reference to the `Matter.Engine` instance to be used.\n         *\n         * @property engine\n         * @type engine\n         */\n\n        /**\n         * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n         *\n         * @property element\n         * @type HTMLElement\n         * @default null\n         */\n\n        /**\n         * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n         *\n         * @property canvas\n         * @type HTMLCanvasElement\n         * @default null\n         */\n\n        /**\n         * The configuration options of the renderer.\n         *\n         * @property options\n         * @type {}\n         */\n\n        /**\n         * The target width in pixels of the `render.canvas` to be created.\n         *\n         * @property options.width\n         * @type number\n         * @default 800\n         */\n\n        /**\n         * The target height in pixels of the `render.canvas` to be created.\n         *\n         * @property options.height\n         * @type number\n         * @default 600\n         */\n\n        /**\n         * A flag that specifies if `render.bounds` should be used when rendering.\n         *\n         * @property options.hasBounds\n         * @type boolean\n         * @default false\n         */\n\n        /**\n         * A `Bounds` object that specifies the drawing view region.\n         * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n         * This allows for creating views that can pan or zoom around the scene.\n         * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n         *\n         * @property bounds\n         * @type bounds\n         */\n\n        /**\n         * The 2d rendering context from the `render.canvas` element.\n         *\n         * @property context\n         * @type CanvasRenderingContext2D\n         */\n\n        /**\n         * The sprite texture cache.\n         *\n         * @property textures\n         * @type {}\n         */\n\n      })();\n      /***/\n\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n      *\n      * @class Grid\n      */\n      var Grid = {};\n      module.exports = Grid;\n\n      var Pair = __webpack_require__(9);\n\n      var Detector = __webpack_require__(12);\n\n      var Common = __webpack_require__(0);\n\n      (function () {\n        /**\n         * Creates a new grid.\n         * @method create\n         * @param {} options\n         * @return {grid} A new grid\n         */\n        Grid.create = function (options) {\n          var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n          };\n          return Common.extend(defaults, options);\n        };\n        /**\n         * The width of a single grid bucket.\n         *\n         * @property bucketWidth\n         * @type number\n         * @default 48\n         */\n\n        /**\n         * The height of a single grid bucket.\n         *\n         * @property bucketHeight\n         * @type number\n         * @default 48\n         */\n\n        /**\n         * Updates the grid.\n         * @method update\n         * @param {grid} grid\n         * @param {body[]} bodies\n         * @param {engine} engine\n         * @param {boolean} forceUpdate\n         */\n\n\n        Grid.update = function (grid, bodies, engine, forceUpdate) {\n          var i,\n              col,\n              row,\n              world = engine.world,\n              buckets = grid.buckets,\n              bucket,\n              bucketId,\n              gridChanged = false; // @if DEBUG\n\n          var metrics = engine.metrics;\n          metrics.broadphaseTests = 0; // @endif\n\n          for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            if (body.isSleeping && !forceUpdate) continue; // don't update out of world bodies\n\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y) continue;\n\n            var newRegion = Grid._getRegion(grid, body); // if the body has changed grid region\n\n\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n              // @if DEBUG\n              metrics.broadphaseTests += 1; // @endif\n\n              if (!body.region || forceUpdate) body.region = newRegion;\n\n              var union = Grid._regionUnion(newRegion, body.region); // update grid buckets affected by region change\n              // iterate over the union of both regions\n\n\n              for (col = union.startCol; col <= union.endCol; col++) {\n                for (row = union.startRow; row <= union.endRow; row++) {\n                  bucketId = Grid._getBucketId(col, row);\n                  bucket = buckets[bucketId];\n                  var isInsideNewRegion = col >= newRegion.startCol && col <= newRegion.endCol && row >= newRegion.startRow && row <= newRegion.endRow;\n                  var isInsideOldRegion = col >= body.region.startCol && col <= body.region.endCol && row >= body.region.startRow && row <= body.region.endRow; // remove from old region buckets\n\n                  if (!isInsideNewRegion && isInsideOldRegion) {\n                    if (isInsideOldRegion) {\n                      if (bucket) Grid._bucketRemoveBody(grid, bucket, body);\n                    }\n                  } // add to new region buckets\n\n\n                  if (body.region === newRegion || isInsideNewRegion && !isInsideOldRegion || forceUpdate) {\n                    if (!bucket) bucket = Grid._createBucket(buckets, bucketId);\n\n                    Grid._bucketAddBody(grid, bucket, body);\n                  }\n                }\n              } // set the new region\n\n\n              body.region = newRegion; // flag changes so we can update pairs\n\n              gridChanged = true;\n            }\n          } // update pairs list only if pairs changed (i.e. a body changed region)\n\n\n          if (gridChanged) grid.pairsList = Grid._createActivePairsList(grid);\n        };\n        /**\n         * Clears the grid.\n         * @method clear\n         * @param {grid} grid\n         */\n\n\n        Grid.clear = function (grid) {\n          grid.buckets = {};\n          grid.pairs = {};\n          grid.pairsList = [];\n        };\n        /**\n         * Finds the union of two regions.\n         * @method _regionUnion\n         * @private\n         * @param {} regionA\n         * @param {} regionB\n         * @return {} region\n         */\n\n\n        Grid._regionUnion = function (regionA, regionB) {\n          var startCol = Math.min(regionA.startCol, regionB.startCol),\n              endCol = Math.max(regionA.endCol, regionB.endCol),\n              startRow = Math.min(regionA.startRow, regionB.startRow),\n              endRow = Math.max(regionA.endRow, regionB.endRow);\n          return Grid._createRegion(startCol, endCol, startRow, endRow);\n        };\n        /**\n         * Gets the region a given body falls in for a given grid.\n         * @method _getRegion\n         * @private\n         * @param {} grid\n         * @param {} body\n         * @return {} region\n         */\n\n\n        Grid._getRegion = function (grid, body) {\n          var bounds = body.bounds,\n              startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n              endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n              startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n              endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n          return Grid._createRegion(startCol, endCol, startRow, endRow);\n        };\n        /**\n         * Creates a region.\n         * @method _createRegion\n         * @private\n         * @param {} startCol\n         * @param {} endCol\n         * @param {} startRow\n         * @param {} endRow\n         * @return {} region\n         */\n\n\n        Grid._createRegion = function (startCol, endCol, startRow, endRow) {\n          return {\n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol,\n            endCol: endCol,\n            startRow: startRow,\n            endRow: endRow\n          };\n        };\n        /**\n         * Gets the bucket id at the given position.\n         * @method _getBucketId\n         * @private\n         * @param {} column\n         * @param {} row\n         * @return {string} bucket id\n         */\n\n\n        Grid._getBucketId = function (column, row) {\n          return 'C' + column + 'R' + row;\n        };\n        /**\n         * Creates a bucket.\n         * @method _createBucket\n         * @private\n         * @param {} buckets\n         * @param {} bucketId\n         * @return {} bucket\n         */\n\n\n        Grid._createBucket = function (buckets, bucketId) {\n          var bucket = buckets[bucketId] = [];\n          return bucket;\n        };\n        /**\n         * Adds a body to a bucket.\n         * @method _bucketAddBody\n         * @private\n         * @param {} grid\n         * @param {} bucket\n         * @param {} body\n         */\n\n\n        Grid._bucketAddBody = function (grid, bucket, body) {\n          // add new pairs\n          for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n            if (body.id === bodyB.id || body.isStatic && bodyB.isStatic) continue; // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n              pair[2] += 1;\n            } else {\n              grid.pairs[pairId] = [body, bodyB, 1];\n            }\n          } // add to bodies (after pairs, otherwise pairs with self)\n\n\n          bucket.push(body);\n        };\n        /**\n         * Removes a body from a bucket.\n         * @method _bucketRemoveBody\n         * @private\n         * @param {} grid\n         * @param {} bucket\n         * @param {} body\n         */\n\n\n        Grid._bucketRemoveBody = function (grid, bucket, body) {\n          // remove from bucket\n          bucket.splice(Common.indexOf(bucket, body), 1); // update pair counts\n\n          for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n            if (pair) pair[2] -= 1;\n          }\n        };\n        /**\n         * Generates a list of the active pairs in the grid.\n         * @method _createActivePairsList\n         * @private\n         * @param {} grid\n         * @return [] pairs\n         */\n\n\n        Grid._createActivePairsList = function (grid) {\n          var pairKeys,\n              pair,\n              pairs = []; // grid.pairs is used as a hashmap\n\n          pairKeys = Common.keys(grid.pairs); // iterate over grid.pairs\n\n          for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]]; // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n\n            if (pair[2] > 0) {\n              pairs.push(pair);\n            } else {\n              delete grid.pairs[pairKeys[k]];\n            }\n          }\n\n          return pairs;\n        };\n      })();\n      /***/\n\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n      *\n      * @class Detector\n      */\n      // TODO: speculative contacts\n      var Detector = {};\n      module.exports = Detector;\n\n      var SAT = __webpack_require__(13);\n\n      var Pair = __webpack_require__(9);\n\n      var Bounds = __webpack_require__(1);\n\n      (function () {\n        /**\n         * Finds all collisions given a list of pairs.\n         * @method collisions\n         * @param {pair[]} broadphasePairs\n         * @param {engine} engine\n         * @return {array} collisions\n         */\n        Detector.collisions = function (broadphasePairs, engine) {\n          var collisions = [],\n              pairsTable = engine.pairs.table; // @if DEBUG\n\n          var metrics = engine.metrics; // @endif\n\n          for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0],\n                bodyB = broadphasePairs[i][1];\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping)) continue;\n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter)) continue; // @if DEBUG\n\n            metrics.midphaseTests += 1; // @endif\n            // mid phase\n\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n              for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                var partA = bodyA.parts[j];\n\n                for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                  var partB = bodyB.parts[k];\n\n                  if (partA === bodyA && partB === bodyB || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                    // find a previous collision we could reuse\n                    var pairId = Pair.id(partA, partB),\n                        pair = pairsTable[pairId],\n                        previousCollision;\n\n                    if (pair && pair.isActive) {\n                      previousCollision = pair.collision;\n                    } else {\n                      previousCollision = null;\n                    } // narrow phase\n\n\n                    var collision = SAT.collides(partA, partB, previousCollision); // @if DEBUG\n\n                    metrics.narrowphaseTests += 1;\n                    if (collision.reused) metrics.narrowReuseCount += 1; // @endif\n\n                    if (collision.collided) {\n                      collisions.push(collision); // @if DEBUG\n\n                      metrics.narrowDetections += 1; // @endif\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          return collisions;\n        };\n        /**\n         * Returns `true` if both supplied collision filters will allow a collision to occur.\n         * See `body.collisionFilter` for more information.\n         * @method canCollide\n         * @param {} filterA\n         * @param {} filterB\n         * @return {bool} `true` if collision can occur\n         */\n\n\n        Detector.canCollide = function (filterA, filterB) {\n          if (filterA.group === filterB.group && filterA.group !== 0) return filterA.group > 0;\n          return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n        };\n      })();\n      /***/\n\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n      *\n      * @class SAT\n      */\n      // TODO: true circles and curves\n      var SAT = {};\n      module.exports = SAT;\n\n      var Vertices = __webpack_require__(3);\n\n      var Vector = __webpack_require__(2);\n\n      (function () {\n        /**\n         * Detect collision between two bodies using the Separating Axis Theorem.\n         * @method collides\n         * @param {body} bodyA\n         * @param {body} bodyB\n         * @param {collision} previousCollision\n         * @return {collision} collision\n         */\n        SAT.collides = function (bodyA, bodyB, previousCollision) {\n          var overlapAB,\n              overlapBA,\n              minOverlap,\n              collision,\n              canReusePrevCol = false;\n\n          if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed; // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2; // reuse collision object\n\n            collision = previousCollision;\n          } else {\n            collision = {\n              collided: false,\n              bodyA: bodyA,\n              bodyB: bodyB\n            };\n          }\n\n          if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n              collision.collided = false;\n              return collision;\n            }\n          } else {\n            // if we can't reuse a result, perform a full SAT test\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n              collision.collided = false;\n              return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n              collision.collided = false;\n              return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n              minOverlap = overlapAB;\n              collision.axisBody = bodyA;\n            } else {\n              minOverlap = overlapBA;\n              collision.axisBody = bodyB;\n            } // important for reuse later\n\n\n            collision.axisNumber = minOverlap.axisNumber;\n          }\n\n          collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n          collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n          collision.collided = true;\n          collision.depth = minOverlap.overlap;\n          collision.parentA = collision.bodyA.parent;\n          collision.parentB = collision.bodyB.parent;\n          bodyA = collision.bodyA;\n          bodyB = collision.bodyB; // ensure normal is facing away from bodyA\n\n          if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n              x: minOverlap.axis.x,\n              y: minOverlap.axis.y\n            };\n          } else {\n            collision.normal = {\n              x: -minOverlap.axis.x,\n              y: -minOverlap.axis.y\n            };\n          }\n\n          collision.tangent = Vector.perp(collision.normal);\n          collision.penetration = collision.penetration || {};\n          collision.penetration.x = collision.normal.x * collision.depth;\n          collision.penetration.y = collision.normal.y * collision.depth; // find support points, there is always either exactly one or two\n\n          var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n              supports = []; // find the supports from bodyB that are inside bodyA\n\n\n          if (Vertices.contains(bodyA.vertices, verticesB[0])) supports.push(verticesB[0]);\n          if (Vertices.contains(bodyA.vertices, verticesB[1])) supports.push(verticesB[1]); // find the supports from bodyA that are inside bodyB\n\n          if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n\n            if (Vertices.contains(bodyB.vertices, verticesA[0])) supports.push(verticesA[0]);\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1])) supports.push(verticesA[1]);\n          } // account for the edge case of overlapping but no vertex containment\n\n\n          if (supports.length < 1) supports = [verticesB[0]];\n          collision.supports = supports;\n          return collision;\n        };\n        /**\n         * Find the overlap between two sets of vertices.\n         * @method _overlapAxes\n         * @private\n         * @param {} verticesA\n         * @param {} verticesB\n         * @param {} axes\n         * @return result\n         */\n\n\n        SAT._overlapAxes = function (verticesA, verticesB, axes) {\n          var projectionA = Vector._temp[0],\n              projectionB = Vector._temp[1],\n              result = {\n            overlap: Number.MAX_VALUE\n          },\n              overlap,\n              axis;\n\n          for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n              result.overlap = overlap;\n              return result;\n            }\n\n            if (overlap < result.overlap) {\n              result.overlap = overlap;\n              result.axis = axis;\n              result.axisNumber = i;\n            }\n          }\n\n          return result;\n        };\n        /**\n         * Projects vertices on an axis and returns an interval.\n         * @method _projectToAxis\n         * @private\n         * @param {} projection\n         * @param {} vertices\n         * @param {} axis\n         */\n\n\n        SAT._projectToAxis = function (projection, vertices, axis) {\n          var min = Vector.dot(vertices[0], axis),\n              max = min;\n\n          for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) {\n              max = dot;\n            } else if (dot < min) {\n              min = dot;\n            }\n          }\n\n          projection.min = min;\n          projection.max = max;\n        };\n        /**\n         * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n         * @method _findSupports\n         * @private\n         * @param {} bodyA\n         * @param {} bodyB\n         * @param {} normal\n         * @return [vector]\n         */\n\n\n        SAT._findSupports = function (bodyA, bodyB, normal) {\n          var nearestDistance = Number.MAX_VALUE,\n              vertexToBody = Vector._temp[0],\n              vertices = bodyB.vertices,\n              bodyAPosition = bodyA.position,\n              distance,\n              vertex,\n              vertexA,\n              vertexB; // find closest vertex on bodyB\n\n          for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n              nearestDistance = distance;\n              vertexA = vertex;\n            }\n          } // find next closest vertex using the two connected to it\n\n\n          var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n          vertex = vertices[prevIndex];\n          vertexToBody.x = vertex.x - bodyAPosition.x;\n          vertexToBody.y = vertex.y - bodyAPosition.y;\n          nearestDistance = -Vector.dot(normal, vertexToBody);\n          vertexB = vertex;\n          var nextIndex = (vertexA.index + 1) % vertices.length;\n          vertex = vertices[nextIndex];\n          vertexToBody.x = vertex.x - bodyAPosition.x;\n          vertexToBody.y = vertex.y - bodyAPosition.y;\n          distance = -Vector.dot(normal, vertexToBody);\n\n          if (distance < nearestDistance) {\n            vertexB = vertex;\n          }\n\n          return [vertexA, vertexB];\n        };\n      })();\n      /***/\n\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n      *\n      * @class Mouse\n      */\n      var Mouse = {};\n      module.exports = Mouse;\n\n      var Common = __webpack_require__(0);\n\n      (function () {\n        /**\n         * Creates a mouse input.\n         * @method create\n         * @param {HTMLElement} element\n         * @return {mouse} A new mouse\n         */\n        Mouse.create = function (element) {\n          var mouse = {};\n\n          if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n          }\n\n          mouse.element = element || document.body;\n          mouse.absolute = {\n            x: 0,\n            y: 0\n          };\n          mouse.position = {\n            x: 0,\n            y: 0\n          };\n          mouse.mousedownPosition = {\n            x: 0,\n            y: 0\n          };\n          mouse.mouseupPosition = {\n            x: 0,\n            y: 0\n          };\n          mouse.offset = {\n            x: 0,\n            y: 0\n          };\n          mouse.scale = {\n            x: 1,\n            y: 1\n          };\n          mouse.wheelDelta = 0;\n          mouse.button = -1;\n          mouse.pixelRatio = parseInt(mouse.element.getAttribute('data-pixel-ratio'), 10) || 1;\n          mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n          };\n\n          mouse.mousemove = function (event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n              mouse.button = 0;\n              event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n          };\n\n          mouse.mousedown = function (event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n              mouse.button = 0;\n              event.preventDefault();\n            } else {\n              mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n          };\n\n          mouse.mouseup = function (event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n              event.preventDefault();\n            }\n\n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n          };\n\n          mouse.mousewheel = function (event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n          };\n\n          Mouse.setElement(mouse, mouse.element);\n          return mouse;\n        };\n        /**\n         * Sets the element the mouse is bound to (and relative to).\n         * @method setElement\n         * @param {mouse} mouse\n         * @param {HTMLElement} element\n         */\n\n\n        Mouse.setElement = function (mouse, element) {\n          mouse.element = element;\n          element.addEventListener('mousemove', mouse.mousemove);\n          element.addEventListener('mousedown', mouse.mousedown);\n          element.addEventListener('mouseup', mouse.mouseup);\n          element.addEventListener('mousewheel', mouse.mousewheel);\n          element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n          element.addEventListener('touchmove', mouse.mousemove);\n          element.addEventListener('touchstart', mouse.mousedown);\n          element.addEventListener('touchend', mouse.mouseup);\n        };\n        /**\n         * Clears all captured source events.\n         * @method clearSourceEvents\n         * @param {mouse} mouse\n         */\n\n\n        Mouse.clearSourceEvents = function (mouse) {\n          mouse.sourceEvents.mousemove = null;\n          mouse.sourceEvents.mousedown = null;\n          mouse.sourceEvents.mouseup = null;\n          mouse.sourceEvents.mousewheel = null;\n          mouse.wheelDelta = 0;\n        };\n        /**\n         * Sets the mouse position offset.\n         * @method setOffset\n         * @param {mouse} mouse\n         * @param {vector} offset\n         */\n\n\n        Mouse.setOffset = function (mouse, offset) {\n          mouse.offset.x = offset.x;\n          mouse.offset.y = offset.y;\n          mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n          mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n        };\n        /**\n         * Sets the mouse position scale.\n         * @method setScale\n         * @param {mouse} mouse\n         * @param {vector} scale\n         */\n\n\n        Mouse.setScale = function (mouse, scale) {\n          mouse.scale.x = scale.x;\n          mouse.scale.y = scale.y;\n          mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n          mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n        };\n        /**\n         * Gets the mouse position relative to an element given a screen pixel ratio.\n         * @method _getRelativeMousePosition\n         * @private\n         * @param {} event\n         * @param {} element\n         * @param {number} pixelRatio\n         * @return {}\n         */\n\n\n        Mouse._getRelativeMousePosition = function (event, element, pixelRatio) {\n          var elementBounds = element.getBoundingClientRect(),\n              rootNode = document.documentElement || document.body.parentNode || document.body,\n              scrollX = window.pageXOffset !== undefined ? window.pageXOffset : rootNode.scrollLeft,\n              scrollY = window.pageYOffset !== undefined ? window.pageYOffset : rootNode.scrollTop,\n              touches = event.changedTouches,\n              x,\n              y;\n\n          if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n          } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n          }\n\n          return {\n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n          };\n        };\n      })();\n      /***/\n\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n      *\n      * @class Axes\n      */\n      var Axes = {};\n      module.exports = Axes;\n\n      var Vector = __webpack_require__(2);\n\n      var Common = __webpack_require__(0);\n\n      (function () {\n        /**\n         * Creates a new set of axes from the given vertices.\n         * @method fromVertices\n         * @param {vertices} vertices\n         * @return {axes} A new axes from the given vertices\n         */\n        Axes.fromVertices = function (vertices) {\n          var axes = {}; // find the unique axes, using edge normal gradients\n\n          for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length,\n                normal = Vector.normalise({\n              x: vertices[j].y - vertices[i].y,\n              y: vertices[i].x - vertices[j].x\n            }),\n                gradient = normal.y === 0 ? Infinity : normal.x / normal.y; // limit precision\n\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n          }\n\n          return Common.values(axes);\n        };\n        /**\n         * Rotates a set of axes by the given angle.\n         * @method rotate\n         * @param {axes} axes\n         * @param {number} angle\n         */\n\n\n        Axes.rotate = function (axes, angle) {\n          if (angle === 0) return;\n          var cos = Math.cos(angle),\n              sin = Math.sin(angle);\n\n          for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n          }\n        };\n      })();\n      /***/\n\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Bodies` module contains factory methods for creating rigid body models \n      * with commonly used body configurations (such as rectangles, circles and other polygons).\n      *\n      * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n      *\n      * @class Bodies\n      */\n      // TODO: true circle bodies\n      var Bodies = {};\n      module.exports = Bodies;\n\n      var Vertices = __webpack_require__(3);\n\n      var Common = __webpack_require__(0);\n\n      var Body = __webpack_require__(6);\n\n      var Bounds = __webpack_require__(1);\n\n      var Vector = __webpack_require__(2);\n\n      (function () {\n        Bodies._decompWarned = false;\n        /**\n         * Creates a new rigid body model with a rectangle hull. \n         * The options parameter is an object that specifies any properties you wish to override the defaults.\n         * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n         * @method rectangle\n         * @param {number} x\n         * @param {number} y\n         * @param {number} width\n         * @param {number} height\n         * @param {object} [options]\n         * @return {body} A new rectangle body\n         */\n\n        Bodies.rectangle = function (x, y, width, height, options) {\n          options = options || {};\n          var rectangle = {\n            label: 'Rectangle Body',\n            position: {\n              x: x,\n              y: y\n            },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n          };\n\n          if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n          }\n\n          return Body.create(Common.extend({}, rectangle, options));\n        };\n        /**\n         * Creates a new rigid body model with a trapezoid hull. \n         * The options parameter is an object that specifies any properties you wish to override the defaults.\n         * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n         * @method trapezoid\n         * @param {number} x\n         * @param {number} y\n         * @param {number} width\n         * @param {number} height\n         * @param {number} slope\n         * @param {object} [options]\n         * @return {body} A new trapezoid body\n         */\n\n\n        Bodies.trapezoid = function (x, y, width, height, slope, options) {\n          options = options || {};\n          slope *= 0.5;\n          var roof = (1 - slope * 2) * width;\n          var x1 = width * slope,\n              x2 = x1 + roof,\n              x3 = x2 + x1,\n              verticesPath;\n\n          if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + -height + ' L ' + x2 + ' ' + -height + ' L ' + x3 + ' 0';\n          } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + -height + ' L ' + x3 + ' 0';\n          }\n\n          var trapezoid = {\n            label: 'Trapezoid Body',\n            position: {\n              x: x,\n              y: y\n            },\n            vertices: Vertices.fromPath(verticesPath)\n          };\n\n          if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n          }\n\n          return Body.create(Common.extend({}, trapezoid, options));\n        };\n        /**\n         * Creates a new rigid body model with a circle hull. \n         * The options parameter is an object that specifies any properties you wish to override the defaults.\n         * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n         * @method circle\n         * @param {number} x\n         * @param {number} y\n         * @param {number} radius\n         * @param {object} [options]\n         * @param {number} [maxSides]\n         * @return {body} A new circle body\n         */\n\n\n        Bodies.circle = function (x, y, radius, options, maxSides) {\n          options = options || {};\n          var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n          }; // approximate circles with polygons until true circles implemented in SAT\n\n          maxSides = maxSides || 25;\n          var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius))); // optimisation: always use even number of sides (half the number of unique axes)\n\n          if (sides % 2 === 1) sides += 1;\n          return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n        };\n        /**\n         * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n         * The options parameter is an object that specifies any properties you wish to override the defaults.\n         * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n         * @method polygon\n         * @param {number} x\n         * @param {number} y\n         * @param {number} sides\n         * @param {number} radius\n         * @param {object} [options]\n         * @return {body} A new regular polygon body\n         */\n\n\n        Bodies.polygon = function (x, y, sides, radius, options) {\n          options = options || {};\n          if (sides < 3) return Bodies.circle(x, y, radius, options);\n          var theta = 2 * Math.PI / sides,\n              path = '',\n              offset = theta * 0.5;\n\n          for (var i = 0; i < sides; i += 1) {\n            var angle = offset + i * theta,\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n          }\n\n          var polygon = {\n            label: 'Polygon Body',\n            position: {\n              x: x,\n              y: y\n            },\n            vertices: Vertices.fromPath(path)\n          };\n\n          if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n          }\n\n          return Body.create(Common.extend({}, polygon, options));\n        };\n        /**\n         * Creates a body based on set(s) of vertices.\n         * \n         * This utility builds on top of `Body.create` to automatically handle concave inputs.\n         * \n         * To use this decomposition feature the [poly-decomp](https://github.com/schteppe/poly-decomp.js) \n         * package should be additionally installed via npm or as a global.\n         * \n         * The resulting vertices are reorientated about their centre of mass,\n         * and offset such that `body.position` corresponds to this point.\n         * \n         * If needed the resulting offset may be found by subtracting `body.bounds` from the original input bounds.\n         * To later move the centre of mass see `Body.setCentre`.\n         * \n         * Note that decomposition results are not always perfect. \n         * \n         * For best results, simplify the input vertices as much as possible first.\n         * By default this function applies some addtional simplification to help.\n         * \n         * Some outputs may also require further manual processing afterwards to be robust.\n         * \n         * In particular some parts may need to be overlapped to avoid collision gaps.\n         * Thin parts and sharp points should be avoided or removed where possible.\n         *\n         * The options parameter object specifies any `Matter.Body` properties you wish to override the defaults.\n         * \n         * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n         * @method fromVertices\n         * @param {number} x\n         * @param {number} y\n         * @param [[vector]] vertexSets\n         * @param {object} [options]\n         * @param {bool} [flagInternal=false]\n         * @param {number} [removeCollinear=0.01]\n         * @param {number} [minimumArea=10]\n         * @param {number} [removeDuplicatePoints=0.01]\n         * @return {body}\n         */\n\n\n        Bodies.fromVertices = function (x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea, removeDuplicatePoints) {\n          var decomp, canDecomp, body, parts, isConvex, isConcave, vertices, i, j, k, v, z;\n\n          try {\n            decomp = __webpack_require__(27);\n          } catch (e) {\n            // continue without decomp\n            decomp = null;\n          } // check expected decomp module was resolved\n\n\n          canDecomp = Boolean(decomp && decomp.quickDecomp);\n          options = options || {};\n          parts = [];\n          flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n          removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n          minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n          removeDuplicatePoints = typeof removeDuplicatePoints !== 'undefined' ? removeDuplicatePoints : 0.01; // ensure vertexSets is an array of arrays\n\n          if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n          }\n\n          for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n            isConcave = !isConvex;\n\n            if (isConcave && !canDecomp && !Bodies._decompWarned) {\n              Common.warn('Could not resolve the expected \\'poly-decomp\\' package for concave vertices in \\'Bodies.fromVertices\\'');\n              Common.warn('Try \\'npm install poly-decomp --save\\' or as a global e.g. \\'window.decomp\\'');\n              Bodies._decompWarned = true;\n            }\n\n            if (isConvex || !canDecomp) {\n              if (isConvex) {\n                vertices = Vertices.clockwiseSort(vertices);\n              } else {\n                // fallback to convex hull when decomposition is not possible\n                vertices = Vertices.hull(vertices);\n              }\n\n              parts.push({\n                position: {\n                  x: x,\n                  y: y\n                },\n                vertices: vertices\n              });\n            } else {\n              // initialise a decomposition\n              var concave = vertices.map(function (vertex) {\n                return [vertex.x, vertex.y];\n              }); // vertices are concave and simple, we can decompose into parts\n\n              decomp.makeCCW(concave);\n              if (removeCollinear !== false) decomp.removeCollinearPoints(concave, removeCollinear);\n              if (removeDuplicatePoints !== false && decomp.removeDuplicatePoints) decomp.removeDuplicatePoints(concave, removeDuplicatePoints); // use the quick decomposition algorithm (Bayazit)\n\n              var decomposed = decomp.quickDecomp(concave); // for each decomposed chunk\n\n              for (i = 0; i < decomposed.length; i++) {\n                var chunk = decomposed[i]; // convert vertices into the correct structure\n\n                var chunkVertices = chunk.map(function (vertices) {\n                  return {\n                    x: vertices[0],\n                    y: vertices[1]\n                  };\n                }); // skip small chunks\n\n                if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea) continue; // create a compound part\n\n                parts.push({\n                  position: Vertices.centre(chunkVertices),\n                  vertices: chunkVertices\n                });\n              }\n            }\n          } // create body parts\n\n\n          for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n          } // flag internal edges (coincident part edges)\n\n\n          if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n              var partA = parts[i];\n\n              for (j = i + 1; j < parts.length; j++) {\n                var partB = parts[j];\n\n                if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                  var pav = partA.vertices,\n                      pbv = partB.vertices; // iterate vertices of both parts\n\n                  for (k = 0; k < partA.vertices.length; k++) {\n                    for (z = 0; z < partB.vertices.length; z++) {\n                      // find distances between the vertices\n                      var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                          db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length])); // if both vertices are very close, consider the edge concident (internal)\n\n                      if (da < coincident_max_dist && db < coincident_max_dist) {\n                        pav[k].isInternal = true;\n                        pbv[z].isInternal = true;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({\n              parts: parts.slice(0)\n            }, options)); // offset such that body.position is at the centre off mass\n\n            Body.setPosition(body, {\n              x: x,\n              y: y\n            });\n            return body;\n          } else {\n            return parts[0];\n          }\n        };\n      })();\n      /***/\n\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n      *\n      * @class Plugin\n      */\n      var Plugin = {};\n      module.exports = Plugin;\n\n      var Common = __webpack_require__(0);\n\n      (function () {\n        Plugin._registry = {};\n        /**\n         * Registers a plugin object so it can be resolved later by name.\n         * @method register\n         * @param plugin {} The plugin to register.\n         * @return {object} The plugin.\n         */\n\n        Plugin.register = function (plugin) {\n          if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n          }\n\n          if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n              Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n              Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n              Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n              Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n          } else {\n            Plugin._registry[plugin.name] = plugin;\n          }\n\n          return plugin;\n        };\n        /**\n         * Resolves a dependency to a plugin object from the registry if it exists. \n         * The `dependency` may contain a version, but only the name matters when resolving.\n         * @method resolve\n         * @param dependency {string} The dependency.\n         * @return {object} The plugin if resolved, otherwise `undefined`.\n         */\n\n\n        Plugin.resolve = function (dependency) {\n          return Plugin._registry[Plugin.dependencyParse(dependency).name];\n        };\n        /**\n         * Returns a pretty printed plugin name and version.\n         * @method toString\n         * @param plugin {} The plugin.\n         * @return {string} Pretty printed plugin name and version.\n         */\n\n\n        Plugin.toString = function (plugin) {\n          return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n        };\n        /**\n         * Returns `true` if the object meets the minimum standard to be considered a plugin.\n         * This means it must define the following properties:\n         * - `name`\n         * - `version`\n         * - `install`\n         * @method isPlugin\n         * @param obj {} The obj to test.\n         * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n         */\n\n\n        Plugin.isPlugin = function (obj) {\n          return obj && obj.name && obj.version && obj.install;\n        };\n        /**\n         * Returns `true` if a plugin with the given `name` been installed on `module`.\n         * @method isUsed\n         * @param module {} The module.\n         * @param name {string} The plugin name.\n         * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n         */\n\n\n        Plugin.isUsed = function (module, name) {\n          return module.used.indexOf(name) > -1;\n        };\n        /**\n         * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n         * If `plugin.for` is not specified then it is assumed to be applicable.\n         * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n         * @method isFor\n         * @param plugin {} The plugin.\n         * @param module {} The module.\n         * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n         */\n\n\n        Plugin.isFor = function (plugin, module) {\n          var parsed = plugin[\"for\"] && Plugin.dependencyParse(plugin[\"for\"]);\n          return !plugin[\"for\"] || module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range);\n        };\n        /**\n         * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n         * For installing plugins on `Matter` see the convenience function `Matter.use`.\n         * Plugins may be specified either by their name or a reference to the plugin object.\n         * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n         * Order is important, a topological sort is performed to find the best resulting order of installation.\n         * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n         * This function logs the resulting status of each dependency in the console, along with any warnings.\n         * - A green tick ✅ indicates a dependency was resolved and installed.\n         * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n         * - A red cross ❌ indicates a dependency could not be resolved.\n         * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n         * @method use\n         * @param module {} The module install plugins on.\n         * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n         */\n\n\n        Plugin.use = function (module, plugins) {\n          module.uses = (module.uses || []).concat(plugins || []);\n\n          if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n          }\n\n          var dependencies = Plugin.dependencies(module),\n              sortedDependencies = Common.topologicalSort(dependencies),\n              status = [];\n\n          for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n              continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n              status.push('❌ ' + sortedDependencies[i]);\n              continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n              continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n              Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin[\"for\"], 'but installed on', Plugin.toString(module) + '.');\n              plugin._warned = true;\n            }\n\n            if (plugin.install) {\n              plugin.install(module);\n            } else {\n              Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n              plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n              status.push('🔶 ' + Plugin.toString(plugin));\n              delete plugin._warned;\n            } else {\n              status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n          }\n\n          if (status.length > 0) {\n            Common.info(status.join('  '));\n          }\n        };\n        /**\n         * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n         * @method dependencies\n         * @param module {} The module.\n         * @return {object} A dependency graph.\n         */\n\n\n        Plugin.dependencies = function (module, tracked) {\n          var parsedBase = Plugin.dependencyParse(module),\n              name = parsedBase.name;\n          tracked = tracked || {};\n\n          if (name in tracked) {\n            return;\n          }\n\n          module = Plugin.resolve(module) || module;\n          tracked[name] = Common.map(module.uses || [], function (dependency) {\n            if (Plugin.isPlugin(dependency)) {\n              Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n              Common.warn('Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy', Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.');\n              resolved._warned = true;\n              module._warned = true;\n            } else if (!resolved) {\n              Common.warn('Plugin.dependencies:', Plugin.toString(dependency), 'used by', Plugin.toString(parsedBase), 'could not be resolved.');\n              module._warned = true;\n            }\n\n            return parsed.name;\n          });\n\n          for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n          }\n\n          return tracked;\n        };\n        /**\n         * Parses a dependency string into its components.\n         * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n         * See documentation for `Plugin.versionParse` for a description of the format.\n         * This function can also handle dependencies that are already resolved (e.g. a module object).\n         * @method dependencyParse\n         * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n         * @return {object} The dependency parsed into its components.\n         */\n\n\n        Plugin.dependencyParse = function (dependency) {\n          if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n              Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n              name: dependency.split('@')[0],\n              range: dependency.split('@')[1] || '*'\n            };\n          }\n\n          return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n          };\n        };\n        /**\n         * Parses a version string into its components.  \n         * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n         * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n         * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n         * Only the following range types are supported:\n         * - Tilde ranges e.g. `~1.2.3`\n         * - Caret ranges e.g. `^1.2.3`\n         * - Greater than ranges e.g. `>1.2.3`\n         * - Greater than or equal ranges e.g. `>=1.2.3`\n         * - Exact version e.g. `1.2.3`\n         * - Any version `*`\n         * @method versionParse\n         * @param range {string} The version string.\n         * @return {object} The version range parsed into its components.\n         */\n\n\n        Plugin.versionParse = function (range) {\n          var pattern = /^(\\*)|(\\^|~|>=|>)?\\s*((\\d+)\\.(\\d+)\\.(\\d+))(-[0-9A-Za-z-]+)?$/;\n\n          if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n          }\n\n          var parts = pattern.exec(range);\n          var major = Number(parts[4]);\n          var minor = Number(parts[5]);\n          var patch = Number(parts[6]);\n          return {\n            isRange: Boolean(parts[1] || parts[2]),\n            version: parts[3],\n            range: range,\n            operator: parts[1] || parts[2] || '',\n            major: major,\n            minor: minor,\n            patch: patch,\n            parts: [major, minor, patch],\n            prerelease: parts[7],\n            number: major * 1e8 + minor * 1e4 + patch\n          };\n        };\n        /**\n         * Returns `true` if `version` satisfies the given `range`.\n         * See documentation for `Plugin.versionParse` for a description of the format.\n         * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n         * @method versionSatisfies\n         * @param version {string} The version string.\n         * @param range {string} The range string.\n         * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n         */\n\n\n        Plugin.versionSatisfies = function (version, range) {\n          range = range || '*';\n          var r = Plugin.versionParse(range),\n              v = Plugin.versionParse(version);\n\n          if (r.isRange) {\n            if (r.operator === '*' || version === '*') {\n              return true;\n            }\n\n            if (r.operator === '>') {\n              return v.number > r.number;\n            }\n\n            if (r.operator === '>=') {\n              return v.number >= r.number;\n            }\n\n            if (r.operator === '~') {\n              return v.major === r.major && v.minor === r.minor && v.patch >= r.patch;\n            }\n\n            if (r.operator === '^') {\n              if (r.major > 0) {\n                return v.major === r.major && v.number >= r.number;\n              }\n\n              if (r.minor > 0) {\n                return v.minor === r.minor && v.patch >= r.patch;\n              }\n\n              return v.patch === r.patch;\n            }\n          }\n\n          return version === range || version === '*';\n        };\n      })();\n      /***/\n\n    },\n    /* 18 */\n\n    /***/\n    function (module, exports) {\n      /**\n      * The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n      *\n      * @class Contact\n      */\n      var Contact = {};\n      module.exports = Contact;\n\n      (function () {\n        /**\n         * Creates a new contact.\n         * @method create\n         * @param {vertex} vertex\n         * @return {contact} A new contact\n         */\n        Contact.create = function (vertex) {\n          return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n          };\n        };\n        /**\n         * Generates a contact id.\n         * @method id\n         * @param {vertex} vertex\n         * @return {string} Unique contactID\n         */\n\n\n        Contact.id = function (vertex) {\n          return vertex.body.id + '_' + vertex.index;\n        };\n      })();\n      /***/\n\n    },\n    /* 19 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.World` module contains methods for creating and manipulating the world composite.\n      * A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n      * A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n      * It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n      * There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n      *\n      * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n      *\n      * @class World\n      * @extends Composite\n      */\n      var World = {};\n      module.exports = World;\n\n      var Composite = __webpack_require__(5);\n\n      var Constraint = __webpack_require__(8);\n\n      var Common = __webpack_require__(0);\n\n      (function () {\n        /**\n         * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n         * See the properties section below for detailed information on what you can pass via the `options` object.\n         * @method create\n         * @constructor\n         * @param {} options\n         * @return {world} A new world\n         */\n        World.create = function (options) {\n          var composite = Composite.create();\n          var defaults = {\n            label: 'World',\n            gravity: {\n              x: 0,\n              y: 1,\n              scale: 0.001\n            },\n            bounds: {\n              min: {\n                x: -Infinity,\n                y: -Infinity\n              },\n              max: {\n                x: Infinity,\n                y: Infinity\n              }\n            }\n          };\n          return Common.extend(composite, defaults, options);\n        };\n        /*\n        *\n        *  Properties Documentation\n        *\n        */\n\n        /**\n         * The gravity to apply on the world.\n         *\n         * @property gravity\n         * @type object\n         */\n\n        /**\n         * The gravity x component.\n         *\n         * @property gravity.x\n         * @type object\n         * @default 0\n         */\n\n        /**\n         * The gravity y component.\n         *\n         * @property gravity.y\n         * @type object\n         * @default 1\n         */\n\n        /**\n         * The gravity scale factor.\n         *\n         * @property gravity.scale\n         * @type object\n         * @default 0.001\n         */\n\n        /**\n         * A `Bounds` object that defines the world bounds for collision detection.\n         *\n         * @property bounds\n         * @type bounds\n         * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n         */\n        // World is a Composite body\n        // see src/module/Outro.js for these aliases:\n\n        /**\n         * An alias for Composite.add\n         * @method add\n         * @param {world} world\n         * @param {} object\n         * @return {composite} The original world with the objects added\n         */\n\n        /**\n         * An alias for Composite.remove\n         * @method remove\n         * @param {world} world\n         * @param {} object\n         * @param {boolean} [deep=false]\n         * @return {composite} The original world with the objects removed\n         */\n\n        /**\n         * An alias for Composite.clear\n         * @method clear\n         * @param {world} world\n         * @param {boolean} keepStatic\n         */\n\n        /**\n         * An alias for Composite.addComposite\n         * @method addComposite\n         * @param {world} world\n         * @param {composite} composite\n         * @return {world} The original world with the objects from composite added\n         */\n\n        /**\n          * An alias for Composite.addBody\n          * @method addBody\n          * @param {world} world\n          * @param {body} body\n          * @return {world} The original world with the body added\n          */\n\n        /**\n          * An alias for Composite.addConstraint\n          * @method addConstraint\n          * @param {world} world\n          * @param {constraint} constraint\n          * @return {world} The original world with the constraint added\n          */\n\n      })();\n      /***/\n\n    },\n    /* 20 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n      *\n      * @class Pairs\n      */\n      var Pairs = {};\n      module.exports = Pairs;\n\n      var Pair = __webpack_require__(9);\n\n      var Common = __webpack_require__(0);\n\n      (function () {\n        Pairs._pairMaxIdleLife = 1000;\n        /**\n         * Creates a new pairs structure.\n         * @method create\n         * @param {object} options\n         * @return {pairs} A new pairs structure\n         */\n\n        Pairs.create = function (options) {\n          return Common.extend({\n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n          }, options);\n        };\n        /**\n         * Updates pairs given a list of collisions.\n         * @method update\n         * @param {object} pairs\n         * @param {collision[]} collisions\n         * @param {number} timestamp\n         */\n\n\n        Pairs.update = function (pairs, collisions, timestamp) {\n          var pairsList = pairs.list,\n              pairsTable = pairs.table,\n              collisionStart = pairs.collisionStart,\n              collisionEnd = pairs.collisionEnd,\n              collisionActive = pairs.collisionActive,\n              collision,\n              pairId,\n              pair,\n              i; // clear collision state arrays, but maintain old reference\n\n          collisionStart.length = 0;\n          collisionEnd.length = 0;\n          collisionActive.length = 0;\n\n          for (i = 0; i < pairsList.length; i++) {\n            pairsList[i].confirmedActive = false;\n          }\n\n          for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n              pairId = Pair.id(collision.bodyA, collision.bodyB);\n              pair = pairsTable[pairId];\n\n              if (pair) {\n                // pair already exists (but may or may not be active)\n                if (pair.isActive) {\n                  // pair exists and is active\n                  collisionActive.push(pair);\n                } else {\n                  // pair exists but was inactive, so a collision has just started again\n                  collisionStart.push(pair);\n                } // update the pair\n\n\n                Pair.update(pair, collision, timestamp);\n                pair.confirmedActive = true;\n              } else {\n                // pair did not exist, create a new pair\n                pair = Pair.create(collision, timestamp);\n                pairsTable[pairId] = pair; // push the new pair\n\n                collisionStart.push(pair);\n                pairsList.push(pair);\n              }\n            }\n          } // deactivate previously active pairs that are now inactive\n\n\n          for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n\n            if (pair.isActive && !pair.confirmedActive) {\n              Pair.setActive(pair, false, timestamp);\n              collisionEnd.push(pair);\n            }\n          }\n        };\n        /**\n         * Finds and removes pairs that have been inactive for a set amount of time.\n         * @method removeOld\n         * @param {object} pairs\n         * @param {number} timestamp\n         */\n\n\n        Pairs.removeOld = function (pairs, timestamp) {\n          var pairsList = pairs.list,\n              pairsTable = pairs.table,\n              indexesToRemove = [],\n              pair,\n              collision,\n              pairIndex,\n              i;\n\n          for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision; // never remove sleeping pairs\n\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n              pair.timeUpdated = timestamp;\n              continue;\n            } // if pair is inactive for too long, mark it to be removed\n\n\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n              indexesToRemove.push(i);\n            }\n          } // remove marked pairs\n\n\n          for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n          }\n        };\n        /**\n         * Clears the given pairs structure.\n         * @method clear\n         * @param {pairs} pairs\n         * @return {pairs} pairs\n         */\n\n\n        Pairs.clear = function (pairs) {\n          pairs.table = {};\n          pairs.list.length = 0;\n          pairs.collisionStart.length = 0;\n          pairs.collisionActive.length = 0;\n          pairs.collisionEnd.length = 0;\n          return pairs;\n        };\n      })();\n      /***/\n\n    },\n    /* 21 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Resolver` module contains methods for resolving collision pairs.\n      *\n      * @class Resolver\n      */\n      var Resolver = {};\n      module.exports = Resolver;\n\n      var Vertices = __webpack_require__(3);\n\n      var Vector = __webpack_require__(2);\n\n      var Common = __webpack_require__(0);\n\n      var Bounds = __webpack_require__(1);\n\n      (function () {\n        Resolver._restingThresh = 4;\n        Resolver._restingThreshTangent = 6;\n        Resolver._positionDampen = 0.9;\n        Resolver._positionWarming = 0.8;\n        Resolver._frictionNormalMultiplier = 5;\n        /**\n         * Prepare pairs for position solving.\n         * @method preSolvePosition\n         * @param {pair[]} pairs\n         */\n\n        Resolver.preSolvePosition = function (pairs) {\n          var i, pair, activeCount; // find total contacts on each body\n\n          for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            if (!pair.isActive) continue;\n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n          }\n        };\n        /**\n         * Find a solution for pair positions.\n         * @method solvePosition\n         * @param {pair[]} pairs\n         * @param {number} timeScale\n         */\n\n\n        Resolver.solvePosition = function (pairs, timeScale) {\n          var i,\n              pair,\n              collision,\n              bodyA,\n              bodyB,\n              normal,\n              bodyBtoA,\n              contactShare,\n              positionImpulse,\n              contactCount = {},\n              tempA = Vector._temp[0],\n              tempB = Vector._temp[1],\n              tempC = Vector._temp[2],\n              tempD = Vector._temp[3]; // find impulses required to resolve penetration\n\n          for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            if (!pair.isActive || pair.isSensor) continue;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal; // get current separation between body edges involved in collision\n\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), Vector.add(bodyA.positionImpulse, Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n            pair.separation = Vector.dot(normal, bodyBtoA);\n          }\n\n          for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            if (!pair.isActive || pair.isSensor) continue;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n            if (bodyA.isStatic || bodyB.isStatic) positionImpulse *= 2;\n\n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n              contactShare = Resolver._positionDampen / bodyA.totalContacts;\n              bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n              bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n              contactShare = Resolver._positionDampen / bodyB.totalContacts;\n              bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n              bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n          }\n        };\n        /**\n         * Apply position resolution.\n         * @method postSolvePosition\n         * @param {body[]} bodies\n         */\n\n\n        Resolver.postSolvePosition = function (bodies) {\n          for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i]; // reset contact count\n\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n              // update body geometry\n              for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                Vertices.translate(part.vertices, body.positionImpulse);\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n                part.position.x += body.positionImpulse.x;\n                part.position.y += body.positionImpulse.y;\n              } // move the body without changing velocity\n\n\n              body.positionPrev.x += body.positionImpulse.x;\n              body.positionPrev.y += body.positionImpulse.y;\n\n              if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                // reset cached impulse if the body has velocity along it\n                body.positionImpulse.x = 0;\n                body.positionImpulse.y = 0;\n              } else {\n                // warm the next iteration\n                body.positionImpulse.x *= Resolver._positionWarming;\n                body.positionImpulse.y *= Resolver._positionWarming;\n              }\n            }\n          }\n        };\n        /**\n         * Prepare pairs for velocity solving.\n         * @method preSolveVelocity\n         * @param {pair[]} pairs\n         */\n\n\n        Resolver.preSolveVelocity = function (pairs) {\n          var i,\n              j,\n              pair,\n              contacts,\n              collision,\n              bodyA,\n              bodyB,\n              normal,\n              tangent,\n              contact,\n              contactVertex,\n              normalImpulse,\n              tangentImpulse,\n              offset,\n              impulse = Vector._temp[0],\n              tempA = Vector._temp[1];\n\n          for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            if (!pair.isActive || pair.isSensor) continue;\n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent; // resolve each contact\n\n            for (j = 0; j < contacts.length; j++) {\n              contact = contacts[j];\n              contactVertex = contact.vertex;\n              normalImpulse = contact.normalImpulse;\n              tangentImpulse = contact.tangentImpulse;\n\n              if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                // total impulse from contact\n                impulse.x = normal.x * normalImpulse + tangent.x * tangentImpulse;\n                impulse.y = normal.y * normalImpulse + tangent.y * tangentImpulse; // apply impulse from contact\n\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                  offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                  bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                  bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                  bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                  offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                  bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                  bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                  bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                }\n              }\n            }\n          }\n        };\n        /**\n         * Find a solution for pair velocities.\n         * @method solveVelocity\n         * @param {pair[]} pairs\n         * @param {number} timeScale\n         */\n\n\n        Resolver.solveVelocity = function (pairs, timeScale) {\n          var timeScaleSquared = timeScale * timeScale,\n              impulse = Vector._temp[0],\n              tempA = Vector._temp[1],\n              tempB = Vector._temp[2],\n              tempC = Vector._temp[3],\n              tempD = Vector._temp[4],\n              tempE = Vector._temp[5];\n\n          for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            if (!pair.isActive || pair.isSensor) continue;\n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length; // update body velocities\n\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev; // resolve each contact\n\n            for (var j = 0; j < contacts.length; j++) {\n              var contact = contacts[j],\n                  contactVertex = contact.vertex,\n                  offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                  offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                  velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                  velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD),\n                  relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                  normalVelocity = Vector.dot(normal, relativeVelocity);\n              var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                  tangentSpeed = Math.abs(tangentVelocity),\n                  tangentVelocityDirection = Common.sign(tangentVelocity); // raw impulses\n\n              var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                  normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier; // coulomb friction\n\n\n              var tangentImpulse = tangentVelocity,\n                  maxFriction = Infinity;\n\n              if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                maxFriction = tangentSpeed;\n                tangentImpulse = Common.clamp(pair.friction * tangentVelocityDirection * timeScaleSquared, -maxFriction, maxFriction);\n              } // modify impulses accounting for mass, inertia and offset\n\n\n              var oAcN = Vector.cross(offsetA, normal),\n                  oBcN = Vector.cross(offsetB, normal),\n                  share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN + bodyB.inverseInertia * oBcN * oBcN);\n              normalImpulse *= share;\n              tangentImpulse *= share; // handle high velocity and resting collisions separately\n\n              if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                // high normal velocity so clear cached contact normal impulse\n                contact.normalImpulse = 0;\n              } else {\n                // solve resting collision constraints using Erin Catto's method (GDC08)\n                // impulse constraint tends to 0\n                var contactNormalImpulse = contact.normalImpulse;\n                contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                normalImpulse = contact.normalImpulse - contactNormalImpulse;\n              } // handle high velocity and resting collisions separately\n\n\n              if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                // high tangent velocity so clear cached contact tangent impulse\n                contact.tangentImpulse = 0;\n              } else {\n                // solve resting collision constraints using Erin Catto's method (GDC08)\n                // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                var contactTangentImpulse = contact.tangentImpulse;\n                contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n              } // total impulse from contact\n\n\n              impulse.x = normal.x * normalImpulse + tangent.x * tangentImpulse;\n              impulse.y = normal.y * normalImpulse + tangent.y * tangentImpulse; // apply impulse from contact\n\n              if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n              }\n\n              if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n              }\n            }\n          }\n        };\n      })();\n      /***/\n\n    },\n    /* 22 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Engine` module contains methods for creating and manipulating engines.\n      * An engine is a controller that manages updating the simulation of the world.\n      * See `Matter.Runner` for an optional game loop utility.\n      *\n      * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n      *\n      * @class Engine\n      */\n      var Engine = {};\n      module.exports = Engine;\n\n      var World = __webpack_require__(19);\n\n      var Sleeping = __webpack_require__(7);\n\n      var Resolver = __webpack_require__(21);\n\n      var Render = __webpack_require__(10);\n\n      var Pairs = __webpack_require__(20);\n\n      var Metrics = __webpack_require__(23);\n\n      var Grid = __webpack_require__(11);\n\n      var Events = __webpack_require__(4);\n\n      var Composite = __webpack_require__(5);\n\n      var Constraint = __webpack_require__(8);\n\n      var Common = __webpack_require__(0);\n\n      var Body = __webpack_require__(6);\n\n      (function () {\n        /**\n         * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n         * All properties have default values, and many are pre-calculated automatically based on other properties.\n         * See the properties section below for detailed information on what you can pass via the `options` object.\n         * @method create\n         * @param {object} [options]\n         * @return {engine} engine\n         */\n        Engine.create = function (element, options) {\n          // options may be passed as the first (and only) argument\n          options = Common.isElement(element) ? options : element;\n          element = Common.isElement(element) ? element : null;\n          options = options || {};\n\n          if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n          }\n\n          var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n              timestamp: 0,\n              timeScale: 1\n            },\n            broadphase: {\n              controller: Grid\n            }\n          };\n          var engine = Common.extend(defaults, options); // back compatibility\n\n          if (element || engine.render) {\n            var renderDefaults = {\n              element: element,\n              controller: Render\n            };\n            engine.render = Common.extend(renderDefaults, engine.render);\n          } // back compatibility\n\n\n          if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n          } // back compatibility\n\n\n          if (engine.render) {\n            engine.render.engine = engine;\n          }\n\n          engine.world = options.world || World.create(engine.world);\n          engine.pairs = Pairs.create();\n          engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n          engine.metrics = engine.metrics || {\n            extended: false\n          }; // @if DEBUG\n\n          engine.metrics = Metrics.create(engine.metrics); // @endif\n\n          return engine;\n        };\n        /**\n         * Moves the simulation forward in time by `delta` ms.\n         * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n         * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n         * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n         * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n         * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n         *\n         * Triggers `beforeUpdate` and `afterUpdate` events.\n         * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n         * @method update\n         * @param {engine} engine\n         * @param {number} [delta=16.666]\n         * @param {number} [correction=1]\n         */\n\n\n        Engine.update = function (engine, delta, correction) {\n          delta = delta || 1000 / 60;\n          correction = correction || 1;\n          var world = engine.world,\n              timing = engine.timing,\n              broadphase = engine.broadphase,\n              broadphasePairs = [],\n              i; // increment timestamp\n\n          timing.timestamp += delta * timing.timeScale; // create an event object\n\n          var event = {\n            timestamp: timing.timestamp\n          };\n          Events.trigger(engine, 'beforeUpdate', event); // get lists of all bodies and constraints, no matter what composites they are in\n\n          var allBodies = Composite.allBodies(world),\n              allConstraints = Composite.allConstraints(world); // @if DEBUG\n          // reset metrics logging\n\n          Metrics.reset(engine.metrics); // @endif\n          // if sleeping enabled, call the sleeping controller\n\n          if (engine.enableSleeping) Sleeping.update(allBodies, timing.timeScale); // applies gravity to all bodies\n\n          Engine._bodiesApplyGravity(allBodies, world.gravity); // update all body position and rotation by integration\n\n\n          Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds); // update all constraints (first pass)\n\n\n          Constraint.preSolveAll(allBodies);\n\n          for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n          }\n\n          Constraint.postSolveAll(allBodies); // broadphase pass: find potential collision pairs\n\n          if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified) broadphase.controller.clear(broadphase); // update the grid buckets based on current bodies\n\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n          } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n          } // clear all composite modified flags\n\n\n          if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n          } // narrowphase pass: find actual collisions, then create or update collision pairs\n\n\n          var collisions = broadphase.detector(broadphasePairs, engine); // update collision pairs\n\n          var pairs = engine.pairs,\n              timestamp = timing.timestamp;\n          Pairs.update(pairs, collisions, timestamp);\n          Pairs.removeOld(pairs, timestamp); // wake up bodies involved in collisions\n\n          if (engine.enableSleeping) Sleeping.afterCollisions(pairs.list, timing.timeScale); // trigger collision events\n\n          if (pairs.collisionStart.length > 0) Events.trigger(engine, 'collisionStart', {\n            pairs: pairs.collisionStart\n          }); // iteratively resolve position between collisions\n\n          Resolver.preSolvePosition(pairs.list);\n\n          for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n          }\n\n          Resolver.postSolvePosition(allBodies); // update all constraints (second pass)\n\n          Constraint.preSolveAll(allBodies);\n\n          for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n          }\n\n          Constraint.postSolveAll(allBodies); // iteratively resolve velocity between collisions\n\n          Resolver.preSolveVelocity(pairs.list);\n\n          for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n          } // trigger collision events\n\n\n          if (pairs.collisionActive.length > 0) Events.trigger(engine, 'collisionActive', {\n            pairs: pairs.collisionActive\n          });\n          if (pairs.collisionEnd.length > 0) Events.trigger(engine, 'collisionEnd', {\n            pairs: pairs.collisionEnd\n          }); // @if DEBUG\n          // update metrics log\n\n          Metrics.update(engine.metrics, engine); // @endif\n          // clear force buffers\n\n          Engine._bodiesClearForces(allBodies);\n\n          Events.trigger(engine, 'afterUpdate', event);\n          return engine;\n        };\n        /**\n         * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n         * @method merge\n         * @param {engine} engineA\n         * @param {engine} engineB\n         */\n\n\n        Engine.merge = function (engineA, engineB) {\n          Common.extend(engineA, engineB);\n\n          if (engineB.world) {\n            engineA.world = engineB.world;\n            Engine.clear(engineA);\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n              var body = bodies[i];\n              Sleeping.set(body, false);\n              body.id = Common.nextId();\n            }\n          }\n        };\n        /**\n         * Clears the engine including the world, pairs and broadphase.\n         * @method clear\n         * @param {engine} engine\n         */\n\n\n        Engine.clear = function (engine) {\n          var world = engine.world;\n          Pairs.clear(engine.pairs);\n          var broadphase = engine.broadphase;\n\n          if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n          }\n        };\n        /**\n         * Zeroes the `body.force` and `body.torque` force buffers.\n         * @method _bodiesClearForces\n         * @private\n         * @param {body[]} bodies\n         */\n\n\n        Engine._bodiesClearForces = function (bodies) {\n          for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i]; // reset force buffers\n\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n          }\n        };\n        /**\n         * Applys a mass dependant force to all given bodies.\n         * @method _bodiesApplyGravity\n         * @private\n         * @param {body[]} bodies\n         * @param {vector} gravity\n         */\n\n\n        Engine._bodiesApplyGravity = function (bodies, gravity) {\n          var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n          if (gravity.x === 0 && gravity.y === 0 || gravityScale === 0) {\n            return;\n          }\n\n          for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            if (body.isStatic || body.isSleeping) continue; // apply gravity\n\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n          }\n        };\n        /**\n         * Applys `Body.update` to all given `bodies`.\n         * @method _bodiesUpdate\n         * @private\n         * @param {body[]} bodies\n         * @param {number} deltaTime \n         * The amount of time elapsed between updates\n         * @param {number} timeScale\n         * @param {number} correction \n         * The Verlet correction factor (deltaTime / lastDeltaTime)\n         * @param {bounds} worldBounds\n         */\n\n\n        Engine._bodiesUpdate = function (bodies, deltaTime, timeScale, correction, worldBounds) {\n          for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            if (body.isStatic || body.isSleeping) continue;\n            Body.update(body, deltaTime, timeScale, correction);\n          }\n        };\n        /**\n         * An alias for `Runner.run`, see `Matter.Runner` for more information.\n         * @method run\n         * @param {engine} engine\n         */\n\n        /**\n        * Fired just before an update\n        *\n        * @event beforeUpdate\n        * @param {} event An event object\n        * @param {number} event.timestamp The engine.timing.timestamp of the event\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired after engine update and all collision events\n        *\n        * @event afterUpdate\n        * @param {} event An event object\n        * @param {number} event.timestamp The engine.timing.timestamp of the event\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n        *\n        * @event collisionStart\n        * @param {} event An event object\n        * @param {} event.pairs List of affected pairs\n        * @param {number} event.timestamp The engine.timing.timestamp of the event\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n        *\n        * @event collisionActive\n        * @param {} event An event object\n        * @param {} event.pairs List of affected pairs\n        * @param {number} event.timestamp The engine.timing.timestamp of the event\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n        *\n        * @event collisionEnd\n        * @param {} event An event object\n        * @param {} event.pairs List of affected pairs\n        * @param {number} event.timestamp The engine.timing.timestamp of the event\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /*\n        *\n        *  Properties Documentation\n        *\n        */\n\n        /**\n         * An integer `Number` that specifies the number of position iterations to perform each update.\n         * The higher the value, the higher quality the simulation will be at the expense of performance.\n         *\n         * @property positionIterations\n         * @type number\n         * @default 6\n         */\n\n        /**\n         * An integer `Number` that specifies the number of velocity iterations to perform each update.\n         * The higher the value, the higher quality the simulation will be at the expense of performance.\n         *\n         * @property velocityIterations\n         * @type number\n         * @default 4\n         */\n\n        /**\n         * An integer `Number` that specifies the number of constraint iterations to perform each update.\n         * The higher the value, the higher quality the simulation will be at the expense of performance.\n         * The default value of `2` is usually very adequate.\n         *\n         * @property constraintIterations\n         * @type number\n         * @default 2\n         */\n\n        /**\n         * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n         * Sleeping can improve stability and performance, but often at the expense of accuracy.\n         *\n         * @property enableSleeping\n         * @type boolean\n         * @default false\n         */\n\n        /**\n         * An `Object` containing properties regarding the timing systems of the engine. \n         *\n         * @property timing\n         * @type object\n         */\n\n        /**\n         * A `Number` that specifies the global scaling factor of time for all bodies.\n         * A value of `0` freezes the simulation.\n         * A value of `0.1` gives a slow-motion effect.\n         * A value of `1.2` gives a speed-up effect.\n         *\n         * @property timing.timeScale\n         * @type number\n         * @default 1\n         */\n\n        /**\n         * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n         * It is incremented on every `Engine.update` by the given `delta` argument. \n         *\n         * @property timing.timestamp\n         * @type number\n         * @default 0\n         */\n\n        /**\n         * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n         * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n         *\n         * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n         * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n         *\n         * @property render\n         * @type render\n         * @deprecated see Demo.js for an example of creating a renderer\n         * @default a Matter.Render instance\n         */\n\n        /**\n         * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n         *\n         * @property broadphase\n         * @type grid\n         * @default a Matter.Grid instance\n         */\n\n        /**\n         * A `World` composite object that will contain all simulated bodies and constraints.\n         *\n         * @property world\n         * @type world\n         * @default a Matter.World instance\n         */\n\n        /**\n         * An object reserved for storing plugin-specific properties.\n         *\n         * @property plugin\n         * @type {}\n         */\n\n      })();\n      /***/\n\n    },\n    /* 23 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      // @if DEBUG\n\n      /**\n      * _Internal Class_, not generally used outside of the engine's internals.\n      *\n      */\n      var Metrics = {};\n      module.exports = Metrics;\n\n      var Composite = __webpack_require__(5);\n\n      var Common = __webpack_require__(0);\n\n      (function () {\n        /**\n         * Creates a new metrics.\n         * @method create\n         * @private\n         * @return {metrics} A new metrics\n         */\n        Metrics.create = function (options) {\n          var defaults = {\n            extended: false,\n            narrowDetections: 0,\n            narrowphaseTests: 0,\n            narrowReuse: 0,\n            narrowReuseCount: 0,\n            midphaseTests: 0,\n            broadphaseTests: 0,\n            narrowEff: 0.0001,\n            midEff: 0.0001,\n            broadEff: 0.0001,\n            collisions: 0,\n            buckets: 0,\n            bodies: 0,\n            pairs: 0\n          };\n          return Common.extend(defaults, false, options);\n        };\n        /**\n         * Resets metrics.\n         * @method reset\n         * @private\n         * @param {metrics} metrics\n         */\n\n\n        Metrics.reset = function (metrics) {\n          if (metrics.extended) {\n            metrics.narrowDetections = 0;\n            metrics.narrowphaseTests = 0;\n            metrics.narrowReuse = 0;\n            metrics.narrowReuseCount = 0;\n            metrics.midphaseTests = 0;\n            metrics.broadphaseTests = 0;\n            metrics.narrowEff = 0;\n            metrics.midEff = 0;\n            metrics.broadEff = 0;\n            metrics.collisions = 0;\n            metrics.buckets = 0;\n            metrics.pairs = 0;\n            metrics.bodies = 0;\n          }\n        };\n        /**\n         * Updates metrics.\n         * @method update\n         * @private\n         * @param {metrics} metrics\n         * @param {engine} engine\n         */\n\n\n        Metrics.update = function (metrics, engine) {\n          if (metrics.extended) {\n            var world = engine.world,\n                bodies = Composite.allBodies(world);\n            metrics.collisions = metrics.narrowDetections;\n            metrics.pairs = engine.pairs.list.length;\n            metrics.bodies = bodies.length;\n            metrics.midEff = (metrics.narrowDetections / (metrics.midphaseTests || 1)).toFixed(2);\n            metrics.narrowEff = (metrics.narrowDetections / (metrics.narrowphaseTests || 1)).toFixed(2);\n            metrics.broadEff = (1 - metrics.broadphaseTests / (bodies.length || 1)).toFixed(2);\n            metrics.narrowReuse = (metrics.narrowReuseCount / (metrics.narrowphaseTests || 1)).toFixed(2); //var broadphase = engine.broadphase[engine.broadphase.current];\n            //if (broadphase.instance)\n            //    metrics.buckets = Common.keys(broadphase.instance.buckets).length;\n          }\n        };\n      })(); // @endif\n\n      /***/\n\n    },\n    /* 24 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var Matter = module.exports = __webpack_require__(25);\n\n      Matter.Body = __webpack_require__(6);\n      Matter.Composite = __webpack_require__(5);\n      Matter.World = __webpack_require__(19);\n      Matter.Contact = __webpack_require__(18);\n      Matter.Detector = __webpack_require__(12);\n      Matter.Grid = __webpack_require__(11);\n      Matter.Pairs = __webpack_require__(20);\n      Matter.Pair = __webpack_require__(9);\n      Matter.Query = __webpack_require__(26);\n      Matter.Resolver = __webpack_require__(21);\n      Matter.SAT = __webpack_require__(13);\n      Matter.Constraint = __webpack_require__(8);\n      Matter.MouseConstraint = __webpack_require__(28);\n      Matter.Common = __webpack_require__(0);\n      Matter.Engine = __webpack_require__(22);\n      Matter.Events = __webpack_require__(4);\n      Matter.Mouse = __webpack_require__(14);\n      Matter.Runner = __webpack_require__(29);\n      Matter.Sleeping = __webpack_require__(7);\n      Matter.Plugin = __webpack_require__(17); // @if DEBUG\n\n      Matter.Metrics = __webpack_require__(23); // @endif\n\n      Matter.Bodies = __webpack_require__(16);\n      Matter.Composites = __webpack_require__(30);\n      Matter.Axes = __webpack_require__(15);\n      Matter.Bounds = __webpack_require__(1);\n      Matter.Svg = __webpack_require__(31);\n      Matter.Vector = __webpack_require__(2);\n      Matter.Vertices = __webpack_require__(3);\n      Matter.Render = __webpack_require__(10);\n      Matter.RenderPixi = __webpack_require__(32); // aliases\n\n      Matter.World.add = Matter.Composite.add;\n      Matter.World.remove = Matter.Composite.remove;\n      Matter.World.addComposite = Matter.Composite.addComposite;\n      Matter.World.addBody = Matter.Composite.addBody;\n      Matter.World.addConstraint = Matter.Composite.addConstraint;\n      Matter.World.clear = Matter.Composite.clear;\n      Matter.Engine.run = Matter.Runner.run;\n      /***/\n    },\n    /* 25 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\r\n      * The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\r\n      *\r\n      * @class Matter\r\n      */\n      var Matter = {};\n      module.exports = Matter;\n\n      var Plugin = __webpack_require__(17);\n\n      var Common = __webpack_require__(0);\n\n      (function () {\n        /**\r\n         * The library name.\r\n         * @property name\r\n         * @readOnly\r\n         * @type {String}\r\n         */\n        Matter.name = 'matter-js';\n        /**\r\n         * The library version.\r\n         * @property version\r\n         * @readOnly\r\n         * @type {String}\r\n         */\n\n        Matter.version = true ? \"0.16.1\" : undefined;\n        /**\r\n         * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\r\n         * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\r\n         * @property uses\r\n         * @type {Array}\r\n         */\n\n        Matter.uses = [];\n        /**\r\n         * The plugins that have been installed through `Matter.Plugin.install`. Read only.\r\n         * @property used\r\n         * @readOnly\r\n         * @type {Array}\r\n         */\n\n        Matter.used = [];\n        /**\r\n         * Installs the given plugins on the `Matter` namespace.\r\n         * This is a short-hand for `Plugin.use`, see it for more information.\r\n         * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\r\n         * Avoid calling this function multiple times unless you intend to manually control installation order.\r\n         * @method use\r\n         * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\r\n         */\n\n        Matter.use = function () {\n          Plugin.use(Matter, Array.prototype.slice.call(arguments));\n        };\n        /**\r\n         * Chains a function to excute before the original function on the given `path` relative to `Matter`.\r\n         * See also docs for `Common.chain`.\r\n         * @method before\r\n         * @param {string} path The path relative to `Matter`\r\n         * @param {function} func The function to chain before the original\r\n         * @return {function} The chained function that replaced the original\r\n         */\n\n\n        Matter.before = function (path, func) {\n          path = path.replace(/^Matter./, '');\n          return Common.chainPathBefore(Matter, path, func);\n        };\n        /**\r\n         * Chains a function to excute after the original function on the given `path` relative to `Matter`.\r\n         * See also docs for `Common.chain`.\r\n         * @method after\r\n         * @param {string} path The path relative to `Matter`\r\n         * @param {function} func The function to chain after the original\r\n         * @return {function} The chained function that replaced the original\r\n         */\n\n\n        Matter.after = function (path, func) {\n          path = path.replace(/^Matter./, '');\n          return Common.chainPathAfter(Matter, path, func);\n        };\n      })();\n      /***/\n\n    },\n    /* 26 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Query` module contains methods for performing collision queries.\n      *\n      * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n      *\n      * @class Query\n      */\n      var Query = {};\n      module.exports = Query;\n\n      var Vector = __webpack_require__(2);\n\n      var SAT = __webpack_require__(13);\n\n      var Bounds = __webpack_require__(1);\n\n      var Bodies = __webpack_require__(16);\n\n      var Vertices = __webpack_require__(3);\n\n      (function () {\n        /**\n         * Returns a list of collisions between `body` and `bodies`.\n         * @method collides\n         * @param {body} body\n         * @param {body[]} bodies\n         * @return {object[]} Collisions\n         */\n        Query.collides = function (body, bodies) {\n          var collisions = [];\n\n          for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n\n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n              for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                var part = bodyA.parts[j];\n\n                if (Bounds.overlaps(part.bounds, body.bounds)) {\n                  var collision = SAT.collides(part, body);\n\n                  if (collision.collided) {\n                    collisions.push(collision);\n                    break;\n                  }\n                }\n              }\n            }\n          }\n\n          return collisions;\n        };\n        /**\n         * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n         * @method ray\n         * @param {body[]} bodies\n         * @param {vector} startPoint\n         * @param {vector} endPoint\n         * @param {number} [rayWidth]\n         * @return {object[]} Collisions\n         */\n\n\n        Query.ray = function (bodies, startPoint, endPoint, rayWidth) {\n          rayWidth = rayWidth || 1e-100;\n          var rayAngle = Vector.angle(startPoint, endPoint),\n              rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n              rayX = (endPoint.x + startPoint.x) * 0.5,\n              rayY = (endPoint.y + startPoint.y) * 0.5,\n              ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, {\n            angle: rayAngle\n          }),\n              collisions = Query.collides(ray, bodies);\n\n          for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;\n          }\n\n          return collisions;\n        };\n        /**\n         * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n         * @method region\n         * @param {body[]} bodies\n         * @param {bounds} bounds\n         * @param {bool} [outside=false]\n         * @return {body[]} The bodies matching the query\n         */\n\n\n        Query.region = function (bodies, bounds, outside) {\n          var result = [];\n\n          for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if (overlaps && !outside || !overlaps && outside) result.push(body);\n          }\n\n          return result;\n        };\n        /**\n         * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n         * @method point\n         * @param {body[]} bodies\n         * @param {vector} point\n         * @return {body[]} The bodies matching the query\n         */\n\n\n        Query.point = function (bodies, point) {\n          var result = [];\n\n          for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (Bounds.contains(body.bounds, point)) {\n              for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                var part = body.parts[j];\n\n                if (Bounds.contains(part.bounds, point) && Vertices.contains(part.vertices, point)) {\n                  result.push(body);\n                  break;\n                }\n              }\n            }\n          }\n\n          return result;\n        };\n      })();\n      /***/\n\n    },\n    /* 27 */\n\n    /***/\n    function (module, exports) {\n      if (typeof __WEBPACK_EXTERNAL_MODULE__27__ === 'undefined') {\n        var e = new Error(\"Cannot find module 'undefined'\");\n        e.code = 'MODULE_NOT_FOUND';\n        throw e;\n      }\n\n      module.exports = __WEBPACK_EXTERNAL_MODULE__27__;\n      /***/\n    },\n    /* 28 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n      * Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n      *\n      * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n      *\n      * @class MouseConstraint\n      */\n      var MouseConstraint = {};\n      module.exports = MouseConstraint;\n\n      var Vertices = __webpack_require__(3);\n\n      var Sleeping = __webpack_require__(7);\n\n      var Mouse = __webpack_require__(14);\n\n      var Events = __webpack_require__(4);\n\n      var Detector = __webpack_require__(12);\n\n      var Constraint = __webpack_require__(8);\n\n      var Composite = __webpack_require__(5);\n\n      var Common = __webpack_require__(0);\n\n      var Bounds = __webpack_require__(1);\n\n      (function () {\n        /**\n         * Creates a new mouse constraint.\n         * All properties have default values, and many are pre-calculated automatically based on other properties.\n         * See the properties section below for detailed information on what you can pass via the `options` object.\n         * @method create\n         * @param {engine} engine\n         * @param {} options\n         * @return {MouseConstraint} A new MouseConstraint\n         */\n        MouseConstraint.create = function (engine, options) {\n          var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n          if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n              mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n              mouse = Mouse.create(options.element);\n            } else {\n              mouse = Mouse.create();\n              Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n          }\n\n          var constraint = Constraint.create({\n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: {\n              x: 0,\n              y: 0\n            },\n            length: 0.01,\n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n              strokeStyle: '#90EE90',\n              lineWidth: 3\n            }\n          });\n          var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n              category: 0x0001,\n              mask: 0xFFFFFFFF,\n              group: 0\n            }\n          };\n          var mouseConstraint = Common.extend(defaults, options);\n          Events.on(engine, 'beforeUpdate', function () {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n\n            MouseConstraint._triggerEvents(mouseConstraint);\n          });\n          return mouseConstraint;\n        };\n        /**\n         * Updates the given mouse constraint.\n         * @private\n         * @method update\n         * @param {MouseConstraint} mouseConstraint\n         * @param {body[]} bodies\n         */\n\n\n        MouseConstraint.update = function (mouseConstraint, bodies) {\n          var mouse = mouseConstraint.mouse,\n              constraint = mouseConstraint.constraint,\n              body = mouseConstraint.body;\n\n          if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n              for (var i = 0; i < bodies.length; i++) {\n                body = bodies[i];\n\n                if (Bounds.contains(body.bounds, mouse.position) && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                  for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Vertices.contains(part.vertices, mouse.position)) {\n                      constraint.pointA = mouse.position;\n                      constraint.bodyB = mouseConstraint.body = body;\n                      constraint.pointB = {\n                        x: mouse.position.x - body.position.x,\n                        y: mouse.position.y - body.position.y\n                      };\n                      constraint.angleB = body.angle;\n                      Sleeping.set(body, false);\n                      Events.trigger(mouseConstraint, 'startdrag', {\n                        mouse: mouse,\n                        body: body\n                      });\n                      break;\n                    }\n                  }\n                }\n              }\n            } else {\n              Sleeping.set(constraint.bodyB, false);\n              constraint.pointA = mouse.position;\n            }\n          } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n            if (body) Events.trigger(mouseConstraint, 'enddrag', {\n              mouse: mouse,\n              body: body\n            });\n          }\n        };\n        /**\n         * Triggers mouse constraint events.\n         * @method _triggerEvents\n         * @private\n         * @param {mouse} mouseConstraint\n         */\n\n\n        MouseConstraint._triggerEvents = function (mouseConstraint) {\n          var mouse = mouseConstraint.mouse,\n              mouseEvents = mouse.sourceEvents;\n          if (mouseEvents.mousemove) Events.trigger(mouseConstraint, 'mousemove', {\n            mouse: mouse\n          });\n          if (mouseEvents.mousedown) Events.trigger(mouseConstraint, 'mousedown', {\n            mouse: mouse\n          });\n          if (mouseEvents.mouseup) Events.trigger(mouseConstraint, 'mouseup', {\n            mouse: mouse\n          }); // reset the mouse state ready for the next step\n\n          Mouse.clearSourceEvents(mouse);\n        };\n        /*\n        *\n        *  Events Documentation\n        *\n        */\n\n        /**\n        * Fired when the mouse has moved (or a touch moves) during the last step\n        *\n        * @event mousemove\n        * @param {} event An event object\n        * @param {mouse} event.mouse The engine's mouse instance\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired when the mouse is down (or a touch has started) during the last step\n        *\n        * @event mousedown\n        * @param {} event An event object\n        * @param {mouse} event.mouse The engine's mouse instance\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired when the mouse is up (or a touch has ended) during the last step\n        *\n        * @event mouseup\n        * @param {} event An event object\n        * @param {mouse} event.mouse The engine's mouse instance\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired when the user starts dragging a body\n        *\n        * @event startdrag\n        * @param {} event An event object\n        * @param {mouse} event.mouse The engine's mouse instance\n        * @param {body} event.body The body being dragged\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired when the user ends dragging a body\n        *\n        * @event enddrag\n        * @param {} event An event object\n        * @param {mouse} event.mouse The engine's mouse instance\n        * @param {body} event.body The body that has stopped being dragged\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /*\n        *\n        *  Properties Documentation\n        *\n        */\n\n        /**\n         * A `String` denoting the type of object.\n         *\n         * @property type\n         * @type string\n         * @default \"constraint\"\n         * @readOnly\n         */\n\n        /**\n         * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n         *\n         * @property mouse\n         * @type mouse\n         * @default mouse\n         */\n\n        /**\n         * The `Body` that is currently being moved by the user, or `null` if no body.\n         *\n         * @property body\n         * @type body\n         * @default null\n         */\n\n        /**\n         * The `Constraint` object that is used to move the body during interaction.\n         *\n         * @property constraint\n         * @type constraint\n         */\n\n        /**\n         * An `Object` that specifies the collision filter properties.\n         * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n         * See `body.collisionFilter` for more information.\n         *\n         * @property collisionFilter\n         * @type object\n         */\n\n      })();\n      /***/\n\n    },\n    /* 29 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Runner` module is an optional utility which provides a game loop, \n      * that handles continuously updating a `Matter.Engine` for you within a browser.\n      * It is intended for development and debugging purposes, but may also be suitable for simple games.\n      * If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n      * Instead just call `Engine.update(engine, delta)` in your own loop.\n      *\n      * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n      *\n      * @class Runner\n      */\n      var Runner = {};\n      module.exports = Runner;\n\n      var Events = __webpack_require__(4);\n\n      var Engine = __webpack_require__(22);\n\n      var Common = __webpack_require__(0);\n\n      (function () {\n        var _requestAnimationFrame, _cancelAnimationFrame;\n\n        if (typeof window !== 'undefined') {\n          _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n          _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n        }\n\n        if (!_requestAnimationFrame) {\n          var _frameTimeout;\n\n          _requestAnimationFrame = function _requestAnimationFrame(callback) {\n            _frameTimeout = setTimeout(function () {\n              callback(Common.now());\n            }, 1000 / 60);\n          };\n\n          _cancelAnimationFrame = function _cancelAnimationFrame() {\n            clearTimeout(_frameTimeout);\n          };\n        }\n        /**\n         * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n         * @method create\n         * @param {} options\n         */\n\n\n        Runner.create = function (options) {\n          var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n          };\n          var runner = Common.extend(defaults, options);\n          runner.delta = runner.delta || 1000 / runner.fps;\n          runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n          runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n          runner.fps = 1000 / runner.delta;\n          return runner;\n        };\n        /**\n         * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n         * @method run\n         * @param {engine} engine\n         */\n\n\n        Runner.run = function (runner, engine) {\n          // create runner if engine is first argument\n          if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n          }\n\n          (function render(time) {\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n              Runner.tick(runner, engine, time);\n            }\n          })();\n\n          return runner;\n        };\n        /**\n         * A game loop utility that updates the engine and renderer by one step (a 'tick').\n         * Features delta smoothing, time correction and fixed or dynamic timing.\n         * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n         * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n         * @method tick\n         * @param {runner} runner\n         * @param {engine} engine\n         * @param {number} time\n         */\n\n\n        Runner.tick = function (runner, engine, time) {\n          var timing = engine.timing,\n              correction = 1,\n              delta; // create an event object\n\n          var event = {\n            timestamp: timing.timestamp\n          };\n          Events.trigger(runner, 'beforeTick', event);\n          Events.trigger(engine, 'beforeTick', event); // back compatibility\n\n          if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n          } else {\n            // dynamic timestep based on wall clock between calls\n            delta = time - runner.timePrev || runner.delta;\n            runner.timePrev = time; // optimistically filter delta over a few frames, to improve stability\n\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory); // limit delta\n\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta; // correction for delta\n\n            correction = delta / runner.delta; // update engine timing object\n\n            runner.delta = delta;\n          } // time correction for time scaling\n\n\n          if (runner.timeScalePrev !== 0) correction *= timing.timeScale / runner.timeScalePrev;\n          if (timing.timeScale === 0) correction = 0;\n          runner.timeScalePrev = timing.timeScale;\n          runner.correction = correction; // fps counter\n\n          runner.frameCounter += 1;\n\n          if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n          }\n\n          Events.trigger(runner, 'tick', event);\n          Events.trigger(engine, 'tick', event); // back compatibility\n          // if world has been modified, clear the render scene graph\n\n          if (engine.world.isModified && engine.render && engine.render.controller && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // back compatibility\n          } // update\n\n\n          Events.trigger(runner, 'beforeUpdate', event);\n          Engine.update(engine, delta, correction);\n          Events.trigger(runner, 'afterUpdate', event); // render\n          // back compatibility\n\n          if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // back compatibility\n\n            engine.render.controller.world(engine.render);\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // back compatibility\n          }\n\n          Events.trigger(runner, 'afterTick', event);\n          Events.trigger(engine, 'afterTick', event); // back compatibility\n        };\n        /**\n         * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n         * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n         * @method stop\n         * @param {runner} runner\n         */\n\n\n        Runner.stop = function (runner) {\n          _cancelAnimationFrame(runner.frameRequestId);\n        };\n        /**\n         * Alias for `Runner.run`.\n         * @method start\n         * @param {runner} runner\n         * @param {engine} engine\n         */\n\n\n        Runner.start = function (runner, engine) {\n          Runner.run(runner, engine);\n        };\n        /*\n        *\n        *  Events Documentation\n        *\n        */\n\n        /**\n        * Fired at the start of a tick, before any updates to the engine or timing\n        *\n        * @event beforeTick\n        * @param {} event An event object\n        * @param {number} event.timestamp The engine.timing.timestamp of the event\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired after engine timing updated, but just before update\n        *\n        * @event tick\n        * @param {} event An event object\n        * @param {number} event.timestamp The engine.timing.timestamp of the event\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired at the end of a tick, after engine update and after rendering\n        *\n        * @event afterTick\n        * @param {} event An event object\n        * @param {number} event.timestamp The engine.timing.timestamp of the event\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired before update\n        *\n        * @event beforeUpdate\n        * @param {} event An event object\n        * @param {number} event.timestamp The engine.timing.timestamp of the event\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired after update\n        *\n        * @event afterUpdate\n        * @param {} event An event object\n        * @param {number} event.timestamp The engine.timing.timestamp of the event\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        */\n\n        /**\n        * Fired before rendering\n        *\n        * @event beforeRender\n        * @param {} event An event object\n        * @param {number} event.timestamp The engine.timing.timestamp of the event\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        * @deprecated\n        */\n\n        /**\n        * Fired after rendering\n        *\n        * @event afterRender\n        * @param {} event An event object\n        * @param {number} event.timestamp The engine.timing.timestamp of the event\n        * @param {} event.source The source object of the event\n        * @param {} event.name The name of the event\n        * @deprecated\n        */\n\n        /*\n        *\n        *  Properties Documentation\n        *\n        */\n\n        /**\n         * A flag that specifies whether the runner is running or not.\n         *\n         * @property enabled\n         * @type boolean\n         * @default true\n         */\n\n        /**\n         * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n         * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n         * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n         *\n         * @property isFixed\n         * @type boolean\n         * @default false\n         */\n\n        /**\n         * A `Number` that specifies the time step between updates in milliseconds.\n         * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n         * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n         *\n         * @property delta\n         * @type number\n         * @default 1000 / 60\n         */\n\n      })();\n      /***/\n\n    },\n    /* 30 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Composites` module contains factory methods for creating composite bodies\n      * with commonly used configurations (such as stacks and chains).\n      *\n      * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n      *\n      * @class Composites\n      */\n      var Composites = {};\n      module.exports = Composites;\n\n      var Composite = __webpack_require__(5);\n\n      var Constraint = __webpack_require__(8);\n\n      var Common = __webpack_require__(0);\n\n      var Body = __webpack_require__(6);\n\n      var Bodies = __webpack_require__(16);\n\n      (function () {\n        /**\n         * Create a new composite containing bodies created in the callback in a grid arrangement.\n         * This function uses the body's bounds to prevent overlaps.\n         * @method stack\n         * @param {number} xx\n         * @param {number} yy\n         * @param {number} columns\n         * @param {number} rows\n         * @param {number} columnGap\n         * @param {number} rowGap\n         * @param {function} callback\n         * @return {composite} A new composite containing objects created in the callback\n         */\n        Composites.stack = function (xx, yy, columns, rows, columnGap, rowGap, callback) {\n          var stack = Composite.create({\n            label: 'Stack'\n          }),\n              x = xx,\n              y = yy,\n              lastBody,\n              i = 0;\n\n          for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n\n            for (var column = 0; column < columns; column++) {\n              var body = callback(x, y, column, row, lastBody, i);\n\n              if (body) {\n                var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                    bodyWidth = body.bounds.max.x - body.bounds.min.x;\n                if (bodyHeight > maxHeight) maxHeight = bodyHeight;\n                Body.translate(body, {\n                  x: bodyWidth * 0.5,\n                  y: bodyHeight * 0.5\n                });\n                x = body.bounds.max.x + columnGap;\n                Composite.addBody(stack, body);\n                lastBody = body;\n                i += 1;\n              } else {\n                x += columnGap;\n              }\n            }\n\n            y += maxHeight + rowGap;\n            x = xx;\n          }\n\n          return stack;\n        };\n        /**\n         * Chains all bodies in the given composite together using constraints.\n         * @method chain\n         * @param {composite} composite\n         * @param {number} xOffsetA\n         * @param {number} yOffsetA\n         * @param {number} xOffsetB\n         * @param {number} yOffsetB\n         * @param {object} options\n         * @return {composite} A new composite containing objects chained together with constraints\n         */\n\n\n        Composites.chain = function (composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n          var bodies = composite.bodies;\n\n          for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x,\n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n            var defaults = {\n              bodyA: bodyA,\n              pointA: {\n                x: bodyAWidth * xOffsetA,\n                y: bodyAHeight * yOffsetA\n              },\n              bodyB: bodyB,\n              pointB: {\n                x: bodyBWidth * xOffsetB,\n                y: bodyBHeight * yOffsetB\n              }\n            };\n            var constraint = Common.extend(defaults, options);\n            Composite.addConstraint(composite, Constraint.create(constraint));\n          }\n\n          composite.label += ' Chain';\n          return composite;\n        };\n        /**\n         * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n         * @method mesh\n         * @param {composite} composite\n         * @param {number} columns\n         * @param {number} rows\n         * @param {boolean} crossBrace\n         * @param {object} options\n         * @return {composite} The composite containing objects meshed together with constraints\n         */\n\n\n        Composites.mesh = function (composite, columns, rows, crossBrace, options) {\n          var bodies = composite.bodies,\n              row,\n              col,\n              bodyA,\n              bodyB,\n              bodyC;\n\n          for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n              bodyA = bodies[col - 1 + row * columns];\n              bodyB = bodies[col + row * columns];\n              Composite.addConstraint(composite, Constraint.create(Common.extend({\n                bodyA: bodyA,\n                bodyB: bodyB\n              }, options)));\n            }\n\n            if (row > 0) {\n              for (col = 0; col < columns; col++) {\n                bodyA = bodies[col + (row - 1) * columns];\n                bodyB = bodies[col + row * columns];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({\n                  bodyA: bodyA,\n                  bodyB: bodyB\n                }, options)));\n\n                if (crossBrace && col > 0) {\n                  bodyC = bodies[col - 1 + (row - 1) * columns];\n                  Composite.addConstraint(composite, Constraint.create(Common.extend({\n                    bodyA: bodyC,\n                    bodyB: bodyB\n                  }, options)));\n                }\n\n                if (crossBrace && col < columns - 1) {\n                  bodyC = bodies[col + 1 + (row - 1) * columns];\n                  Composite.addConstraint(composite, Constraint.create(Common.extend({\n                    bodyA: bodyC,\n                    bodyB: bodyB\n                  }, options)));\n                }\n              }\n            }\n          }\n\n          composite.label += ' Mesh';\n          return composite;\n        };\n        /**\n         * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n         * This function uses the body's bounds to prevent overlaps.\n         * @method pyramid\n         * @param {number} xx\n         * @param {number} yy\n         * @param {number} columns\n         * @param {number} rows\n         * @param {number} columnGap\n         * @param {number} rowGap\n         * @param {function} callback\n         * @return {composite} A new composite containing objects created in the callback\n         */\n\n\n        Composites.pyramid = function (xx, yy, columns, rows, columnGap, rowGap, callback) {\n          return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function (x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            if (row > actualRows) return; // reverse row order\n\n            row = actualRows - row;\n            var start = row,\n                end = columns - 1 - row;\n            if (column < start || column > end) return; // retroactively fix the first body's position, since width was unknown\n\n            if (i === 1) {\n              Body.translate(lastBody, {\n                x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth,\n                y: 0\n              });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n          });\n        };\n        /**\n         * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n         * @method newtonsCradle\n         * @param {number} xx\n         * @param {number} yy\n         * @param {number} number\n         * @param {number} size\n         * @param {number} length\n         * @return {composite} A new composite newtonsCradle body\n         */\n\n\n        Composites.newtonsCradle = function (xx, yy, number, size, length) {\n          var newtonsCradle = Composite.create({\n            label: 'Newtons Cradle'\n          });\n\n          for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, {\n              inertia: Infinity,\n              restitution: 1,\n              friction: 0,\n              frictionAir: 0.0001,\n              slop: 1\n            }),\n                constraint = Constraint.create({\n              pointA: {\n                x: xx + i * (size * separation),\n                y: yy\n              },\n              bodyB: circle\n            });\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n          }\n\n          return newtonsCradle;\n        };\n        /**\n         * Creates a composite with simple car setup of bodies and constraints.\n         * @method car\n         * @param {number} xx\n         * @param {number} yy\n         * @param {number} width\n         * @param {number} height\n         * @param {number} wheelSize\n         * @return {composite} A new composite car body\n         */\n\n\n        Composites.car = function (xx, yy, width, height, wheelSize) {\n          var group = Body.nextGroup(true),\n              wheelBase = 20,\n              wheelAOffset = -width * 0.5 + wheelBase,\n              wheelBOffset = width * 0.5 - wheelBase,\n              wheelYOffset = 0;\n          var car = Composite.create({\n            label: 'Car'\n          }),\n              body = Bodies.rectangle(xx, yy, width, height, {\n            collisionFilter: {\n              group: group\n            },\n            chamfer: {\n              radius: height * 0.5\n            },\n            density: 0.0002\n          });\n          var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, {\n            collisionFilter: {\n              group: group\n            },\n            friction: 0.8\n          });\n          var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, {\n            collisionFilter: {\n              group: group\n            },\n            friction: 0.8\n          });\n          var axelA = Constraint.create({\n            bodyB: body,\n            pointB: {\n              x: wheelAOffset,\n              y: wheelYOffset\n            },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n          });\n          var axelB = Constraint.create({\n            bodyB: body,\n            pointB: {\n              x: wheelBOffset,\n              y: wheelYOffset\n            },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n          });\n          Composite.addBody(car, body);\n          Composite.addBody(car, wheelA);\n          Composite.addBody(car, wheelB);\n          Composite.addConstraint(car, axelA);\n          Composite.addConstraint(car, axelB);\n          return car;\n        };\n        /**\n         * Creates a simple soft body like object.\n         * @method softBody\n         * @param {number} xx\n         * @param {number} yy\n         * @param {number} columns\n         * @param {number} rows\n         * @param {number} columnGap\n         * @param {number} rowGap\n         * @param {boolean} crossBrace\n         * @param {number} particleRadius\n         * @param {} particleOptions\n         * @param {} constraintOptions\n         * @return {composite} A new composite softBody\n         */\n\n\n        Composites.softBody = function (xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n          particleOptions = Common.extend({\n            inertia: Infinity\n          }, particleOptions);\n          constraintOptions = Common.extend({\n            stiffness: 0.2,\n            render: {\n              type: 'line',\n              anchors: false\n            }\n          }, constraintOptions);\n          var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function (x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n          });\n          Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n          softBody.label = 'Soft Body';\n          return softBody;\n        };\n      })();\n      /***/\n\n    },\n    /* 31 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n      *\n      * To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n      *\n      * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n      *\n      * @class Svg\n      */\n      var Svg = {};\n      module.exports = Svg;\n\n      var Bounds = __webpack_require__(1);\n\n      var Common = __webpack_require__(0);\n\n      (function () {\n        /**\n         * Converts an SVG path into an array of vector points.\n         * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n         * See `Bodies.fromVertices` which provides support for this.\n         * Note that this function is not guaranteed to support complex paths (such as those with holes).\n         * You must load the `pathseg.js` polyfill on newer browsers.\n         * @method pathToVertices\n         * @param {SVGPathElement} path\n         * @param {Number} [sampleLength=15]\n         * @return {Vector[]} points\n         */\n        Svg.pathToVertices = function (path, sampleLength) {\n          if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n          } // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n\n\n          var i,\n              il,\n              total,\n              point,\n              segment,\n              segments,\n              segmentsQueue,\n              lastSegment,\n              lastPoint,\n              segmentIndex,\n              points = [],\n              lx,\n              ly,\n              length = 0,\n              x = 0,\n              y = 0;\n          sampleLength = sampleLength || 15;\n\n          var addPoint = function addPoint(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1; // when the last point doesn't equal the current point add the current point\n\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n              if (lastPoint && isRelative) {\n                lx = lastPoint.x;\n                ly = lastPoint.y;\n              } else {\n                lx = 0;\n                ly = 0;\n              }\n\n              var point = {\n                x: lx + px,\n                y: ly + py\n              }; // set last point\n\n              if (isRelative || !lastPoint) {\n                lastPoint = point;\n              }\n\n              points.push(point);\n              x = lx + px;\n              y = ly + py;\n            }\n          };\n\n          var addSegmentPoint = function addSegmentPoint(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase(); // skip path ends\n\n            if (segType === 'Z') return; // map segment to x and y\n\n            switch (segType) {\n              case 'M':\n              case 'L':\n              case 'T':\n              case 'C':\n              case 'S':\n              case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n\n              case 'H':\n                x = segment.x;\n                break;\n\n              case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n          }; // ensure path is absolute\n\n\n          Svg._svgPathToAbsolute(path); // get total length\n\n\n          total = path.getTotalLength(); // queue segments\n\n          segments = [];\n\n          for (i = 0; i < path.pathSegList.numberOfItems; i += 1) {\n            segments.push(path.pathSegList.getItem(i));\n          }\n\n          segmentsQueue = segments.concat(); // sample through path\n\n          while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex]; // new segment\n\n            if (segment != lastSegment) {\n              while (segmentsQueue.length && segmentsQueue[0] != segment) {\n                addSegmentPoint(segmentsQueue.shift());\n              }\n\n              lastSegment = segment;\n            } // add points in between when curving\n            // TODO: adaptive sampling\n\n\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n              case 'C':\n              case 'T':\n              case 'S':\n              case 'Q':\n              case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n            } // increment by sample value\n\n\n            length += sampleLength;\n          } // add remaining segments not passed by sampling\n\n\n          for (i = 0, il = segmentsQueue.length; i < il; ++i) {\n            addSegmentPoint(segmentsQueue[i]);\n          }\n\n          return points;\n        };\n\n        Svg._svgPathToAbsolute = function (path) {\n          // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n          // Copyright (c) Gavin Kistner\n          // http://phrogz.net/js/_ReuseLicense.txt\n          // Modifications: tidy formatting and naming\n          var x0,\n              y0,\n              x1,\n              y1,\n              x2,\n              y2,\n              segs = path.pathSegList,\n              x = 0,\n              y = 0,\n              len = segs.numberOfItems;\n\n          for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n              if ('x' in seg) x = seg.x;\n              if ('y' in seg) y = seg.y;\n            } else {\n              if ('x1' in seg) x1 = x + seg.x1;\n              if ('x2' in seg) x2 = x + seg.x2;\n              if ('y1' in seg) y1 = y + seg.y1;\n              if ('y2' in seg) y2 = y + seg.y2;\n              if ('x' in seg) x += seg.x;\n              if ('y' in seg) y += seg.y;\n\n              switch (segType) {\n                case 'm':\n                  segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                  break;\n\n                case 'l':\n                  segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                  break;\n\n                case 'h':\n                  segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                  break;\n\n                case 'v':\n                  segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                  break;\n\n                case 'c':\n                  segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                  break;\n\n                case 's':\n                  segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                  break;\n\n                case 'q':\n                  segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                  break;\n\n                case 't':\n                  segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                  break;\n\n                case 'a':\n                  segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                  break;\n\n                case 'z':\n                case 'Z':\n                  x = x0;\n                  y = y0;\n                  break;\n              }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n              x0 = x;\n              y0 = y;\n            }\n          }\n        };\n      })();\n      /***/\n\n    },\n    /* 32 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n      * The `Matter.RenderPixi` module is an example renderer using pixi.js.\n      * See also `Matter.Render` for a canvas based renderer.\n      *\n      * @class RenderPixi\n      * @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n      * It will likely be moved to its own repository (but maintenance will be limited).\n      */\n      var RenderPixi = {};\n      module.exports = RenderPixi;\n\n      var Bounds = __webpack_require__(1);\n\n      var Composite = __webpack_require__(5);\n\n      var Common = __webpack_require__(0);\n\n      var Events = __webpack_require__(4);\n\n      var Vector = __webpack_require__(2);\n\n      (function () {\n        var _requestAnimationFrame, _cancelAnimationFrame;\n\n        if (typeof window !== 'undefined') {\n          _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n            window.setTimeout(function () {\n              callback(Common.now());\n            }, 1000 / 60);\n          };\n\n          _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n        }\n        /**\n         * Creates a new Pixi.js WebGL renderer\n         * @method create\n         * @param {object} options\n         * @return {RenderPixi} A new renderer\n         * @deprecated\n         */\n\n\n        RenderPixi.create = function (options) {\n          Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n          var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n              width: 800,\n              height: 600,\n              background: '#fafafa',\n              wireframeBackground: '#222',\n              hasBounds: false,\n              enabled: true,\n              wireframes: true,\n              showSleeping: true,\n              showDebug: false,\n              showBroadphase: false,\n              showBounds: false,\n              showVelocity: false,\n              showCollisions: false,\n              showAxes: false,\n              showPositions: false,\n              showAngleIndicator: false,\n              showIds: false,\n              showShadows: false\n            }\n          };\n          var render = Common.extend(defaults, options),\n              transparent = !render.options.wireframes && render.options.background === 'transparent'; // init pixi\n\n          render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n          };\n          render.mouse = options.mouse;\n          render.engine = options.engine;\n          render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n          render.container = render.container || new PIXI.Container();\n          render.spriteContainer = render.spriteContainer || new PIXI.Container();\n          render.canvas = render.canvas || render.renderer.view;\n          render.bounds = render.bounds || {\n            min: {\n              x: 0,\n              y: 0\n            },\n            max: {\n              x: render.options.width,\n              y: render.options.height\n            }\n          }; // event listeners\n\n          Events.on(render.engine, 'beforeUpdate', function () {\n            RenderPixi.clear(render);\n          }); // caches\n\n          render.textures = {};\n          render.sprites = {};\n          render.primitives = {}; // use a sprite batch for performance\n\n          render.container.addChild(render.spriteContainer); // insert canvas\n\n          if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n          } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n          } // prevent menus on canvas\n\n\n          render.canvas.oncontextmenu = function () {\n            return false;\n          };\n\n          render.canvas.onselectstart = function () {\n            return false;\n          };\n\n          return render;\n        };\n        /**\n         * Continuously updates the render canvas on the `requestAnimationFrame` event.\n         * @method run\n         * @param {render} render\n         * @deprecated\n         */\n\n\n        RenderPixi.run = function (render) {\n          (function loop(time) {\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n          })();\n        };\n        /**\n         * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n         * @method stop\n         * @param {render} render\n         * @deprecated\n         */\n\n\n        RenderPixi.stop = function (render) {\n          _cancelAnimationFrame(render.frameRequestId);\n        };\n        /**\n         * Clears the scene graph\n         * @method clear\n         * @param {RenderPixi} render\n         * @deprecated\n         */\n\n\n        RenderPixi.clear = function (render) {\n          var container = render.container,\n              spriteContainer = render.spriteContainer; // clear stage container\n\n          while (container.children[0]) {\n            container.removeChild(container.children[0]);\n          } // clear sprite batch\n\n\n          while (spriteContainer.children[0]) {\n            spriteContainer.removeChild(spriteContainer.children[0]);\n          }\n\n          var bgSprite = render.sprites['bg-0']; // clear caches\n\n          render.textures = {};\n          render.sprites = {};\n          render.primitives = {}; // set background sprite\n\n          render.sprites['bg-0'] = bgSprite;\n          if (bgSprite) container.addChildAt(bgSprite, 0); // add sprite batch back into container\n\n          render.container.addChild(render.spriteContainer); // reset background state\n\n          render.currentBackground = null; // reset bounds transforms\n\n          container.scale.set(1, 1);\n          container.position.set(0, 0);\n        };\n        /**\n         * Sets the background of the canvas \n         * @method setBackground\n         * @param {RenderPixi} render\n         * @param {string} background\n         * @deprecated\n         */\n\n\n        RenderPixi.setBackground = function (render, background) {\n          if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n              // if solid background color\n              var color = Common.colorToNumber(background);\n              render.renderer.backgroundColor = color; // remove background sprite if existing\n\n              if (bgSprite) render.container.removeChild(bgSprite);\n            } else {\n              // initialise background sprite if needed\n              if (!bgSprite) {\n                var texture = _getTexture(render, background);\n\n                bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                bgSprite.position.x = 0;\n                bgSprite.position.y = 0;\n                render.container.addChildAt(bgSprite, 0);\n              }\n            }\n\n            render.currentBackground = background;\n          }\n        };\n        /**\n         * Description\n         * @method world\n         * @param {engine} engine\n         * @deprecated\n         */\n\n\n        RenderPixi.world = function (render) {\n          var engine = render.engine,\n              world = engine.world,\n              renderer = render.renderer,\n              container = render.container,\n              options = render.options,\n              bodies = Composite.allBodies(world),\n              allConstraints = Composite.allConstraints(world),\n              constraints = [],\n              i;\n\n          if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n          } else {\n            RenderPixi.setBackground(render, options.background);\n          } // handle bounds\n\n\n          var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n              boundsHeight = render.bounds.max.y - render.bounds.min.y,\n              boundsScaleX = boundsWidth / render.options.width,\n              boundsScaleY = boundsHeight / render.options.height;\n\n          if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n              var body = bodies[i];\n              body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            } // filter out constraints that are not in view\n\n\n            for (i = 0; i < allConstraints.length; i++) {\n              var constraint = allConstraints[i],\n                  bodyA = constraint.bodyA,\n                  bodyB = constraint.bodyB,\n                  pointAWorld = constraint.pointA,\n                  pointBWorld = constraint.pointB;\n              if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n              if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n              if (!pointAWorld || !pointBWorld) continue;\n              if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld)) constraints.push(constraint);\n            } // transform the view\n\n\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n          } else {\n            constraints = allConstraints;\n          }\n\n          for (i = 0; i < bodies.length; i++) {\n            RenderPixi.body(render, bodies[i]);\n          }\n\n          for (i = 0; i < constraints.length; i++) {\n            RenderPixi.constraint(render, constraints[i]);\n          }\n\n          renderer.render(container);\n        };\n        /**\n         * Description\n         * @method constraint\n         * @param {engine} engine\n         * @param {constraint} constraint\n         * @deprecated\n         */\n\n\n        RenderPixi.constraint = function (render, constraint) {\n          var engine = render.engine,\n              bodyA = constraint.bodyA,\n              bodyB = constraint.bodyB,\n              pointA = constraint.pointA,\n              pointB = constraint.pointB,\n              container = render.container,\n              constraintRender = constraint.render,\n              primitiveId = 'c-' + constraint.id,\n              primitive = render.primitives[primitiveId]; // initialise constraint primitive if not existing\n\n          if (!primitive) primitive = render.primitives[primitiveId] = new PIXI.Graphics(); // don't render if constraint does not have two end points\n\n          if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n          } // add to scene graph if not already there\n\n\n          if (Common.indexOf(container.children, primitive) === -1) container.addChild(primitive); // render the constraint on every update, since they can change dynamically\n\n          primitive.clear();\n          primitive.beginFill(0, 0);\n          primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n\n          if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n          } else {\n            primitive.moveTo(pointA.x, pointA.y);\n          }\n\n          if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n          } else {\n            primitive.lineTo(pointB.x, pointB.y);\n          }\n\n          primitive.endFill();\n        };\n        /**\n         * Description\n         * @method body\n         * @param {engine} engine\n         * @param {body} body\n         * @deprecated\n         */\n\n\n        RenderPixi.body = function (render, body) {\n          var engine = render.engine,\n              bodyRender = body.render;\n          if (!bodyRender.visible) return;\n\n          if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer; // initialise body sprite if not existing\n\n            if (!sprite) sprite = render.sprites[spriteId] = _createBodySprite(render, body); // add to scene graph if not already there\n\n            if (Common.indexOf(spriteContainer.children, sprite) === -1) spriteContainer.addChild(sprite); // update body sprite\n\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n          } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container; // initialise body primitive if not existing\n\n            if (!primitive) {\n              primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n              primitive.initialAngle = body.angle;\n            } // add to scene graph if not already there\n\n\n            if (Common.indexOf(container.children, primitive) === -1) container.addChild(primitive); // update body primitive\n\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n          }\n        };\n        /**\n         * Creates a body sprite\n         * @method _createBodySprite\n         * @private\n         * @param {RenderPixi} render\n         * @param {body} body\n         * @return {PIXI.Sprite} sprite\n         * @deprecated\n         */\n\n\n        var _createBodySprite = function _createBodySprite(render, body) {\n          var bodyRender = body.render,\n              texturePath = bodyRender.sprite.texture,\n              texture = _getTexture(render, texturePath),\n              sprite = new PIXI.Sprite(texture);\n\n          sprite.anchor.x = body.render.sprite.xOffset;\n          sprite.anchor.y = body.render.sprite.yOffset;\n          return sprite;\n        };\n        /**\n         * Creates a body primitive\n         * @method _createBodyPrimitive\n         * @private\n         * @param {RenderPixi} render\n         * @param {body} body\n         * @return {PIXI.Graphics} graphics\n         * @deprecated\n         */\n\n\n        var _createBodyPrimitive = function _createBodyPrimitive(render, body) {\n          var bodyRender = body.render,\n              options = render.options,\n              primitive = new PIXI.Graphics(),\n              fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n              strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n              strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n              strokeStyleWireframe = Common.colorToNumber('#bbb'),\n              strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n              part;\n          primitive.clear(); // handle compound parts\n\n          for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n              primitive.beginFill(fillStyle, 1);\n              primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n              primitive.beginFill(0, 0);\n              primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n              primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n            primitive.endFill(); // angle indicator\n\n            if (options.showAngleIndicator || options.showAxes) {\n              primitive.beginFill(0, 0);\n\n              if (options.wireframes) {\n                primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n              } else {\n                primitive.lineStyle(1, strokeStyleIndicator);\n              }\n\n              primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n              primitive.lineTo((part.vertices[0].x + part.vertices[part.vertices.length - 1].x) / 2 - body.position.x, (part.vertices[0].y + part.vertices[part.vertices.length - 1].y) / 2 - body.position.y);\n              primitive.endFill();\n            }\n          }\n\n          return primitive;\n        };\n        /**\n         * Gets the requested texture (a PIXI.Texture) via its path\n         * @method _getTexture\n         * @private\n         * @param {RenderPixi} render\n         * @param {string} imagePath\n         * @return {PIXI.Texture} texture\n         * @deprecated\n         */\n\n\n        var _getTexture = function _getTexture(render, imagePath) {\n          var texture = render.textures[imagePath];\n          if (!texture) texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n          return texture;\n        };\n      })();\n      /***/\n\n    }\n    /******/\n    ])\n  );\n});","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","import freeGlobal from './_freeGlobal.js';\n/** Detect free variable `exports`. */\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nexport default nodeUtil;"],"sourceRoot":""}